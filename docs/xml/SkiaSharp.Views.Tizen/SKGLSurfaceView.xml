<Type Name="SKGLSurfaceView" FullName="SkiaSharp.Views.Tizen.SKGLSurfaceView">
  <TypeSignature Language="C#" Value="public class SKGLSurfaceView : SkiaSharp.Views.Tizen.CustomRenderingView" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SKGLSurfaceView extends SkiaSharp.Views.Tizen.CustomRenderingView" />
  <TypeSignature Language="DocId" Value="T:SkiaSharp.Views.Tizen.SKGLSurfaceView" />
  <AssemblyInfo>
    <AssemblyName>SkiaSharp.Views.Tizen</AssemblyName>
    <AssemblyVersion>1.60.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>SkiaSharp.Views.Tizen.CustomRenderingView</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>A hardware-accelerated view that can be drawn on using SkiaSharp drawing commands.</summary>
    <remarks>
      <para></para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SKGLSurfaceView (ElmSharp.EvasObject parent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class ElmSharp.EvasObject parent) cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.Tizen.SKGLSurfaceView.#ctor(ElmSharp.EvasObject)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp.Views.Tizen</AssemblyName>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="parent" Type="ElmSharp.EvasObject" />
      </Parameters>
      <Docs>
        <param name="parent">The parent object.</param>
        <summary>Simple constructor to use when creating a <see cref="T:SkiaSharp.Views.Tizen.SKGLSurfaceView" /> from code.</summary>
        <remarks>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateDrawingSurface">
      <MemberSignature Language="C#" Value="protected override sealed void CreateDrawingSurface ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void CreateDrawingSurface() cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.Tizen.SKGLSurfaceView.CreateDrawingSurface" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp.Views.Tizen</AssemblyName>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Implemented by derived <see cref="T:SkiaSharp.Views.Tizen.CustomRenderingView" /> types to construct the drawing surface.</summary>
        <remarks>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateNativeResources">
      <MemberSignature Language="C#" Value="protected override sealed void CreateNativeResources (ElmSharp.EvasObject parent);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void CreateNativeResources(class ElmSharp.EvasObject parent) cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.Tizen.SKGLSurfaceView.CreateNativeResources(ElmSharp.EvasObject)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp.Views.Tizen</AssemblyName>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parent" Type="ElmSharp.EvasObject" />
      </Parameters>
      <Docs>
        <param name="parent">The parent object.</param>
        <summary>Implemented by derived <see cref="T:SkiaSharp.Views.Tizen.CustomRenderingView" /> types to create the native resources which should be present throughout whole life of the control.</summary>
        <remarks>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DestroyDrawingSurface">
      <MemberSignature Language="C#" Value="protected override sealed void DestroyDrawingSurface ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void DestroyDrawingSurface() cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.Tizen.SKGLSurfaceView.DestroyDrawingSurface" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp.Views.Tizen</AssemblyName>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Implemented by derived <see cref="T:SkiaSharp.Views.Tizen.CustomRenderingView" /> types to destroy the drawing surface.</summary>
        <remarks>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DestroyNativeResources">
      <MemberSignature Language="C#" Value="protected override sealed void DestroyNativeResources ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void DestroyNativeResources() cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.Tizen.SKGLSurfaceView.DestroyNativeResources" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp.Views.Tizen</AssemblyName>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Implemented by derived <see cref="T:SkiaSharp.Views.Tizen.CustomRenderingView" /> types to destroy the native resources.</summary>
        <remarks>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSurfaceSize">
      <MemberSignature Language="C#" Value="protected override SkiaSharp.SKSizeI GetSurfaceSize ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance valuetype SkiaSharp.SKSizeI GetSurfaceSize() cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.Tizen.SKGLSurfaceView.GetSurfaceSize" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp.Views.Tizen</AssemblyName>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>SkiaSharp.SKSizeI</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Implemented by derived <see cref="T:SkiaSharp.Views.Tizen.CustomRenderingView" /> types to provide the dimensions of the current drawing surface.</summary>
        <returns>Returns the current drawing surface dimensions.</returns>
        <remarks>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GRContext">
      <MemberSignature Language="C#" Value="public SkiaSharp.GRContext GRContext { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class SkiaSharp.GRContext GRContext" />
      <MemberSignature Language="DocId" Value="P:SkiaSharp.Views.Tizen.SKGLSurfaceView.GRContext" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp.Views.Tizen</AssemblyName>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>SkiaSharp.GRContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the current GPU context.</summary>
        <value>
          <para></para>
        </value>
        <remarks>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDrawFrame">
      <MemberSignature Language="C#" Value="protected override sealed void OnDrawFrame ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnDrawFrame() cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.Tizen.SKGLSurfaceView.OnDrawFrame" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp.Views.Tizen</AssemblyName>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Implemented by derived <see cref="T:SkiaSharp.Views.Tizen.CustomRenderingView" /> types to draw the next frame or paint the control.</summary>
        <remarks>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDrawFrame">
      <MemberSignature Language="C#" Value="protected virtual void OnDrawFrame (SkiaSharp.Views.Tizen.SKPaintGLSurfaceEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDrawFrame(class SkiaSharp.Views.Tizen.SKPaintGLSurfaceEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.Tizen.SKGLSurfaceView.OnDrawFrame(SkiaSharp.Views.Tizen.SKPaintGLSurfaceEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp.Views.Tizen</AssemblyName>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="SkiaSharp.Views.Tizen.SKPaintGLSurfaceEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">The event arguments that contain the drawing surface and information.</param>
        <summary>Implement this to draw on the canvas.</summary>
        <remarks>
          <para>There are two ways to draw on this surface: by overriding the <see cref="M:SkiaSharp.Views.Tizen.SKGLSurfaceView.OnDrawFrame" /> method, or by attaching a handler to the <see cref="E:SkiaSharp.Views.Tizen.SKGLSurfaceView.PaintSurface" /> event. If the method is overriden, then the base must be called.</para>
          <para></para>
          <example>
            <code lang="C#"><![CDATA[protected override void OnDrawFrame (SKPaintGLSurfaceEventArgs e)
{
    // call the base method
    base.OnDrawFrame (e);

    var surface = e.Surface;
    var surfaceWidth = e.RenderTarget.Width;
    var surfaceHeight = e.RenderTarget.Height;

    var canvas = surface.Canvas;
    // draw on the canvas
    canvas.Flush ();
}]]></code>
          </example>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PaintSurface">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;SkiaSharp.Views.Tizen.SKPaintGLSurfaceEventArgs&gt; PaintSurface;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class SkiaSharp.Views.Tizen.SKPaintGLSurfaceEventArgs&gt; PaintSurface" />
      <MemberSignature Language="DocId" Value="E:SkiaSharp.Views.Tizen.SKGLSurfaceView.PaintSurface" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp.Views.Tizen</AssemblyName>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;SkiaSharp.Views.Tizen.SKPaintGLSurfaceEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Occurs when the surface needs to be re-drawn.</summary>
        <remarks>
          <para>There are two ways to draw on this surface: by overriding the <see cref="M:SkiaSharp.Views.Tizen.SKGLSurfaceView.OnDrawFrame" /> method, or by attaching a handler to the <see cref="E:SkiaSharp.Views.Tizen.SKGLSurfaceView.PaintSurface" /> event.</para>
          <para></para>
          <example>
            <code lang="C#"><![CDATA[SKGLSurfaceView myCanvas = ...;

myCanvas.PaintSurface += (sender, e) => {
    var surface = e.Surface;
    var surfaceWidth = e.RenderTarget.Width;
    var surfaceHeight = e.RenderTarget.Height;

    var canvas = surface.Canvas;
    // draw on the canvas
    canvas.Flush ();
};]]></code>
          </example>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateSurfaceSize">
      <MemberSignature Language="C#" Value="protected override sealed bool UpdateSurfaceSize (ElmSharp.Rect geometry);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool UpdateSurfaceSize(valuetype ElmSharp.Rect geometry) cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.Tizen.SKGLSurfaceView.UpdateSurfaceSize(ElmSharp.Rect)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp.Views.Tizen</AssemblyName>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="geometry" Type="ElmSharp.Rect" />
      </Parameters>
      <Docs>
        <param name="geometry">The current geometry of the control.</param>
        <summary>Implemented by derived <see cref="T:SkiaSharp.Views.Tizen.CustomRenderingView" /> types to update the drawing surface dimensions.</summary>
        <returns>Returs <see langword="true" /> if the size has changed, otherwise <see langword="false" />.</returns>
        <remarks>
          <para></para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
