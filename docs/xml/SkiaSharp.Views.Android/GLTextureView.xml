<Type Name="GLTextureView" FullName="SkiaSharp.Views.Android.GLTextureView">
  <TypeSignature Language="C#" Value="public class GLTextureView : Android.Views.TextureView, Android.Views.TextureView.ISurfaceTextureListener, Android.Views.View.IOnLayoutChangeListener, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit GLTextureView extends Android.Views.TextureView implements class Android.Runtime.IJavaObject, class Android.Views.TextureView/ISurfaceTextureListener, class Android.Views.View/IOnLayoutChangeListener, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:SkiaSharp.Views.Android.GLTextureView" />
  <AssemblyInfo>
    <AssemblyName>SkiaSharp.Views.Android</AssemblyName>
    <AssemblyVersion>1.60.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Android.Views.TextureView</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Android.Views.TextureView+ISurfaceTextureListener</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Android.Views.View+IOnLayoutChangeListener</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>An implementation of <see cref="T:Android.Views.TextureView" /> that uses the dedicated surface for displaying OpenGL rendering.</summary>
    <remarks>
      <para></para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GLTextureView (Android.Content.Context context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Android.Content.Context context) cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.Android.GLTextureView.#ctor(Android.Content.Context)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp.Views.Android</AssemblyName>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="context" Type="Android.Content.Context" />
      </Parameters>
      <Docs>
        <param name="context">The <see cref="T:Android.Content.Context" /> the view is running in, through which it can access the current theme, resources, etc.</param>
        <summary>Simple constructor to use when creating a <see cref="T:SkiaSharp.Views.Android.GLTextureView" /> from code.</summary>
        <remarks>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GLTextureView (Android.Content.Context context, Android.Util.IAttributeSet attrs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Android.Content.Context context, class Android.Util.IAttributeSet attrs) cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.Android.GLTextureView.#ctor(Android.Content.Context,Android.Util.IAttributeSet)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp.Views.Android</AssemblyName>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="context" Type="Android.Content.Context" />
        <Parameter Name="attrs" Type="Android.Util.IAttributeSet" />
      </Parameters>
      <Docs>
        <param name="context">The <see cref="T:Android.Content.Context" /> the view is running in, through which it can access the current theme, resources, etc.</param>
        <param name="attrs">The attributes of the XML tag that is inflating the view.</param>
        <summary>Constructor that is called when inflating a <see cref="T:SkiaSharp.Views.Android.GLTextureView" /> from XML.</summary>
        <remarks>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DebugFlags">
      <MemberSignature Language="C#" Value="public Android.Opengl.DebugFlags DebugFlags { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Android.Opengl.DebugFlags DebugFlags" />
      <MemberSignature Language="DocId" Value="P:SkiaSharp.Views.Android.GLTextureView.DebugFlags" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp.Views.Android</AssemblyName>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Android.Opengl.DebugFlags</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the current debug flags.</summary>
        <value>
          <para></para>
        </value>
        <remarks>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.Android.GLTextureView.Dispose(System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp.Views.Android</AssemblyName>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnAttachedToWindow">
      <MemberSignature Language="C#" Value="protected override void OnAttachedToWindow ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnAttachedToWindow() cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.Android.GLTextureView.OnAttachedToWindow" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp.Views.Android</AssemblyName>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Called when the view is attached to a window.</summary>
        <remarks>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDetachedFromWindow">
      <MemberSignature Language="C#" Value="protected override void OnDetachedFromWindow ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnDetachedFromWindow() cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.Android.GLTextureView.OnDetachedFromWindow" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp.Views.Android</AssemblyName>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Called when the view is detached from a window.</summary>
        <remarks>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnLayoutChange">
      <MemberSignature Language="C#" Value="public void OnLayoutChange (Android.Views.View v, int left, int top, int right, int bottom, int oldLeft, int oldTop, int oldRight, int oldBottom);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnLayoutChange(class Android.Views.View v, int32 left, int32 top, int32 right, int32 bottom, int32 oldLeft, int32 oldTop, int32 oldRight, int32 oldBottom) cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.Android.GLTextureView.OnLayoutChange(Android.Views.View,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Android.Views.View.IOnLayoutChangeListener.OnLayoutChange(Android.Views.View,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp.Views.Android</AssemblyName>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="Android.Views.View" />
        <Parameter Name="left" Type="System.Int32" />
        <Parameter Name="top" Type="System.Int32" />
        <Parameter Name="right" Type="System.Int32" />
        <Parameter Name="bottom" Type="System.Int32" />
        <Parameter Name="oldLeft" Type="System.Int32" />
        <Parameter Name="oldTop" Type="System.Int32" />
        <Parameter Name="oldRight" Type="System.Int32" />
        <Parameter Name="oldBottom" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="v">The view whose bounds have changed.</param>
        <param name="left">The new value of the view's left property.</param>
        <param name="top">The new value of the view's top property.</param>
        <param name="right">The new value of the view's right property.</param>
        <param name="bottom">The new value of the view's bottom property.</param>
        <param name="oldLeft">The previous value of the view's left property.</param>
        <param name="oldTop">The previous value of the view's top property.</param>
        <param name="oldRight">The previous value of the view's right property.</param>
        <param name="oldBottom">The previous value of the view's bottom property.</param>
        <summary>Called when the layout bounds of a view changes due to layout processing.</summary>
        <remarks>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPause">
      <MemberSignature Language="C#" Value="public void OnPause ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void OnPause() cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.Android.GLTextureView.OnPause" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp.Views.Android</AssemblyName>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Inform the view that the activity is paused.</summary>
        <remarks>The owner of this view must call this method when the activity is paused. Calling this method will pause the rendering thread. Must not be called before a renderer has been set.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnResume">
      <MemberSignature Language="C#" Value="public void OnResume ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void OnResume() cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.Android.GLTextureView.OnResume" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp.Views.Android</AssemblyName>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Inform the view that the activity is resumed.</summary>
        <remarks>The owner of this view must call this method when the activity is resumed. Calling this method will recreate the OpenGL display and resume the rendering thread. Must not be called before a renderer has been set.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnSurfaceTextureAvailable">
      <MemberSignature Language="C#" Value="public void OnSurfaceTextureAvailable (Android.Graphics.SurfaceTexture surface, int width, int height);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnSurfaceTextureAvailable(class Android.Graphics.SurfaceTexture surface, int32 width, int32 height) cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.Android.GLTextureView.OnSurfaceTextureAvailable(Android.Graphics.SurfaceTexture,System.Int32,System.Int32)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Android.Views.TextureView.ISurfaceTextureListener.OnSurfaceTextureAvailable(Android.Graphics.SurfaceTexture,System.Int32,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp.Views.Android</AssemblyName>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="surface" Type="Android.Graphics.SurfaceTexture" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="surface">The surface texture.</param>
        <param name="width">The width of the surface.</param>
        <param name="height">The height of the surface.</param>
        <summary>Invoked when a texture is ready for use.</summary>
        <remarks>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnSurfaceTextureDestroyed">
      <MemberSignature Language="C#" Value="public bool OnSurfaceTextureDestroyed (Android.Graphics.SurfaceTexture surface);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool OnSurfaceTextureDestroyed(class Android.Graphics.SurfaceTexture surface) cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.Android.GLTextureView.OnSurfaceTextureDestroyed(Android.Graphics.SurfaceTexture)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Android.Views.TextureView.ISurfaceTextureListener.OnSurfaceTextureDestroyed(Android.Graphics.SurfaceTexture)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp.Views.Android</AssemblyName>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="surface" Type="Android.Graphics.SurfaceTexture" />
      </Parameters>
      <Docs>
        <param name="surface">The surface texture.</param>
        <summary>Invoked when the specified texture is about to be destroyed.</summary>
        <returns>Returns <see langword="true" /> if no rendering should happen inside the surface texture after this method is invoked, otherwise <see langword="false" /> if the client needs to call <see cref="M:Android.Graphics.SurfaceTexture.Release" />. Most applications should return <see langword="true" />.</returns>
        <remarks>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnSurfaceTextureSizeChanged">
      <MemberSignature Language="C#" Value="public void OnSurfaceTextureSizeChanged (Android.Graphics.SurfaceTexture surface, int w, int h);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnSurfaceTextureSizeChanged(class Android.Graphics.SurfaceTexture surface, int32 w, int32 h) cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.Android.GLTextureView.OnSurfaceTextureSizeChanged(Android.Graphics.SurfaceTexture,System.Int32,System.Int32)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Android.Views.TextureView.ISurfaceTextureListener.OnSurfaceTextureSizeChanged(Android.Graphics.SurfaceTexture,System.Int32,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp.Views.Android</AssemblyName>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="surface" Type="Android.Graphics.SurfaceTexture" />
        <Parameter Name="w" Type="System.Int32" />
        <Parameter Name="h" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="surface">The surface texture.</param>
        <param name="w">The new width of the surface.</param>
        <param name="h">The new height of the surface.</param>
        <summary>Invoked when the texture's buffers size changed.</summary>
        <remarks>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnSurfaceTextureUpdated">
      <MemberSignature Language="C#" Value="public void OnSurfaceTextureUpdated (Android.Graphics.SurfaceTexture surface);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnSurfaceTextureUpdated(class Android.Graphics.SurfaceTexture surface) cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.Android.GLTextureView.OnSurfaceTextureUpdated(Android.Graphics.SurfaceTexture)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Android.Views.TextureView.ISurfaceTextureListener.OnSurfaceTextureUpdated(Android.Graphics.SurfaceTexture)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp.Views.Android</AssemblyName>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="surface" Type="Android.Graphics.SurfaceTexture" />
      </Parameters>
      <Docs>
        <param name="surface">The surface texture.</param>
        <summary>Invoked when the specified texture is updated through <see cref="M:Android.Graphics.SurfaceTexture.UpdateTexImage" />. </summary>
        <remarks>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreserveEGLContextOnPause">
      <MemberSignature Language="C#" Value="public bool PreserveEGLContextOnPause { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PreserveEGLContextOnPause" />
      <MemberSignature Language="DocId" Value="P:SkiaSharp.Views.Android.GLTextureView.PreserveEGLContextOnPause" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp.Views.Android</AssemblyName>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value indicating whether the EGL context is preserved when the <see cref="T:Android.Views.TextureView" /> is paused and resumed.</summary>
        <value>
          <para></para>
        </value>
        <remarks>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="QueueEvent">
      <MemberSignature Language="C#" Value="public void QueueEvent (Java.Lang.IRunnable r);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void QueueEvent(class Java.Lang.IRunnable r) cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.Android.GLTextureView.QueueEvent(Java.Lang.IRunnable)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp.Views.Android</AssemblyName>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="r" Type="Java.Lang.IRunnable" />
      </Parameters>
      <Docs>
        <param name="r">The runnable to be run on the GL rendering thread.</param>
        <summary>Queue a runnable to be run on the GL rendering thread.</summary>
        <remarks>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="QueueEvent">
      <MemberSignature Language="C#" Value="public void QueueEvent (Action r);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void QueueEvent(class System.Action r) cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.Android.GLTextureView.QueueEvent(System.Action)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp.Views.Android</AssemblyName>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="r" Type="System.Action" />
      </Parameters>
      <Docs>
        <param name="r">The action to be run on the GL rendering thread.</param>
        <summary>Queue an action to be run on the GL rendering thread.</summary>
        <remarks>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RenderMode">
      <MemberSignature Language="C#" Value="public Android.Opengl.Rendermode RenderMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Android.Opengl.Rendermode RenderMode" />
      <MemberSignature Language="DocId" Value="P:SkiaSharp.Views.Android.GLTextureView.RenderMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp.Views.Android</AssemblyName>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Android.Opengl.Rendermode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the render mode.</summary>
        <value>
          <para></para>
        </value>
        <remarks>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequestRender">
      <MemberSignature Language="C#" Value="public void RequestRender ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RequestRender() cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.Android.GLTextureView.RequestRender" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp.Views.Android</AssemblyName>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Request that the renderer render a frame.</summary>
        <remarks>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetEGLConfigChooser">
      <MemberSignature Language="C#" Value="public void SetEGLConfigChooser (SkiaSharp.Views.Android.GLTextureView.IEGLConfigChooser configChooser);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetEGLConfigChooser(class SkiaSharp.Views.Android.GLTextureView/IEGLConfigChooser configChooser) cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.Android.GLTextureView.SetEGLConfigChooser(SkiaSharp.Views.Android.GLTextureView.IEGLConfigChooser)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp.Views.Android</AssemblyName>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="configChooser" Type="SkiaSharp.Views.Android.GLTextureView+IEGLConfigChooser" />
      </Parameters>
      <Docs>
        <param name="configChooser">The custom config chooser.</param>
        <summary>Install a custom config chooser.</summary>
        <remarks>
          <para>If no <see cref="M:SkiaSharp.Views.Android.GLTextureView.SetEGLConfigChooser" /> method is called, then by default the view will choose an RGB 888 surface with a depth buffer depth of at least 16 bits.</para>
          <para>If this method is called, it must be called before <see cref="M:SkiaSharp.Views.Android.GLTextureView.SetRenderer" /> is called.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetEGLConfigChooser">
      <MemberSignature Language="C#" Value="public void SetEGLConfigChooser (bool needDepth);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetEGLConfigChooser(bool needDepth) cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.Android.GLTextureView.SetEGLConfigChooser(System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp.Views.Android</AssemblyName>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="needDepth" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="needDepth">Whether or not to include a depth buffer.</param>
        <summary>Install a config chooser which will choose a config as close to 16-bit RGB as possible, with or without an optional depth buffer as close to 16-bits as possible.</summary>
        <remarks>
          <para>If no <see cref="M:SkiaSharp.Views.Android.GLTextureView.SetEGLConfigChooser" /> method is called, then by default the view will choose an RGB 888 surface with a depth buffer depth of at least 16 bits.</para>
          <para>If this method is called, it must be called before <see cref="M:SkiaSharp.Views.Android.GLTextureView.SetRenderer" /> is called.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetEGLConfigChooser">
      <MemberSignature Language="C#" Value="public void SetEGLConfigChooser (int redSize, int greenSize, int blueSize, int alphaSize, int depthSize, int stencilSize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetEGLConfigChooser(int32 redSize, int32 greenSize, int32 blueSize, int32 alphaSize, int32 depthSize, int32 stencilSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.Android.GLTextureView.SetEGLConfigChooser(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp.Views.Android</AssemblyName>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="redSize" Type="System.Int32" />
        <Parameter Name="greenSize" Type="System.Int32" />
        <Parameter Name="blueSize" Type="System.Int32" />
        <Parameter Name="alphaSize" Type="System.Int32" />
        <Parameter Name="depthSize" Type="System.Int32" />
        <Parameter Name="stencilSize" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="redSize">The size of the red.</param>
        <param name="greenSize">The size of the green.</param>
        <param name="blueSize">The size of the blue.</param>
        <param name="alphaSize">The size of the alpha.</param>
        <param name="depthSize">The size of the depth buffer.</param>
        <param name="stencilSize">The size of the stencil buffer.</param>
        <summary>Install a config chooser which will choose a config with at least the specified depth size and stencil size, and exactly the specified red size, green size, blue size and alpha size.</summary>
        <remarks>
          <para>If no <see cref="M:SkiaSharp.Views.Android.GLTextureView.SetEGLConfigChooser" /> method is called, then by default the view will choose an RGB 888 surface with a depth buffer depth of at least 16 bits.</para>
          <para>If this method is called, it must be called before <see cref="M:SkiaSharp.Views.Android.GLTextureView.SetRenderer" /> is called.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetEGLContextClientVersion">
      <MemberSignature Language="C#" Value="public void SetEGLContextClientVersion (int version);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetEGLContextClientVersion(int32 version) cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.Android.GLTextureView.SetEGLContextClientVersion(System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp.Views.Android</AssemblyName>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="version" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="version">The context client version to choose. Use 2 for OpenGL ES 2.0</param>
        <summary>Inform the default context factory and default config chooser which context client version to pick.</summary>
        <remarks>If this method is called, it must be called before <see cref="M:SkiaSharp.Views.Android.GLTextureView.SetRenderer" /> is called.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetEGLContextFactory">
      <MemberSignature Language="C#" Value="public void SetEGLContextFactory (SkiaSharp.Views.Android.GLTextureView.IEGLContextFactory factory);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetEGLContextFactory(class SkiaSharp.Views.Android.GLTextureView/IEGLContextFactory factory) cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.Android.GLTextureView.SetEGLContextFactory(SkiaSharp.Views.Android.GLTextureView.IEGLContextFactory)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp.Views.Android</AssemblyName>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="factory" Type="SkiaSharp.Views.Android.GLTextureView+IEGLContextFactory" />
      </Parameters>
      <Docs>
        <param name="factory">The custom context factory.</param>
        <summary>Install a custom context factory.</summary>
        <remarks>If this method is called, it must be called before <see cref="M:SkiaSharp.Views.Android.GLTextureView.SetRenderer" /> is called.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetEGLWindowSurfaceFactory">
      <MemberSignature Language="C#" Value="public void SetEGLWindowSurfaceFactory (SkiaSharp.Views.Android.GLTextureView.IEGLWindowSurfaceFactory factory);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetEGLWindowSurfaceFactory(class SkiaSharp.Views.Android.GLTextureView/IEGLWindowSurfaceFactory factory) cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.Android.GLTextureView.SetEGLWindowSurfaceFactory(SkiaSharp.Views.Android.GLTextureView.IEGLWindowSurfaceFactory)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp.Views.Android</AssemblyName>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="factory" Type="SkiaSharp.Views.Android.GLTextureView+IEGLWindowSurfaceFactory" />
      </Parameters>
      <Docs>
        <param name="factory">The custom window surface factory.</param>
        <summary>Install a custom window surface factory.</summary>
        <remarks>If this method is called, it must be called before <see cref="M:SkiaSharp.Views.Android.GLTextureView.SetRenderer" /> is called.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetGLWrapper">
      <MemberSignature Language="C#" Value="public void SetGLWrapper (SkiaSharp.Views.Android.GLTextureView.IGLWrapper glWrapper);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetGLWrapper(class SkiaSharp.Views.Android.GLTextureView/IGLWrapper glWrapper) cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.Android.GLTextureView.SetGLWrapper(SkiaSharp.Views.Android.GLTextureView.IGLWrapper)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp.Views.Android</AssemblyName>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="glWrapper" Type="SkiaSharp.Views.Android.GLTextureView+IGLWrapper" />
      </Parameters>
      <Docs>
        <param name="glWrapper">The GL wrapper.</param>
        <summary>Set the GL wrapper.</summary>
        <remarks>Wrapping is typically used for debugging purposes.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetRenderer">
      <MemberSignature Language="C#" Value="public void SetRenderer (SkiaSharp.Views.Android.GLTextureView.IRenderer renderer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetRenderer(class SkiaSharp.Views.Android.GLTextureView/IRenderer renderer) cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.Android.GLTextureView.SetRenderer(SkiaSharp.Views.Android.GLTextureView.IRenderer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp.Views.Android</AssemblyName>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="renderer" Type="SkiaSharp.Views.Android.GLTextureView+IRenderer" />
      </Parameters>
      <Docs>
        <param name="renderer">The renderer to use to perform OpenGL drawing.</param>
        <summary>Set the renderer associated with this view. Also starts the thread that will call the renderer, which in turn causes the rendering to start.</summary>
        <remarks>This method should be called once and only once in the life-cycle of a GLSurfaceView.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
