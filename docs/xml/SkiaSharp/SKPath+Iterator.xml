<Type Name="SKPath+Iterator" FullName="SkiaSharp.SKPath+Iterator">
  <TypeSignature Language="C#" Value="public class SKPath.Iterator : SkiaSharp.SKNativeObject" />
  <TypeSignature Language="ILAsm" Value=".class nested public auto ansi beforefieldinit SKPath/Iterator extends SkiaSharp.SKNativeObject" />
  <TypeSignature Language="DocId" Value="T:SkiaSharp.SKPath.Iterator" />
  <AssemblyInfo>
    <AssemblyName>SkiaSharp</AssemblyName>
    <AssemblyVersion>1.57.0.0</AssemblyVersion>
    <AssemblyVersion>1.58.0.0</AssemblyVersion>
    <AssemblyVersion>1.59.0.0</AssemblyVersion>
    <AssemblyVersion>1.60.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>SkiaSharp.SKNativeObject</BaseTypeName>
  </Base>
  <Interfaces></Interfaces>
  <Docs>
    <summary>Iterator object to scan the all of the segments (lines, quadratics, cubics) of each contours in a path.</summary>
    <remarks>Iterators are created by calling the <see cref="M:SkiaSharp.SKPath.CreateIterator" /> method.</remarks>
  </Docs>
  <Members>
    <Member MemberName="ConicWeight">
      <MemberSignature Language="C#" Value="public float ConicWeight ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance float32 ConicWeight() cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.SKPath.Iterator.ConicWeight" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.57.0.0</AssemblyVersion>
        <AssemblyVersion>1.58.0.0</AssemblyVersion>
        <AssemblyVersion>1.59.0.0</AssemblyVersion>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Return the weight for the current conic.</summary>
        <returns>
          <para></para>
        </returns>
        <remarks>Only valid if the current segment return by <see cref="M:SkiaSharp.SKPath+Iterator.Next" /> was <see cref="F:SkiaSharp.SKPathVerb.Conic" />.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.SKPath.Iterator.Dispose(System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.57.0.0</AssemblyVersion>
        <AssemblyVersion>1.58.0.0</AssemblyVersion>
        <AssemblyVersion>1.59.0.0</AssemblyVersion>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsCloseContour">
      <MemberSignature Language="C#" Value="public bool IsCloseContour ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsCloseContour() cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.SKPath.Iterator.IsCloseContour" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.57.0.0</AssemblyVersion>
        <AssemblyVersion>1.58.0.0</AssemblyVersion>
        <AssemblyVersion>1.59.0.0</AssemblyVersion>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns a value indicating whether the current contour is closed.</summary>
        <returns>Returns true if the current contour is closed (has a <see cref="E:SkiaSharp.SKPathVerb.Close" />).</returns>
        <remarks>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsCloseLine">
      <MemberSignature Language="C#" Value="public bool IsCloseLine ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsCloseLine() cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.SKPath.Iterator.IsCloseLine" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.57.0.0</AssemblyVersion>
        <AssemblyVersion>1.58.0.0</AssemblyVersion>
        <AssemblyVersion>1.59.0.0</AssemblyVersion>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns a value indicating whether the last call to <see cref="M:SkiaSharp.SKPath+Iterator.Next" /> returns a line which was the result of a <see cref="M:SkiaSharp.SKPath.Close()" /> command.</summary>
        <returns>Returns true if the last call to <see cref="M:SkiaSharp.SKPath+Iterator.Next" /> returned a line which was the result of a <see cref="M:SkiaSharp.SKPath.Close()" /> command.</returns>
        <remarks>If the call to <see cref="M:SkiaSharp.SKPath+Iterator.Next" /> returned a different value than <see cref="F:SkiaSharp.SKPathVerb.Line" />, the result is undefined.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Next">
      <MemberSignature Language="C#" Value="public SkiaSharp.SKPathVerb Next (SkiaSharp.SKPoint[] points, bool doConsumeDegenerates = true, bool exact = false);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype SkiaSharp.SKPathVerb Next(valuetype SkiaSharp.SKPoint[] points, bool doConsumeDegenerates, bool exact) cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.SKPath.Iterator.Next(SkiaSharp.SKPoint[],System.Boolean,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.57.0.0</AssemblyVersion>
        <AssemblyVersion>1.58.0.0</AssemblyVersion>
        <AssemblyVersion>1.59.0.0</AssemblyVersion>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>SkiaSharp.SKPathVerb</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="points" Type="SkiaSharp.SKPoint[]" />
        <Parameter Name="doConsumeDegenerates" Type="System.Boolean" />
        <Parameter Name="exact" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="points">The storage for the points representing the current verb and/or segment. Should be an array of four points.</param>
        <param name="doConsumeDegenerates">If <see langword="true" />, first scan for segments that are deemed degenerate (too short) and skip those.</param>
        <param name="exact">If <paramref name="doConsumeDegenerates" /> is <see langword="true" /> and exact is true, skip only degenerate elements with lengths exactly equal to zero. If exact is <see langword="false" />, skip degenerate elements with lengths close to zero. If <paramref name="doConsumeDegenerates" /> is <see langword="false" />, exact has no effect.</param>
        <summary>Returns the next verb in this iteration of the path.</summary>
        <returns>The verb of the current segment.</returns>
        <remarks>When all segments have been visited, returns <see cref="F:SkiaSharp.SKPathVerb.Done" />.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
