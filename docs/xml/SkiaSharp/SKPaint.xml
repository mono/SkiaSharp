<Type Name="SKPaint" FullName="SkiaSharp.SKPaint">
  <TypeSignature Language="C#" Value="public class SKPaint : SkiaSharp.SKObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SKPaint extends SkiaSharp.SKObject" />
  <TypeSignature Language="DocId" Value="T:SkiaSharp.SKPaint" />
  <AssemblyInfo>
    <AssemblyName>SkiaSharp</AssemblyName>
    <AssemblyVersion>1.57.0.0</AssemblyVersion>
    <AssemblyVersion>1.58.0.0</AssemblyVersion>
    <AssemblyVersion>1.59.0.0</AssemblyVersion>
    <AssemblyVersion>1.60.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>SkiaSharp.SKObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Holds the style and color information about how to draw geometries, text and bitmaps.</summary>
    <remarks>
      <para>Anytime you draw something in SkiaSharp, and want to specify what color it is, or how it blends with the background, or what style or font to draw it in, you specify those attributes in a paint.</para>
      <para>Unlike <see cref="T:SkiaSharp.SKCanvas" />, an SKPaint object do not maintain an internal stack of state.   That is, there is no save/restore on a paint. However, SKPaint objects are relatively light-weight, so the client may create and maintain any number of paint objects, each set up for a particular use. </para>
      <para>Factoring all of these color and stylistic attributes out of the canvas state, and into (multiple) paint objects, allows the save and restore operations on the <see cref="T:SkiaSharp.SKCanvas" /> to be that much more efficient, as all they have to do is maintain the stack of matrix and clip settings.</para>
      <para></para>
      <para>The example above produces the following:</para>
      <para>
        <img href="SKPaintText.png" />
      </para>
      <para>This shows three different paints, each set up to draw in a different style. Now the caller can intermix these paints freely, either using them as is, or modifying them as the drawing proceeds.</para>
      <para>Beyond simple attributes such as color, strokes, and text values, paints support effects. These are subclasses of different aspects of the drawing pipeline, that when referenced by a paint (each of them is reference-counted), are called to override some part of the drawing pipeline.</para>
      <para>For example, to draw using a gradient instead of a single color, assign a SkShader to the paint.</para>
      <para></para>
      <para>
        <img href="gradient.png" />
      </para>
      <para>Now, anything drawn with that paint will be drawn with the gradient specified in the call to CreateLinearGradient.</para>
      <para>There are five types of effects that can be assigned to an <see cref="T:SkiaSharp.SKPaint" /> object:</para>
      <para></para>
      <list type="bullet">
        <item>
          <term>BlendMode - Blend modes and Duff-Porter transfer modes.</term>
        </item>
        <item>
          <term>ColorFilter - Modifies the source colors before applying the BlendMode.</term>
        </item>
        <item>
          <term>MaskFilter - Modification of the alpha mask before it is colorized and drawn (for example, blur)</term>
        </item>
        <item>
          <term>PathEffect - Modification of the geometry (path) before the alpha mask is generated (for example, dashing)</term>
        </item>
        <item>
          <term>Shader - Gradients and bitmap patterns.</term>
        </item>
      </list>
      <para></para>
      <para></para>
      <para></para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SKPaint ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.SKPaint.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.57.0.0</AssemblyVersion>
        <AssemblyVersion>1.58.0.0</AssemblyVersion>
        <AssemblyVersion>1.59.0.0</AssemblyVersion>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Creates a new paint with the default settings.</summary>
        <remarks>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BlendMode">
      <MemberSignature Language="C#" Value="public SkiaSharp.SKBlendMode BlendMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype SkiaSharp.SKBlendMode BlendMode" />
      <MemberSignature Language="DocId" Value="P:SkiaSharp.SKPaint.BlendMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.57.0.0</AssemblyVersion>
        <AssemblyVersion>1.58.0.0</AssemblyVersion>
        <AssemblyVersion>1.59.0.0</AssemblyVersion>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>SkiaSharp.SKBlendMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the blend mode.</summary>
        <value>
          <para></para>
        </value>
        <remarks>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BreakText">
      <MemberSignature Language="C#" Value="public long BreakText (byte[] text, float maxWidth);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int64 BreakText(unsigned int8[] text, float32 maxWidth) cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.SKPaint.BreakText(System.Byte[],System.Single)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.Byte[]" />
        <Parameter Name="maxWidth" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="text">The text to be measured.</param>
        <param name="maxWidth">The maximum width. Only the subset of text whose accumulated widths are &lt;= maxWidth are measured.</param>
        <summary>Measure the text, stopping early if the measured width exceeds <paramref name="maxWidth" />.</summary>
        <returns>Returns the number of bytes of text that were measured. </returns>
        <remarks>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BreakText">
      <MemberSignature Language="C#" Value="public long BreakText (string text, float maxWidth);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int64 BreakText(string text, float32 maxWidth) cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.SKPaint.BreakText(System.String,System.Single)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.57.0.0</AssemblyVersion>
        <AssemblyVersion>1.58.0.0</AssemblyVersion>
        <AssemblyVersion>1.59.0.0</AssemblyVersion>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="maxWidth" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="text">The text to be measured.</param>
        <param name="maxWidth">The maximum width. Only the subset of text whose accumulated widths are &lt;= maxWidth are measured.</param>
        <summary>Measure the text, stopping early if the measured width exceeds <paramref name="maxWidth" />.</summary>
        <returns>Returns the number of characters of text that were measured. </returns>
        <remarks>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BreakText">
      <MemberSignature Language="C#" Value="public long BreakText (byte[] text, float maxWidth, out float measuredWidth);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int64 BreakText(unsigned int8[] text, float32 maxWidth, [out] float32&amp; measuredWidth) cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.SKPaint.BreakText(System.Byte[],System.Single,System.Single@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.57.0.0</AssemblyVersion>
        <AssemblyVersion>1.58.0.0</AssemblyVersion>
        <AssemblyVersion>1.59.0.0</AssemblyVersion>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.Byte[]" />
        <Parameter Name="maxWidth" Type="System.Single" />
        <Parameter Name="measuredWidth" Type="System.Single&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="text">The text to be measured.</param>
        <param name="maxWidth">The maximum width. Only the subset of text whose accumulated widths are &lt;= <paramref name="maxWidth" /> are measured.</param>
        <param name="measuredWidth">The actual width of the measured text.</param>
        <summary>Measure the text, stopping early if the measured width exceeds <paramref name="maxWidth" />.</summary>
        <returns>Returns the number of bytes of text that were measured. </returns>
        <remarks>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BreakText">
      <MemberSignature Language="C#" Value="public long BreakText (IntPtr buffer, IntPtr length, float maxWidth);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int64 BreakText(native int buffer, native int length, float32 maxWidth) cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.SKPaint.BreakText(System.IntPtr,System.IntPtr,System.Single)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.IntPtr" />
        <Parameter Name="length" Type="System.IntPtr" />
        <Parameter Name="maxWidth" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="buffer">The pointer to a region holding text encoded using the encoding specified in <see cref="P:SkiaSharp.SKPaint.TextEncoding" /> format.</param>
        <param name="length">The number of bytes to read from the <paramref name="buffer." /></param>
        <param name="maxWidth">The maximum width. Only the subset of text whose accumulated widths are &lt;= <paramref name="maxWidth" /> are measured.</param>
        <summary>Measure the text buffer, stopping early if the measured width exceeds <paramref name="maxWidth" />.</summary>
        <returns>Returns the number of bytes of text that were measured. </returns>
        <remarks>The <paramref name="buffer" /> parameter is a pointer to a region in memory that contains text encoded in the <see cref="P:SkiaSharp.SKPaint.TextEncoding" /> format. This only consumes up to <paramref name="length" /> bytes from the buffer.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BreakText">
      <MemberSignature Language="C#" Value="public long BreakText (string text, float maxWidth, out float measuredWidth);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int64 BreakText(string text, float32 maxWidth, [out] float32&amp; measuredWidth) cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.SKPaint.BreakText(System.String,System.Single,System.Single@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.57.0.0</AssemblyVersion>
        <AssemblyVersion>1.58.0.0</AssemblyVersion>
        <AssemblyVersion>1.59.0.0</AssemblyVersion>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="maxWidth" Type="System.Single" />
        <Parameter Name="measuredWidth" Type="System.Single&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="text">The text to be measured.</param>
        <param name="maxWidth">The maximum width. Only the subset of text whose accumulated widths are &lt;= <paramref name="maxWidth" /> are measured.</param>
        <param name="measuredWidth">The actual width of the measured text.</param>
        <summary>Measure the text, stopping early if the measured width exceeds <paramref name="maxWidth" />.</summary>
        <returns>Returns the number of characters of text that were measured. </returns>
        <remarks>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BreakText">
      <MemberSignature Language="C#" Value="public long BreakText (IntPtr buffer, IntPtr length, float maxWidth, out float measuredWidth);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int64 BreakText(native int buffer, native int length, float32 maxWidth, [out] float32&amp; measuredWidth) cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.SKPaint.BreakText(System.IntPtr,System.IntPtr,System.Single,System.Single@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.57.0.0</AssemblyVersion>
        <AssemblyVersion>1.58.0.0</AssemblyVersion>
        <AssemblyVersion>1.59.0.0</AssemblyVersion>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.IntPtr" />
        <Parameter Name="length" Type="System.IntPtr" />
        <Parameter Name="maxWidth" Type="System.Single" />
        <Parameter Name="measuredWidth" Type="System.Single&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="buffer">The pointer to a region holding text encoded using the encoding specified in <see cref="P:SkiaSharp.SKPaint.TextEncoding" /> format.</param>
        <param name="length">The number of bytes to read from the <paramref name="buffer." /></param>
        <param name="maxWidth">The maximum width. Only the subset of text whose accumulated widths are &lt;= <paramref name="maxWidth" /> are measured.</param>
        <param name="measuredWidth">The actual width of the measured text.</param>
        <summary>Measure the text buffer, stopping early if the measured width exceeds <paramref name="maxWidth" />.</summary>
        <returns>Returns the number of bytes of text that were measured. </returns>
        <remarks>The <paramref name="buffer" /> parameter is a pointer to a region in memory that contains text encoded in the <see cref="P:SkiaSharp.SKPaint.TextEncoding" /> format. This only consumes up to <paramref name="length" /> bytes from the buffer.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BreakText">
      <MemberSignature Language="C#" Value="public long BreakText (string text, float maxWidth, out float measuredWidth, out string measuredText);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int64 BreakText(string text, float32 maxWidth, [out] float32&amp; measuredWidth, [out] string&amp; measuredText) cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.SKPaint.BreakText(System.String,System.Single,System.Single@,System.String@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="maxWidth" Type="System.Single" />
        <Parameter Name="measuredWidth" Type="System.Single&amp;" RefType="out" />
        <Parameter Name="measuredText" Type="System.String&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="text">The text to be measured.</param>
        <param name="maxWidth">The maximum width. Only the subset of text whose accumulated widths are &lt;= <paramref name="maxWidth" /> are measured.</param>
        <param name="measuredWidth">The actual width of the measured text.</param>
        <param name="measuredText">The text that was measured.</param>
        <summary>Measure the text, stopping early if the measured width exceeds <paramref name="maxWidth" />.</summary>
        <returns>Returns the number of characters of text that were measured. </returns>
        <remarks>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public SkiaSharp.SKPaint Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class SkiaSharp.SKPaint Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.SKPaint.Clone" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.57.0.0</AssemblyVersion>
        <AssemblyVersion>1.58.0.0</AssemblyVersion>
        <AssemblyVersion>1.59.0.0</AssemblyVersion>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>SkiaSharp.SKPaint</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Creates a copy of the current paint.</summary>
        <returns>Returns the copy.</returns>
        <remarks>The copy is a shallow copy, all references will still point to the same objects.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Color">
      <MemberSignature Language="C#" Value="public SkiaSharp.SKColor Color { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype SkiaSharp.SKColor Color" />
      <MemberSignature Language="DocId" Value="P:SkiaSharp.SKPaint.Color" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.57.0.0</AssemblyVersion>
        <AssemblyVersion>1.58.0.0</AssemblyVersion>
        <AssemblyVersion>1.59.0.0</AssemblyVersion>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>SkiaSharp.SKColor</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the paint’s foreground color.</summary>
        <value>
          <para></para>
        </value>
        <remarks>The color is a 32-bit value containing ARGB. This 32-bit value is not premultiplied, meaning that its alpha can be any value, regardless of the values of R, G and B.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ColorFilter">
      <MemberSignature Language="C#" Value="public SkiaSharp.SKColorFilter ColorFilter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class SkiaSharp.SKColorFilter ColorFilter" />
      <MemberSignature Language="DocId" Value="P:SkiaSharp.SKPaint.ColorFilter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.57.0.0</AssemblyVersion>
        <AssemblyVersion>1.58.0.0</AssemblyVersion>
        <AssemblyVersion>1.59.0.0</AssemblyVersion>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>SkiaSharp.SKColorFilter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the paint’s color filter.</summary>
        <value>
          <para></para>
        </value>
        <remarks>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeviceKerningEnabled">
      <MemberSignature Language="C#" Value="public bool DeviceKerningEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DeviceKerningEnabled" />
      <MemberSignature Language="DocId" Value="P:SkiaSharp.SKPaint.DeviceKerningEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.57.0.0</AssemblyVersion>
        <AssemblyVersion>1.58.0.0</AssemblyVersion>
        <AssemblyVersion>1.59.0.0</AssemblyVersion>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value indicating whether device kerning is enabled.</summary>
        <value>
          <para></para>
        </value>
        <remarks>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.SKPaint.Dispose(System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.57.0.0</AssemblyVersion>
        <AssemblyVersion>1.58.0.0</AssemblyVersion>
        <AssemblyVersion>1.59.0.0</AssemblyVersion>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FakeBoldText">
      <MemberSignature Language="C#" Value="public bool FakeBoldText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool FakeBoldText" />
      <MemberSignature Language="DocId" Value="P:SkiaSharp.SKPaint.FakeBoldText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.57.0.0</AssemblyVersion>
        <AssemblyVersion>1.58.0.0</AssemblyVersion>
        <AssemblyVersion>1.59.0.0</AssemblyVersion>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value indicating whether fake bold text is enabled.</summary>
        <value>
          <para></para>
        </value>
        <remarks>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FilterQuality">
      <MemberSignature Language="C#" Value="public SkiaSharp.SKFilterQuality FilterQuality { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype SkiaSharp.SKFilterQuality FilterQuality" />
      <MemberSignature Language="DocId" Value="P:SkiaSharp.SKPaint.FilterQuality" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.57.0.0</AssemblyVersion>
        <AssemblyVersion>1.58.0.0</AssemblyVersion>
        <AssemblyVersion>1.59.0.0</AssemblyVersion>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>SkiaSharp.SKFilterQuality</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the filter quality of the current paint.</summary>
        <value>
          <para></para>
        </value>
        <remarks>This affects the quality (and performance) of drawing scaled images.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FontMetrics">
      <MemberSignature Language="C#" Value="public SkiaSharp.SKFontMetrics FontMetrics { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype SkiaSharp.SKFontMetrics FontMetrics" />
      <MemberSignature Language="DocId" Value="P:SkiaSharp.SKPaint.FontMetrics" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.57.0.0</AssemblyVersion>
        <AssemblyVersion>1.58.0.0</AssemblyVersion>
        <AssemblyVersion>1.59.0.0</AssemblyVersion>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>SkiaSharp.SKFontMetrics</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the font metrics for the current typeface.</summary>
        <value>
          <para></para>
        </value>
        <remarks>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FontSpacing">
      <MemberSignature Language="C#" Value="public float FontSpacing { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 FontSpacing" />
      <MemberSignature Language="DocId" Value="P:SkiaSharp.SKPaint.FontSpacing" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.57.0.0</AssemblyVersion>
        <AssemblyVersion>1.58.0.0</AssemblyVersion>
        <AssemblyVersion>1.59.0.0</AssemblyVersion>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the recommend line spacing.</summary>
        <value>
          <para></para>
        </value>
        <remarks>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFillPath">
      <MemberSignature Language="C#" Value="public bool GetFillPath (SkiaSharp.SKPath src, SkiaSharp.SKPath dst, float resScale = 1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool GetFillPath(class SkiaSharp.SKPath src, class SkiaSharp.SKPath dst, float32 resScale) cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.SKPaint.GetFillPath(SkiaSharp.SKPath,SkiaSharp.SKPath,System.Single)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.57.0.0</AssemblyVersion>
        <AssemblyVersion>1.58.0.0</AssemblyVersion>
        <AssemblyVersion>1.59.0.0</AssemblyVersion>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="src" Type="SkiaSharp.SKPath" />
        <Parameter Name="dst" Type="SkiaSharp.SKPath" />
        <Parameter Name="resScale" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="src">The input path.</param>
        <param name="dst">The output path.</param>
        <param name="resScale">If &gt; 1, increase precision, else if (0 &lt; res &lt; 1) reduce precision in favor of speed/size.</param>
        <summary>Applies any and all effects to a source path, returning the result in the destination.</summary>
        <returns>Returns true if the path should be filled, or false if it should be drawn with a hairline.</returns>
        <remarks>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFillPath">
      <MemberSignature Language="C#" Value="public bool GetFillPath (SkiaSharp.SKPath src, SkiaSharp.SKPath dst, SkiaSharp.SKRect cullRect, float resScale = 1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool GetFillPath(class SkiaSharp.SKPath src, class SkiaSharp.SKPath dst, valuetype SkiaSharp.SKRect cullRect, float32 resScale) cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.SKPaint.GetFillPath(SkiaSharp.SKPath,SkiaSharp.SKPath,SkiaSharp.SKRect,System.Single)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.57.0.0</AssemblyVersion>
        <AssemblyVersion>1.58.0.0</AssemblyVersion>
        <AssemblyVersion>1.59.0.0</AssemblyVersion>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="src" Type="SkiaSharp.SKPath" />
        <Parameter Name="dst" Type="SkiaSharp.SKPath" />
        <Parameter Name="cullRect" Type="SkiaSharp.SKRect" />
        <Parameter Name="resScale" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="src">The input path.</param>
        <param name="dst">The output path.</param>
        <param name="cullRect">The destination path may be culled to this rectangle.</param>
        <param name="resScale">If &gt; 1, increase precision, else if (0 &lt; res &lt; 1) reduce precision in favor of speed/size.</param>
        <summary>Applies any and all effects to a source path, returning the result in the destination.</summary>
        <returns>Returns true if the path should be filled, or false if it should be drawn with a hairline.</returns>
        <remarks>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFontMetrics">
      <MemberSignature Language="C#" Value="public float GetFontMetrics (out SkiaSharp.SKFontMetrics metrics, float scale = 0);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance float32 GetFontMetrics([out] valuetype SkiaSharp.SKFontMetrics&amp; metrics, float32 scale) cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.SKPaint.GetFontMetrics(SkiaSharp.SKFontMetrics@,System.Single)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.57.0.0</AssemblyVersion>
        <AssemblyVersion>1.58.0.0</AssemblyVersion>
        <AssemblyVersion>1.59.0.0</AssemblyVersion>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metrics" Type="SkiaSharp.SKFontMetrics&amp;" RefType="out" />
        <Parameter Name="scale" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="metrics">The font metrics for the current typeface.</param>
        <param name="scale">If not 0, return width as if the canvas were scaled by this value.</param>
        <summary>Returns the font metrics and line spacing for the current typeface.</summary>
        <returns>Returns the recommended spacing between lines.</returns>
        <remarks>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTextPath">
      <MemberSignature Language="C#" Value="public SkiaSharp.SKPath GetTextPath (byte[] text, SkiaSharp.SKPoint[] points);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class SkiaSharp.SKPath GetTextPath(unsigned int8[] text, valuetype SkiaSharp.SKPoint[] points) cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.SKPaint.GetTextPath(System.Byte[],SkiaSharp.SKPoint[])" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.57.0.0</AssemblyVersion>
        <AssemblyVersion>1.58.0.0</AssemblyVersion>
        <AssemblyVersion>1.59.0.0</AssemblyVersion>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>SkiaSharp.SKPath</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.Byte[]" />
        <Parameter Name="points" Type="SkiaSharp.SKPoint[]" />
      </Parameters>
      <Docs>
        <param name="text">The text to generate an outline for.</param>
        <param name="points">The position to use for each glyph in the text.</param>
        <summary>Returns the path (outline) for the specified text.</summary>
        <returns>Returns the <see cref="T:SkiaSharp.SKPath" /> containing the outline of the text.</returns>
        <remarks>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTextPath">
      <MemberSignature Language="C#" Value="public SkiaSharp.SKPath GetTextPath (string text, SkiaSharp.SKPoint[] points);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class SkiaSharp.SKPath GetTextPath(string text, valuetype SkiaSharp.SKPoint[] points) cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.SKPaint.GetTextPath(System.String,SkiaSharp.SKPoint[])" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.57.0.0</AssemblyVersion>
        <AssemblyVersion>1.58.0.0</AssemblyVersion>
        <AssemblyVersion>1.59.0.0</AssemblyVersion>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>SkiaSharp.SKPath</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="points" Type="SkiaSharp.SKPoint[]" />
      </Parameters>
      <Docs>
        <param name="text">The text to generate an outline for.</param>
        <param name="points">The position to use for each glyph in the text.</param>
        <summary>Returns the path (outline) for the specified text.</summary>
        <returns>Returns the <see cref="T:SkiaSharp.SKPath" /> containing the outline of the text.</returns>
        <remarks>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTextPath">
      <MemberSignature Language="C#" Value="public SkiaSharp.SKPath GetTextPath (byte[] text, float x, float y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class SkiaSharp.SKPath GetTextPath(unsigned int8[] text, float32 x, float32 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.SKPaint.GetTextPath(System.Byte[],System.Single,System.Single)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.57.0.0</AssemblyVersion>
        <AssemblyVersion>1.58.0.0</AssemblyVersion>
        <AssemblyVersion>1.59.0.0</AssemblyVersion>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>SkiaSharp.SKPath</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.Byte[]" />
        <Parameter Name="x" Type="System.Single" />
        <Parameter Name="y" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="text">The text to generate an outline for.</param>
        <param name="x">The x-coordinate of the first glyph in the text.</param>
        <param name="y">The y-coordinate of the first glyph in the text.</param>
        <summary>Returns the path (outline) for the specified text.</summary>
        <returns>Returns the <see cref="T:SkiaSharp.SKPath" /> containing the outline of the text.</returns>
        <remarks>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTextPath">
      <MemberSignature Language="C#" Value="public SkiaSharp.SKPath GetTextPath (IntPtr buffer, IntPtr length, SkiaSharp.SKPoint[] points);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class SkiaSharp.SKPath GetTextPath(native int buffer, native int length, valuetype SkiaSharp.SKPoint[] points) cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.SKPaint.GetTextPath(System.IntPtr,System.IntPtr,SkiaSharp.SKPoint[])" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.57.0.0</AssemblyVersion>
        <AssemblyVersion>1.58.0.0</AssemblyVersion>
        <AssemblyVersion>1.59.0.0</AssemblyVersion>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>SkiaSharp.SKPath</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.IntPtr" />
        <Parameter Name="length" Type="System.IntPtr" />
        <Parameter Name="points" Type="SkiaSharp.SKPoint[]" />
      </Parameters>
      <Docs>
        <param name="buffer">The pointer to a region holding text encoded using the encoding specified in <see cref="P:SkiaSharp.SKPaint.TextEncoding" /> format.</param>
        <param name="length">The number of bytes to read from the <paramref name="buffer." /></param>
        <param name="points">The position to use for each glyph in the text.</param>
        <summary>Returns the path (outline) for the specified text.</summary>
        <returns>Returns the <see cref="T:SkiaSharp.SKPath" /> containing the outline of the text.</returns>
        <remarks>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTextPath">
      <MemberSignature Language="C#" Value="public SkiaSharp.SKPath GetTextPath (string text, float x, float y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class SkiaSharp.SKPath GetTextPath(string text, float32 x, float32 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.SKPaint.GetTextPath(System.String,System.Single,System.Single)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.57.0.0</AssemblyVersion>
        <AssemblyVersion>1.58.0.0</AssemblyVersion>
        <AssemblyVersion>1.59.0.0</AssemblyVersion>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>SkiaSharp.SKPath</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="x" Type="System.Single" />
        <Parameter Name="y" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="text">The text to generate an outline for.</param>
        <param name="x">The x-coordinate of the first glyph in the text.</param>
        <param name="y">The y-coordinate of the first glyph in the text.</param>
        <summary>Returns the path (outline) for the specified text.</summary>
        <returns>Returns the <see cref="T:SkiaSharp.SKPath" /> containing the outline of the text.</returns>
        <remarks>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTextPath">
      <MemberSignature Language="C#" Value="public SkiaSharp.SKPath GetTextPath (IntPtr buffer, IntPtr length, float x, float y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class SkiaSharp.SKPath GetTextPath(native int buffer, native int length, float32 x, float32 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.SKPaint.GetTextPath(System.IntPtr,System.IntPtr,System.Single,System.Single)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.57.0.0</AssemblyVersion>
        <AssemblyVersion>1.58.0.0</AssemblyVersion>
        <AssemblyVersion>1.59.0.0</AssemblyVersion>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>SkiaSharp.SKPath</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.IntPtr" />
        <Parameter Name="length" Type="System.IntPtr" />
        <Parameter Name="x" Type="System.Single" />
        <Parameter Name="y" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="buffer">The pointer to a region holding text encoded using the encoding specified in <see cref="P:SkiaSharp.SKPaint.TextEncoding" /> format.</param>
        <param name="length">The number of bytes to read from the <paramref name="buffer." /></param>
        <param name="x">The x-coordinate of the first glyph in the text.</param>
        <param name="y">The y-coordinate of the first glyph in the text.</param>
        <summary>Returns the path (outline) for the specified text.</summary>
        <returns>Returns the <see cref="T:SkiaSharp.SKPath" /> containing the outline of the text.</returns>
        <remarks>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HintingLevel">
      <MemberSignature Language="C#" Value="public SkiaSharp.SKPaintHinting HintingLevel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype SkiaSharp.SKPaintHinting HintingLevel" />
      <MemberSignature Language="DocId" Value="P:SkiaSharp.SKPaint.HintingLevel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.57.0.0</AssemblyVersion>
        <AssemblyVersion>1.58.0.0</AssemblyVersion>
        <AssemblyVersion>1.59.0.0</AssemblyVersion>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>SkiaSharp.SKPaintHinting</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the level of hinting to be performed.</summary>
        <value>
          <para></para>
        </value>
        <remarks>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ImageFilter">
      <MemberSignature Language="C#" Value="public SkiaSharp.SKImageFilter ImageFilter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class SkiaSharp.SKImageFilter ImageFilter" />
      <MemberSignature Language="DocId" Value="P:SkiaSharp.SKPaint.ImageFilter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.57.0.0</AssemblyVersion>
        <AssemblyVersion>1.58.0.0</AssemblyVersion>
        <AssemblyVersion>1.59.0.0</AssemblyVersion>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>SkiaSharp.SKImageFilter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the image filter.</summary>
        <value>
          <para></para>
        </value>
        <remarks>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAntialias">
      <MemberSignature Language="C#" Value="public bool IsAntialias { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAntialias" />
      <MemberSignature Language="DocId" Value="P:SkiaSharp.SKPaint.IsAntialias" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.57.0.0</AssemblyVersion>
        <AssemblyVersion>1.58.0.0</AssemblyVersion>
        <AssemblyVersion>1.59.0.0</AssemblyVersion>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value indicating whether anti-aliasing is enabled.</summary>
        <value>
          <para></para>
        </value>
        <remarks>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAutohinted">
      <MemberSignature Language="C#" Value="public bool IsAutohinted { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAutohinted" />
      <MemberSignature Language="DocId" Value="P:SkiaSharp.SKPaint.IsAutohinted" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.57.0.0</AssemblyVersion>
        <AssemblyVersion>1.58.0.0</AssemblyVersion>
        <AssemblyVersion>1.59.0.0</AssemblyVersion>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value indicating whether auto-hinting is enabled.</summary>
        <value>
          <para></para>
        </value>
        <remarks>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDither">
      <MemberSignature Language="C#" Value="public bool IsDither { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDither" />
      <MemberSignature Language="DocId" Value="P:SkiaSharp.SKPaint.IsDither" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.57.0.0</AssemblyVersion>
        <AssemblyVersion>1.58.0.0</AssemblyVersion>
        <AssemblyVersion>1.59.0.0</AssemblyVersion>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value indicating whether dithering is enabled.</summary>
        <value>
          <para></para>
        </value>
        <remarks>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEmbeddedBitmapText">
      <MemberSignature Language="C#" Value="public bool IsEmbeddedBitmapText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEmbeddedBitmapText" />
      <MemberSignature Language="DocId" Value="P:SkiaSharp.SKPaint.IsEmbeddedBitmapText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.57.0.0</AssemblyVersion>
        <AssemblyVersion>1.58.0.0</AssemblyVersion>
        <AssemblyVersion>1.59.0.0</AssemblyVersion>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value indicating whether text is an embedded bitmap.</summary>
        <value>
          <para></para>
        </value>
        <remarks>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsLinearText">
      <MemberSignature Language="C#" Value="public bool IsLinearText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsLinearText" />
      <MemberSignature Language="DocId" Value="P:SkiaSharp.SKPaint.IsLinearText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.57.0.0</AssemblyVersion>
        <AssemblyVersion>1.58.0.0</AssemblyVersion>
        <AssemblyVersion>1.59.0.0</AssemblyVersion>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value indicating whether text is linear.</summary>
        <value>
          <para></para>
        </value>
        <remarks>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsStroke">
      <MemberSignature Language="C#" Value="public bool IsStroke { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsStroke" />
      <MemberSignature Language="DocId" Value="P:SkiaSharp.SKPaint.IsStroke" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.57.0.0</AssemblyVersion>
        <AssemblyVersion>1.58.0.0</AssemblyVersion>
        <AssemblyVersion>1.59.0.0</AssemblyVersion>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value indicating whether to paint a stroke or the fill.</summary>
        <value>
          <para></para>
        </value>
        <remarks>This is a shortcut way to set <see cref="P:SkiaSharp.SKPaint.Style" /> to either <see cref="F:SkiaSharp.SKPaintStyle.Stroke" /> or <see cref="F:SkiaSharp.SKPaintStyle.Fill" />.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsVerticalText">
      <MemberSignature Language="C#" Value="public bool IsVerticalText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsVerticalText" />
      <MemberSignature Language="DocId" Value="P:SkiaSharp.SKPaint.IsVerticalText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.57.0.0</AssemblyVersion>
        <AssemblyVersion>1.58.0.0</AssemblyVersion>
        <AssemblyVersion>1.59.0.0</AssemblyVersion>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value indicating whether the text is vertical or horizontal is enabled.</summary>
        <value>
          <para></para>
        </value>
        <remarks>If this property is set true, then advances are treated as Y values rather than X values, and <see cref="M:SkiaSharp.SKCanvas.DrawText" /> will place its glyphs vertically rather than horizontally.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LcdRenderText">
      <MemberSignature Language="C#" Value="public bool LcdRenderText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool LcdRenderText" />
      <MemberSignature Language="DocId" Value="P:SkiaSharp.SKPaint.LcdRenderText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.57.0.0</AssemblyVersion>
        <AssemblyVersion>1.58.0.0</AssemblyVersion>
        <AssemblyVersion>1.59.0.0</AssemblyVersion>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value indicating whether LCD text rendering is enabled.</summary>
        <value>
          <para></para>
        </value>
        <remarks>
          <see cref="P:SkiaSharp.SKPaint.IsAntialias" /> must also be enabled for LCD rendering to be enabled.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaskFilter">
      <MemberSignature Language="C#" Value="public SkiaSharp.SKMaskFilter MaskFilter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class SkiaSharp.SKMaskFilter MaskFilter" />
      <MemberSignature Language="DocId" Value="P:SkiaSharp.SKPaint.MaskFilter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.57.0.0</AssemblyVersion>
        <AssemblyVersion>1.58.0.0</AssemblyVersion>
        <AssemblyVersion>1.59.0.0</AssemblyVersion>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>SkiaSharp.SKMaskFilter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the mask filter to use when painting.</summary>
        <value>
          <para></para>
        </value>
        <remarks>Mask filters control the transformations on the alpha channel before primitives are drawn. Examples are blur or emboss.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MeasureText">
      <MemberSignature Language="C#" Value="public float MeasureText (byte[] text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance float32 MeasureText(unsigned int8[] text) cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.SKPaint.MeasureText(System.Byte[])" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.57.0.0</AssemblyVersion>
        <AssemblyVersion>1.58.0.0</AssemblyVersion>
        <AssemblyVersion>1.59.0.0</AssemblyVersion>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="text">The text to be measured.</param>
        <summary>Measures the specified text.</summary>
        <returns>Returns the width of the text.</returns>
        <remarks>This will return the vertical measure if this is vertical text, in which case the returned value should be treated has a height instead of a width.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MeasureText">
      <MemberSignature Language="C#" Value="public float MeasureText (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance float32 MeasureText(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.SKPaint.MeasureText(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.57.0.0</AssemblyVersion>
        <AssemblyVersion>1.58.0.0</AssemblyVersion>
        <AssemblyVersion>1.59.0.0</AssemblyVersion>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">The text to be measured.</param>
        <summary>Measures the specified text.</summary>
        <returns>Returns the width of the text.</returns>
        <remarks>This will return the vertical measure if this is vertical text, in which case the returned value should be treated has a height instead of a width.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MeasureText">
      <MemberSignature Language="C#" Value="public float MeasureText (byte[] text, ref SkiaSharp.SKRect bounds);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance float32 MeasureText(unsigned int8[] text, valuetype SkiaSharp.SKRect&amp; bounds) cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.SKPaint.MeasureText(System.Byte[],SkiaSharp.SKRect@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.57.0.0</AssemblyVersion>
        <AssemblyVersion>1.58.0.0</AssemblyVersion>
        <AssemblyVersion>1.59.0.0</AssemblyVersion>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.Byte[]" />
        <Parameter Name="bounds" Type="SkiaSharp.SKRect&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="text">The text to be measured.</param>
        <param name="bounds">The bounds of the text relative to (0, 0)</param>
        <summary>Measures the specified text.</summary>
        <returns>Returns the width of the text.</returns>
        <remarks>This will return the vertical measure if this is vertical text, in which case the returned value should be treated has a height instead of a width.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MeasureText">
      <MemberSignature Language="C#" Value="public float MeasureText (IntPtr buffer, IntPtr length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance float32 MeasureText(native int buffer, native int length) cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.SKPaint.MeasureText(System.IntPtr,System.IntPtr)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.57.0.0</AssemblyVersion>
        <AssemblyVersion>1.58.0.0</AssemblyVersion>
        <AssemblyVersion>1.59.0.0</AssemblyVersion>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.IntPtr" />
        <Parameter Name="length" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="buffer">The pointer to a region holding text encoded using the encoding specified in <see cref="P:SkiaSharp.SKPaint.TextEncoding" /> format.</param>
        <param name="length">The number of bytes to read from the <paramref name="buffer." /></param>
        <summary>Measures the specified UTF-8 encoded text.</summary>
        <returns>Returns the width of the text.</returns>
        <remarks>The <paramref name="buffer" /> parameter is a pointer to a region in memory that contains text encoded in the <see cref="P:SkiaSharp.SKPaint.TextEncoding" /> format.   This only consumes up to <paramref name="length" /> bytes from the buffer.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MeasureText">
      <MemberSignature Language="C#" Value="public float MeasureText (string text, ref SkiaSharp.SKRect bounds);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance float32 MeasureText(string text, valuetype SkiaSharp.SKRect&amp; bounds) cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.SKPaint.MeasureText(System.String,SkiaSharp.SKRect@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.57.0.0</AssemblyVersion>
        <AssemblyVersion>1.58.0.0</AssemblyVersion>
        <AssemblyVersion>1.59.0.0</AssemblyVersion>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="bounds" Type="SkiaSharp.SKRect&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="text">The text to be measured.</param>
        <param name="bounds">The bounds of the text relative to (0, 0)</param>
        <summary>Measures the specified text.</summary>
        <returns>Returns the width of the text.</returns>
        <remarks>This will return the vertical measure if this is vertical text, in which case the returned value should be treated has a height instead of a width.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MeasureText">
      <MemberSignature Language="C#" Value="public float MeasureText (IntPtr buffer, IntPtr length, ref SkiaSharp.SKRect bounds);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance float32 MeasureText(native int buffer, native int length, valuetype SkiaSharp.SKRect&amp; bounds) cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.SKPaint.MeasureText(System.IntPtr,System.IntPtr,SkiaSharp.SKRect@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.57.0.0</AssemblyVersion>
        <AssemblyVersion>1.58.0.0</AssemblyVersion>
        <AssemblyVersion>1.59.0.0</AssemblyVersion>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.IntPtr" />
        <Parameter Name="length" Type="System.IntPtr" />
        <Parameter Name="bounds" Type="SkiaSharp.SKRect&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="buffer">The pointer to a region holding text encoded using the encoding specified in <see cref="P:SkiaSharp.SKPaint.TextEncoding" /> format.</param>
        <param name="length">The number of bytes to read from the <paramref name="buffer." /></param>
        <param name="bounds">The bounds of the text relative to (0, 0)</param>
        <summary>Measures the specified UTF-8 encoded text.</summary>
        <returns>Returns the width of the text.</returns>
        <remarks>
          <para>This will return the vertical measure if this is vertical text, in which case the returned value should be treated has a height instead of a width.</para>
          <para>The <paramref name="buffer" /> parameter is a pointer to a region in memory that contains text encoded in the <see cref="P:SkiaSharp.SKPaint.TextEncoding" /> format.   This only consumes up to <paramref name="length" /> bytes from the buffer.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PathEffect">
      <MemberSignature Language="C#" Value="public SkiaSharp.SKPathEffect PathEffect { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class SkiaSharp.SKPathEffect PathEffect" />
      <MemberSignature Language="DocId" Value="P:SkiaSharp.SKPaint.PathEffect" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.57.0.0</AssemblyVersion>
        <AssemblyVersion>1.58.0.0</AssemblyVersion>
        <AssemblyVersion>1.59.0.0</AssemblyVersion>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>SkiaSharp.SKPathEffect</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the path effect to use when painting.</summary>
        <value>
          <para></para>
        </value>
        <remarks>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Shader">
      <MemberSignature Language="C#" Value="public SkiaSharp.SKShader Shader { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class SkiaSharp.SKShader Shader" />
      <MemberSignature Language="DocId" Value="P:SkiaSharp.SKPaint.Shader" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.57.0.0</AssemblyVersion>
        <AssemblyVersion>1.58.0.0</AssemblyVersion>
        <AssemblyVersion>1.59.0.0</AssemblyVersion>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>SkiaSharp.SKShader</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the shader to use when painting.</summary>
        <value>
          <para></para>
        </value>
        <remarks>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StrikeThruText">
      <MemberSignature Language="C#" Value="public bool StrikeThruText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool StrikeThruText" />
      <MemberSignature Language="DocId" Value="P:SkiaSharp.SKPaint.StrikeThruText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.57.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value indicating whether to strike through text.</summary>
        <value>
          <para></para>
        </value>
        <remarks>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StrokeCap">
      <MemberSignature Language="C#" Value="public SkiaSharp.SKStrokeCap StrokeCap { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype SkiaSharp.SKStrokeCap StrokeCap" />
      <MemberSignature Language="DocId" Value="P:SkiaSharp.SKPaint.StrokeCap" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.57.0.0</AssemblyVersion>
        <AssemblyVersion>1.58.0.0</AssemblyVersion>
        <AssemblyVersion>1.59.0.0</AssemblyVersion>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>SkiaSharp.SKStrokeCap</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value indicating how the start and end of stroked lines and paths are treated.</summary>
        <value>
          <para></para>
        </value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="StrokeJoin">
      <MemberSignature Language="C#" Value="public SkiaSharp.SKStrokeJoin StrokeJoin { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype SkiaSharp.SKStrokeJoin StrokeJoin" />
      <MemberSignature Language="DocId" Value="P:SkiaSharp.SKPaint.StrokeJoin" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.57.0.0</AssemblyVersion>
        <AssemblyVersion>1.58.0.0</AssemblyVersion>
        <AssemblyVersion>1.59.0.0</AssemblyVersion>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>SkiaSharp.SKStrokeJoin</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the path’s join type.</summary>
        <value>
          <para></para>
        </value>
        <remarks>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StrokeMiter">
      <MemberSignature Language="C#" Value="public float StrokeMiter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 StrokeMiter" />
      <MemberSignature Language="DocId" Value="P:SkiaSharp.SKPaint.StrokeMiter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.57.0.0</AssemblyVersion>
        <AssemblyVersion>1.58.0.0</AssemblyVersion>
        <AssemblyVersion>1.59.0.0</AssemblyVersion>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the paint’s miter limit.</summary>
        <value />
        <remarks>This is used whenever the <see cref="P:SkiaSharp.SKPaint.Style" /> is <see cref="F:SkiaSharp.SKPaintStyle.Stroke" /> or <see cref="F:SkiaSharp.SKPaintStyle.StrokeAndFill" /> to control the behavior of miter joins when the joins' angle is sharp.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StrokeWidth">
      <MemberSignature Language="C#" Value="public float StrokeWidth { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 StrokeWidth" />
      <MemberSignature Language="DocId" Value="P:SkiaSharp.SKPaint.StrokeWidth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.57.0.0</AssemblyVersion>
        <AssemblyVersion>1.58.0.0</AssemblyVersion>
        <AssemblyVersion>1.59.0.0</AssemblyVersion>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the paint’s stroke width.</summary>
        <value>
          <para></para>
        </value>
        <remarks>This is used whenever the <see cref="P:SkiaSharp.SKPaint.Style" /> is <see cref="F:SkiaSharp.SKPaintStyle.Stroke" /> or <see cref="F:SkiaSharp.SKPaintStyle.StrokeAndFill" />. The value of zero is the special hairline mode.   Hairlines always draw with a width of 1 pixel, regardless of the transformation matrix.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Style">
      <MemberSignature Language="C#" Value="public SkiaSharp.SKPaintStyle Style { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype SkiaSharp.SKPaintStyle Style" />
      <MemberSignature Language="DocId" Value="P:SkiaSharp.SKPaint.Style" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.57.0.0</AssemblyVersion>
        <AssemblyVersion>1.58.0.0</AssemblyVersion>
        <AssemblyVersion>1.59.0.0</AssemblyVersion>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>SkiaSharp.SKPaintStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the painting style.</summary>
        <value>
          <para></para>
        </value>
        <remarks>Can also be set using <see cref="P:SkiaSharp.SKPaint.IsStroke" />.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SubpixelText">
      <MemberSignature Language="C#" Value="public bool SubpixelText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SubpixelText" />
      <MemberSignature Language="DocId" Value="P:SkiaSharp.SKPaint.SubpixelText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.57.0.0</AssemblyVersion>
        <AssemblyVersion>1.58.0.0</AssemblyVersion>
        <AssemblyVersion>1.59.0.0</AssemblyVersion>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value indicating whether to use subpixel text positioning.</summary>
        <value>
          <para></para>
        </value>
        <remarks>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TextAlign">
      <MemberSignature Language="C#" Value="public SkiaSharp.SKTextAlign TextAlign { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype SkiaSharp.SKTextAlign TextAlign" />
      <MemberSignature Language="DocId" Value="P:SkiaSharp.SKPaint.TextAlign" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.57.0.0</AssemblyVersion>
        <AssemblyVersion>1.58.0.0</AssemblyVersion>
        <AssemblyVersion>1.59.0.0</AssemblyVersion>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>SkiaSharp.SKTextAlign</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the path’s align value.</summary>
        <value>
          <para></para>
        </value>
        <remarks>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TextEncoding">
      <MemberSignature Language="C#" Value="public SkiaSharp.SKTextEncoding TextEncoding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype SkiaSharp.SKTextEncoding TextEncoding" />
      <MemberSignature Language="DocId" Value="P:SkiaSharp.SKPaint.TextEncoding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.57.0.0</AssemblyVersion>
        <AssemblyVersion>1.58.0.0</AssemblyVersion>
        <AssemblyVersion>1.59.0.0</AssemblyVersion>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>SkiaSharp.SKTextEncoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the encoding used when drawing or measuring text.</summary>
        <value>
          <para></para>
        </value>
        <remarks>This defaults to UTF-8 encoding.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TextScaleX">
      <MemberSignature Language="C#" Value="public float TextScaleX { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 TextScaleX" />
      <MemberSignature Language="DocId" Value="P:SkiaSharp.SKPaint.TextScaleX" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.57.0.0</AssemblyVersion>
        <AssemblyVersion>1.58.0.0</AssemblyVersion>
        <AssemblyVersion>1.59.0.0</AssemblyVersion>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets paint’s horizontal scale factor for text.</summary>
        <value>
          <para></para>
        </value>
        <remarks>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TextSize">
      <MemberSignature Language="C#" Value="public float TextSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 TextSize" />
      <MemberSignature Language="DocId" Value="P:SkiaSharp.SKPaint.TextSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.57.0.0</AssemblyVersion>
        <AssemblyVersion>1.58.0.0</AssemblyVersion>
        <AssemblyVersion>1.59.0.0</AssemblyVersion>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the text size.</summary>
        <value>
          <para></para>
        </value>
        <remarks>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TextSkewX">
      <MemberSignature Language="C#" Value="public float TextSkewX { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 TextSkewX" />
      <MemberSignature Language="DocId" Value="P:SkiaSharp.SKPaint.TextSkewX" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.57.0.0</AssemblyVersion>
        <AssemblyVersion>1.58.0.0</AssemblyVersion>
        <AssemblyVersion>1.59.0.0</AssemblyVersion>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets paint’s horizontal skew factor for text.</summary>
        <value>
          <para></para>
        </value>
        <remarks>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Typeface">
      <MemberSignature Language="C#" Value="public SkiaSharp.SKTypeface Typeface { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class SkiaSharp.SKTypeface Typeface" />
      <MemberSignature Language="DocId" Value="P:SkiaSharp.SKPaint.Typeface" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.57.0.0</AssemblyVersion>
        <AssemblyVersion>1.58.0.0</AssemblyVersion>
        <AssemblyVersion>1.59.0.0</AssemblyVersion>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>SkiaSharp.SKTypeface</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the typeface used when painting text. May be <see langword="null" />.</summary>
        <value>
          <para></para>
        </value>
        <remarks>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnderlineText">
      <MemberSignature Language="C#" Value="public bool UnderlineText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UnderlineText" />
      <MemberSignature Language="DocId" Value="P:SkiaSharp.SKPaint.UnderlineText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.57.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value indicating whether to underline text.</summary>
        <value>
          <para></para>
        </value>
        <remarks>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XferMode">
      <MemberSignature Language="C#" Value="public SkiaSharp.SKXferMode XferMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype SkiaSharp.SKXferMode XferMode" />
      <MemberSignature Language="DocId" Value="P:SkiaSharp.SKPaint.XferMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.57.0.0</AssemblyVersion>
        <AssemblyVersion>1.58.0.0</AssemblyVersion>
        <AssemblyVersion>1.59.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Use BlendMode instead.", true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>SkiaSharp.SKXferMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the transfer mode.</summary>
        <value>
          <para></para>
        </value>
        <remarks>
          <para></para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
