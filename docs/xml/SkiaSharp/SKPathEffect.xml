<Type Name="SKPathEffect" FullName="SkiaSharp.SKPathEffect">
  <TypeSignature Language="C#" Value="public class SKPathEffect : SkiaSharp.SKObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SKPathEffect extends SkiaSharp.SKObject" />
  <TypeSignature Language="DocId" Value="T:SkiaSharp.SKPathEffect" />
  <AssemblyInfo>
    <AssemblyName>SkiaSharp</AssemblyName>
    <AssemblyVersion>1.57.0.0</AssemblyVersion>
    <AssemblyVersion>1.58.0.0</AssemblyVersion>
    <AssemblyVersion>1.59.0.0</AssemblyVersion>
    <AssemblyVersion>1.60.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>SkiaSharp.SKObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>The base class for objects in the <see cref="T:SkiaSharp.SKPaint" /> that affect the geometry of a drawing primitive before it is transformed by the canvas' matrix and drawn.</summary>
    <remarks />
  </Docs>
  <Members>
    <Member MemberName="Create1DPath">
      <MemberSignature Language="C#" Value="public static SkiaSharp.SKPathEffect Create1DPath (SkiaSharp.SKPath path, float advance, float phase, SkiaSharp.SkPath1DPathEffectStyle style);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class SkiaSharp.SKPathEffect Create1DPath(class SkiaSharp.SKPath path, float32 advance, float32 phase, valuetype SkiaSharp.SkPath1DPathEffectStyle style) cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.SKPathEffect.Create1DPath(SkiaSharp.SKPath,System.Single,System.Single,SkiaSharp.SkPath1DPathEffectStyle)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.57.0.0</AssemblyVersion>
        <AssemblyVersion>1.58.0.0</AssemblyVersion>
        <AssemblyVersion>1.59.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Use Create1DPath(SKPath, float, float, SKPath1DPathEffectStyle) instead.", true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>SkiaSharp.SKPathEffect</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="SkiaSharp.SKPath" />
        <Parameter Name="advance" Type="System.Single" />
        <Parameter Name="phase" Type="System.Single" />
        <Parameter Name="style" Type="SkiaSharp.SkPath1DPathEffectStyle" />
      </Parameters>
      <Docs>
        <param name="path">The path to replicate (dash).</param>
        <param name="advance">The space between instances of path.</param>
        <param name="phase">The distance (mod advance) along path for its initial position.</param>
        <param name="style">How to transform path at each point (based on the current position and tangent).</param>
        <summary>Creates a dash path effect by replicating the specified path.</summary>
        <returns>Returns the new <see cref="T:SkiaSharp.SKPathEffect" />, or null on error.</returns>
        <remarks>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Create1DPath">
      <MemberSignature Language="C#" Value="public static SkiaSharp.SKPathEffect Create1DPath (SkiaSharp.SKPath path, float advance, float phase, SkiaSharp.SKPath1DPathEffectStyle style);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class SkiaSharp.SKPathEffect Create1DPath(class SkiaSharp.SKPath path, float32 advance, float32 phase, valuetype SkiaSharp.SKPath1DPathEffectStyle style) cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.SKPathEffect.Create1DPath(SkiaSharp.SKPath,System.Single,System.Single,SkiaSharp.SKPath1DPathEffectStyle)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.57.0.0</AssemblyVersion>
        <AssemblyVersion>1.58.0.0</AssemblyVersion>
        <AssemblyVersion>1.59.0.0</AssemblyVersion>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>SkiaSharp.SKPathEffect</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="SkiaSharp.SKPath" />
        <Parameter Name="advance" Type="System.Single" />
        <Parameter Name="phase" Type="System.Single" />
        <Parameter Name="style" Type="SkiaSharp.SKPath1DPathEffectStyle" />
      </Parameters>
      <Docs>
        <param name="path">The path to replicate (dash).</param>
        <param name="advance">The space between instances of path.</param>
        <param name="phase">The distance (mod advance) along path for its initial position.</param>
        <param name="style">How to transform path at each point (based on the current position and tangent).</param>
        <summary>Creates a dash path effect by replicating the specified path.</summary>
        <returns>Returns the new <see cref="T:SkiaSharp.SKPathEffect" />, or null on error.</returns>
        <remarks>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Create2DLine">
      <MemberSignature Language="C#" Value="public static SkiaSharp.SKPathEffect Create2DLine (float width, SkiaSharp.SKMatrix matrix);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class SkiaSharp.SKPathEffect Create2DLine(float32 width, valuetype SkiaSharp.SKMatrix matrix) cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.SKPathEffect.Create2DLine(System.Single,SkiaSharp.SKMatrix)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.57.0.0</AssemblyVersion>
        <AssemblyVersion>1.58.0.0</AssemblyVersion>
        <AssemblyVersion>1.59.0.0</AssemblyVersion>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>SkiaSharp.SKPathEffect</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="width" Type="System.Single" />
        <Parameter Name="matrix" Type="SkiaSharp.SKMatrix" />
      </Parameters>
      <Docs>
        <param name="width">The width of the line.</param>
        <param name="matrix">The matrix.</param>
        <summary>Creates a dash path effect by replacing the path with a solid line.</summary>
        <returns>Returns the new <see cref="T:SkiaSharp.SKPathEffect" />, or null on error.</returns>
        <remarks>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Create2DPath">
      <MemberSignature Language="C#" Value="public static SkiaSharp.SKPathEffect Create2DPath (SkiaSharp.SKMatrix matrix, SkiaSharp.SKPath path);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class SkiaSharp.SKPathEffect Create2DPath(valuetype SkiaSharp.SKMatrix matrix, class SkiaSharp.SKPath path) cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.SKPathEffect.Create2DPath(SkiaSharp.SKMatrix,SkiaSharp.SKPath)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.57.0.0</AssemblyVersion>
        <AssemblyVersion>1.58.0.0</AssemblyVersion>
        <AssemblyVersion>1.59.0.0</AssemblyVersion>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>SkiaSharp.SKPathEffect</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="matrix" Type="SkiaSharp.SKMatrix" />
        <Parameter Name="path" Type="SkiaSharp.SKPath" />
      </Parameters>
      <Docs>
        <param name="matrix">The matrix.</param>
        <param name="path">The path.</param>
        <summary>Stamp the specified path to fill the shape, using the matrix to define the latice.</summary>
        <returns>Returns the new <see cref="T:SkiaSharp.SKPathEffect" />, or null on error.</returns>
        <remarks>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateArcTo">
      <MemberSignature Language="C#" Value="public static SkiaSharp.SKPathEffect CreateArcTo (float radius);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class SkiaSharp.SKPathEffect CreateArcTo(float32 radius) cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.SKPathEffect.CreateArcTo(System.Single)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.58.0.0</AssemblyVersion>
        <AssemblyVersion>1.59.0.0</AssemblyVersion>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>SkiaSharp.SKPathEffect</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="radius" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="radius">The arc radius.</param>
        <summary>Creates a path effect that can turn sharp corners into various arcs.</summary>
        <returns>Returns the new <see cref="T:SkiaSharp.SKPathEffect" />, or null on error.</returns>
        <remarks>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateCompose">
      <MemberSignature Language="C#" Value="public static SkiaSharp.SKPathEffect CreateCompose (SkiaSharp.SKPathEffect outer, SkiaSharp.SKPathEffect inner);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class SkiaSharp.SKPathEffect CreateCompose(class SkiaSharp.SKPathEffect outer, class SkiaSharp.SKPathEffect inner) cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.SKPathEffect.CreateCompose(SkiaSharp.SKPathEffect,SkiaSharp.SKPathEffect)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.57.0.0</AssemblyVersion>
        <AssemblyVersion>1.58.0.0</AssemblyVersion>
        <AssemblyVersion>1.59.0.0</AssemblyVersion>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>SkiaSharp.SKPathEffect</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="outer" Type="SkiaSharp.SKPathEffect" />
        <Parameter Name="inner" Type="SkiaSharp.SKPathEffect" />
      </Parameters>
      <Docs>
        <param name="outer">The outer (second) path effect to apply.</param>
        <param name="inner">The inner (first) path effect to apply.</param>
        <summary>Creates a compound path effect.</summary>
        <returns>Returns the new <see cref="T:SkiaSharp.SKPathEffect" />, or null on error.</returns>
        <remarks>The effect is to apply first the inner path effect and the the outer path effect (e.g. outer(inner(path))).</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateCorner">
      <MemberSignature Language="C#" Value="public static SkiaSharp.SKPathEffect CreateCorner (float radius);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class SkiaSharp.SKPathEffect CreateCorner(float32 radius) cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.SKPathEffect.CreateCorner(System.Single)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.57.0.0</AssemblyVersion>
        <AssemblyVersion>1.58.0.0</AssemblyVersion>
        <AssemblyVersion>1.59.0.0</AssemblyVersion>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>SkiaSharp.SKPathEffect</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="radius" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="radius">The radius to use, must be &gt; 0 to have an effect.</param>
        <summary>Creates a path effect that can turn sharp corners into various treatments (e.g. rounded corners).</summary>
        <returns>Returns the new <see cref="T:SkiaSharp.SKPathEffect" />, or null on error.</returns>
        <remarks>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateDash">
      <MemberSignature Language="C#" Value="public static SkiaSharp.SKPathEffect CreateDash (float[] intervals, float phase);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class SkiaSharp.SKPathEffect CreateDash(float32[] intervals, float32 phase) cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.SKPathEffect.CreateDash(System.Single[],System.Single)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.57.0.0</AssemblyVersion>
        <AssemblyVersion>1.58.0.0</AssemblyVersion>
        <AssemblyVersion>1.59.0.0</AssemblyVersion>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>SkiaSharp.SKPathEffect</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="intervals" Type="System.Single[]" />
        <Parameter Name="phase" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="intervals">The definition of the dash pattern via an even number of entries.</param>
        <param name="phase">The offset into the intervals array. (mod the sum of all of the intervals).</param>
        <summary>Creates a dash path effect by specifying the dash intervals.</summary>
        <returns>Returns the new <see cref="T:SkiaSharp.SKPathEffect" />, or null on error.</returns>
        <remarks>
          <para>The dash pattern is defined via an array containing an even number of entries (&gt;=2), with the even indices specifying the length of "on" intervals, and the odd indices specifying the length of "off” intervals.</para>
          <para>For example: if the intervals = new [] { 10, 20 } and the phase = 25, then the dash pattern will be: 5 pixels off, 10 pixels on, 20 pixels off, 10 pixels on, 20 pixels off, etc. A phase of -5, 25, 55, 85, etc. would all result in the same path, because the sum of all the intervals is 30.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateDiscrete">
      <MemberSignature Language="C#" Value="public static SkiaSharp.SKPathEffect CreateDiscrete (float segLength, float deviation, uint seedAssist = 0);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class SkiaSharp.SKPathEffect CreateDiscrete(float32 segLength, float32 deviation, unsigned int32 seedAssist) cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.SKPathEffect.CreateDiscrete(System.Single,System.Single,System.UInt32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.57.0.0</AssemblyVersion>
        <AssemblyVersion>1.58.0.0</AssemblyVersion>
        <AssemblyVersion>1.59.0.0</AssemblyVersion>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>SkiaSharp.SKPathEffect</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="segLength" Type="System.Single" />
        <Parameter Name="deviation" Type="System.Single" />
        <Parameter Name="seedAssist" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="segLength">The length of the segments to break the path into.</param>
        <param name="deviation">The maximum distance to move the point away from the original path.</param>
        <param name="seedAssist">The randomizer seed to use.</param>
        <summary>Creates a “jitter” path effect by chopping a path into discrete segments, and randomly displacing them.</summary>
        <returns>Returns the new <see cref="T:SkiaSharp.SKPathEffect" />, or null on error.</returns>
        <remarks>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateSum">
      <MemberSignature Language="C#" Value="public static SkiaSharp.SKPathEffect CreateSum (SkiaSharp.SKPathEffect first, SkiaSharp.SKPathEffect second);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class SkiaSharp.SKPathEffect CreateSum(class SkiaSharp.SKPathEffect first, class SkiaSharp.SKPathEffect second) cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.SKPathEffect.CreateSum(SkiaSharp.SKPathEffect,SkiaSharp.SKPathEffect)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.57.0.0</AssemblyVersion>
        <AssemblyVersion>1.58.0.0</AssemblyVersion>
        <AssemblyVersion>1.59.0.0</AssemblyVersion>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>SkiaSharp.SKPathEffect</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="first" Type="SkiaSharp.SKPathEffect" />
        <Parameter Name="second" Type="SkiaSharp.SKPathEffect" />
      </Parameters>
      <Docs>
        <param name="first">The first path effect to apply.</param>
        <param name="second">The second path effect to apply.</param>
        <summary>Creates a compound path effect.</summary>
        <returns>Returns the new <see cref="T:SkiaSharp.SKPathEffect" />, or null on error.</returns>
        <remarks>The effect is to apply one path after the other.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.SKPathEffect.Dispose(System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.57.0.0</AssemblyVersion>
        <AssemblyVersion>1.58.0.0</AssemblyVersion>
        <AssemblyVersion>1.59.0.0</AssemblyVersion>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
