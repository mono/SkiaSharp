<Type Name="SKPath" FullName="SkiaSharp.SKPath">
  <TypeSignature Language="C#" Value="public class SKPath : SkiaSharp.SKObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SKPath extends SkiaSharp.SKObject" />
  <TypeSignature Language="DocId" Value="T:SkiaSharp.SKPath" />
  <AssemblyInfo>
    <AssemblyName>SkiaSharp</AssemblyName>
    <AssemblyVersion>1.57.0.0</AssemblyVersion>
    <AssemblyVersion>1.58.0.0</AssemblyVersion>
    <AssemblyVersion>1.59.0.0</AssemblyVersion>
    <AssemblyVersion>1.60.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>SkiaSharp.SKObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>A compound geometric path.</summary>
    <remarks>A path encapsulates compound (multiple contour) geometric paths consisting of straight line segments, quadratic curves, and cubic curves.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SKPath ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.SKPath.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.57.0.0</AssemblyVersion>
        <AssemblyVersion>1.58.0.0</AssemblyVersion>
        <AssemblyVersion>1.59.0.0</AssemblyVersion>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Creates an empty path.</summary>
        <remarks>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SKPath (SkiaSharp.SKPath path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class SkiaSharp.SKPath path) cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.SKPath.#ctor(SkiaSharp.SKPath)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.57.0.0</AssemblyVersion>
        <AssemblyVersion>1.58.0.0</AssemblyVersion>
        <AssemblyVersion>1.59.0.0</AssemblyVersion>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="path" Type="SkiaSharp.SKPath" />
      </Parameters>
      <Docs>
        <param name="path">The path to clone.</param>
        <summary>Creates a path by making a copy of an existing path</summary>
        <remarks>This constructor can throw InvalidOperationException if there is a problem copying the source path.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddArc">
      <MemberSignature Language="C#" Value="public void AddArc (SkiaSharp.SKRect oval, float startAngle, float sweepAngle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddArc(valuetype SkiaSharp.SKRect oval, float32 startAngle, float32 sweepAngle) cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.SKPath.AddArc(SkiaSharp.SKRect,System.Single,System.Single)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.57.0.0</AssemblyVersion>
        <AssemblyVersion>1.58.0.0</AssemblyVersion>
        <AssemblyVersion>1.59.0.0</AssemblyVersion>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oval" Type="SkiaSharp.SKRect" />
        <Parameter Name="startAngle" Type="System.Single" />
        <Parameter Name="sweepAngle" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="oval">The bounds of oval used to define the size of the arc.</param>
        <param name="startAngle">Starting angle (in degrees) where the arc begins.</param>
        <param name="sweepAngle">Sweep angle (in degrees) measured clockwise.</param>
        <summary>Adds the specified arc to the path as a new contour.</summary>
        <remarks>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddCircle">
      <MemberSignature Language="C#" Value="public void AddCircle (float x, float y, float radius, SkiaSharp.SKPathDirection dir = SkiaSharp.SKPathDirection.Clockwise);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddCircle(float32 x, float32 y, float32 radius, valuetype SkiaSharp.SKPathDirection dir) cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.SKPath.AddCircle(System.Single,System.Single,System.Single,SkiaSharp.SKPathDirection)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.57.0.0</AssemblyVersion>
        <AssemblyVersion>1.58.0.0</AssemblyVersion>
        <AssemblyVersion>1.59.0.0</AssemblyVersion>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Single" />
        <Parameter Name="y" Type="System.Single" />
        <Parameter Name="radius" Type="System.Single" />
        <Parameter Name="dir" Type="SkiaSharp.SKPathDirection" />
      </Parameters>
      <Docs>
        <param name="x">The x-coordinate of the center of the circle.</param>
        <param name="y">The y-coordinate of the center of the circle.</param>
        <param name="radius">The radius of the circle.</param>
        <param name="dir">The direction to wind the circle's contour.</param>
        <summary>Adds a closed circle contour to the path.</summary>
        <remarks>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddOval">
      <MemberSignature Language="C#" Value="public void AddOval (SkiaSharp.SKRect rect, SkiaSharp.SKPathDirection direction = SkiaSharp.SKPathDirection.Clockwise);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddOval(valuetype SkiaSharp.SKRect rect, valuetype SkiaSharp.SKPathDirection direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.SKPath.AddOval(SkiaSharp.SKRect,SkiaSharp.SKPathDirection)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.57.0.0</AssemblyVersion>
        <AssemblyVersion>1.58.0.0</AssemblyVersion>
        <AssemblyVersion>1.59.0.0</AssemblyVersion>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="SkiaSharp.SKRect" />
        <Parameter Name="direction" Type="SkiaSharp.SKPathDirection" />
      </Parameters>
      <Docs>
        <param name="rect">The bounding oval to add as a closed contour to the path.</param>
        <param name="direction">The direction to wind the oval's contour.</param>
        <summary>Adds a closed oval contour to the path.</summary>
        <remarks>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddPath">
      <MemberSignature Language="C#" Value="public void AddPath (SkiaSharp.SKPath other, SkiaSharp.SKPath.AddMode mode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddPath(class SkiaSharp.SKPath other, valuetype SkiaSharp.SKPath/AddMode mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.SKPath.AddPath(SkiaSharp.SKPath,SkiaSharp.SKPath.AddMode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.57.0.0</AssemblyVersion>
        <AssemblyVersion>1.58.0.0</AssemblyVersion>
        <AssemblyVersion>1.59.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Use AddPath(SKPath, SKPathAddMode) instead.", true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="SkiaSharp.SKPath" />
        <Parameter Name="mode" Type="SkiaSharp.SKPath+AddMode" />
      </Parameters>
      <Docs>
        <param name="other">The path containing the elements to be added to the current path.</param>
        <param name="mode">Determines how the <paramref name="other" /> path contours are added to the path. On <see cref="F:SkiaSharp.SKPath+AddMode.Append" /> mode, contours are added as new contours. On <see cref="F:SkiaSharp.SKPath+AddMode.Extend" /> mode, the last contour of the path is extended with the first contour of the <paramref name="other" /> path.</param>
        <summary>Extends the current path with the path elements from another path, using the specified extension mode.</summary>
        <remarks>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddPath">
      <MemberSignature Language="C#" Value="public void AddPath (SkiaSharp.SKPath other, SkiaSharp.SKPathAddMode mode = SkiaSharp.SKPathAddMode.Append);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddPath(class SkiaSharp.SKPath other, valuetype SkiaSharp.SKPathAddMode mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.SKPath.AddPath(SkiaSharp.SKPath,SkiaSharp.SKPathAddMode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.57.0.0</AssemblyVersion>
        <AssemblyVersion>1.58.0.0</AssemblyVersion>
        <AssemblyVersion>1.59.0.0</AssemblyVersion>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="SkiaSharp.SKPath" />
        <Parameter Name="mode" Type="SkiaSharp.SKPathAddMode" />
      </Parameters>
      <Docs>
        <param name="other">The path containing the elements to be added to the current path.</param>
        <param name="mode">Determines how the <paramref name="other" /> path contours are added to the path. On <see cref="F:SkiaSharp.SKPathAddMode.Append" /> mode, contours are added as new contours. On <see cref="F:SkiaSharp.SKPathAddMode.Extend" /> mode, the last contour of the path is extended with the first contour of the <paramref name="other" /> path.</param>
        <summary>Extends the current path with the path elements from another path, using the specified extension mode.</summary>
        <remarks>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddPath">
      <MemberSignature Language="C#" Value="public void AddPath (SkiaSharp.SKPath other, ref SkiaSharp.SKMatrix matrix, SkiaSharp.SKPath.AddMode mode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddPath(class SkiaSharp.SKPath other, valuetype SkiaSharp.SKMatrix&amp; matrix, valuetype SkiaSharp.SKPath/AddMode mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.SKPath.AddPath(SkiaSharp.SKPath,SkiaSharp.SKMatrix@,SkiaSharp.SKPath.AddMode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.57.0.0</AssemblyVersion>
        <AssemblyVersion>1.58.0.0</AssemblyVersion>
        <AssemblyVersion>1.59.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Use AddPath(SKPath, ref SKMatrix, SKPathAddMode) instead.", true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="SkiaSharp.SKPath" />
        <Parameter Name="matrix" Type="SkiaSharp.SKMatrix&amp;" RefType="ref" />
        <Parameter Name="mode" Type="SkiaSharp.SKPath+AddMode" />
      </Parameters>
      <Docs>
        <param name="other">The path containing the elements to be added to the current path.</param>
        <param name="matrix">Transformation matrix applied to the <paramref name="other" /> path.</param>
        <param name="mode">Determines how the <paramref name="other" /> path contours are added to the path. On <see cref="F:SkiaSharp.SKPath+AddMode.Append" /> mode, contours are added as new contours. On <see cref="F:SkiaSharp.SKPath+AddMode.Extend" /> mode, the last contour of the path is extended with the first contour of the <paramref name="other" /> path.</param>
        <summary>Extends the current path with the path elements from another path, by applying the specified transformation matrix, using the specified extension mode.</summary>
        <remarks>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddPath">
      <MemberSignature Language="C#" Value="public void AddPath (SkiaSharp.SKPath other, ref SkiaSharp.SKMatrix matrix, SkiaSharp.SKPathAddMode mode = SkiaSharp.SKPathAddMode.Append);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddPath(class SkiaSharp.SKPath other, valuetype SkiaSharp.SKMatrix&amp; matrix, valuetype SkiaSharp.SKPathAddMode mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.SKPath.AddPath(SkiaSharp.SKPath,SkiaSharp.SKMatrix@,SkiaSharp.SKPathAddMode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.57.0.0</AssemblyVersion>
        <AssemblyVersion>1.58.0.0</AssemblyVersion>
        <AssemblyVersion>1.59.0.0</AssemblyVersion>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="SkiaSharp.SKPath" />
        <Parameter Name="matrix" Type="SkiaSharp.SKMatrix&amp;" RefType="ref" />
        <Parameter Name="mode" Type="SkiaSharp.SKPathAddMode" />
      </Parameters>
      <Docs>
        <param name="other">The path containing the elements to be added to the current path.</param>
        <param name="matrix">Transformation matrix applied to the <paramref name="other" /> path.</param>
        <param name="mode">Determines how the <paramref name="other" /> path contours are added to the path. On <see cref="F:SkiaSharp.SKPathAddMode.Append" /> mode, contours are added as new contours. On <see cref="F:SkiaSharp.SKPathAddMode.Extend" /> mode, the last contour of the path is extended with the first contour of the <paramref name="other" /> path.</param>
        <summary>Extends the current path with the path elements from another path, by applying the specified transformation matrix, using the specified extension mode.</summary>
        <remarks>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddPath">
      <MemberSignature Language="C#" Value="public void AddPath (SkiaSharp.SKPath other, float dx, float dy, SkiaSharp.SKPath.AddMode mode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddPath(class SkiaSharp.SKPath other, float32 dx, float32 dy, valuetype SkiaSharp.SKPath/AddMode mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.SKPath.AddPath(SkiaSharp.SKPath,System.Single,System.Single,SkiaSharp.SKPath.AddMode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.57.0.0</AssemblyVersion>
        <AssemblyVersion>1.58.0.0</AssemblyVersion>
        <AssemblyVersion>1.59.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Use AddPath(SKPath, float, float, SKPathAddMode) instead.", true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="SkiaSharp.SKPath" />
        <Parameter Name="dx" Type="System.Single" />
        <Parameter Name="dy" Type="System.Single" />
        <Parameter Name="mode" Type="SkiaSharp.SKPath+AddMode" />
      </Parameters>
      <Docs>
        <param name="other">The path containing the elements to be added to the current path.</param>
        <param name="dx">The amount to translate the path in X as it is added.</param>
        <param name="dy">The amount to translate the path in Y as it is added.</param>
        <param name="mode">Determines how the <paramref name="other" /> path contours are added to the path. On <see cref="F:SkiaSharp.SKPath+AddMode.Append" /> mode, contours are added as new contours. On <see cref="F:SkiaSharp.SKPath+AddMode.Extend" /> mode, the last contour of the path is extended with the first contour of the <paramref name="other" /> path.</param>
        <summary>Extends the current path with the path elements from another path offset by (<paramref name="dx" />, <paramref name="dy" />), using the specified extension mode.</summary>
        <remarks>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddPath">
      <MemberSignature Language="C#" Value="public void AddPath (SkiaSharp.SKPath other, float dx, float dy, SkiaSharp.SKPathAddMode mode = SkiaSharp.SKPathAddMode.Append);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddPath(class SkiaSharp.SKPath other, float32 dx, float32 dy, valuetype SkiaSharp.SKPathAddMode mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.SKPath.AddPath(SkiaSharp.SKPath,System.Single,System.Single,SkiaSharp.SKPathAddMode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.57.0.0</AssemblyVersion>
        <AssemblyVersion>1.58.0.0</AssemblyVersion>
        <AssemblyVersion>1.59.0.0</AssemblyVersion>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="SkiaSharp.SKPath" />
        <Parameter Name="dx" Type="System.Single" />
        <Parameter Name="dy" Type="System.Single" />
        <Parameter Name="mode" Type="SkiaSharp.SKPathAddMode" />
      </Parameters>
      <Docs>
        <param name="other">The path containing the elements to be added to the current path.</param>
        <param name="dx">The amount to translate the path in X as it is added.</param>
        <param name="dy">The amount to translate the path in Y as it is added.</param>
        <param name="mode">Determines how the <paramref name="other" /> path contours are added to the path. On <see cref="F:SkiaSharp.SKPathAddMode.Append" /> mode, contours are added as new contours. On <see cref="F:SkiaSharp.SKPathAddMode.Extend" /> mode, the last contour of the path is extended with the first contour of the <paramref name="other" /> path.</param>
        <summary>Extends the current path with the path elements from another path offset by (<paramref name="dx" />, <paramref name="dy" />), using the specified extension mode.</summary>
        <remarks>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddPathReverse">
      <MemberSignature Language="C#" Value="public void AddPathReverse (SkiaSharp.SKPath other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddPathReverse(class SkiaSharp.SKPath other) cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.SKPath.AddPathReverse(SkiaSharp.SKPath)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.57.0.0</AssemblyVersion>
        <AssemblyVersion>1.58.0.0</AssemblyVersion>
        <AssemblyVersion>1.59.0.0</AssemblyVersion>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="SkiaSharp.SKPath" />
      </Parameters>
      <Docs>
        <param name="other">The path containing the elements to be added to the current path.</param>
        <summary>Extends the current path with the path elements from another path in reverse order.</summary>
        <remarks>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddPoly">
      <MemberSignature Language="C#" Value="public void AddPoly (SkiaSharp.SKPoint[] points, bool close = true);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddPoly(valuetype SkiaSharp.SKPoint[] points, bool close) cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.SKPath.AddPoly(SkiaSharp.SKPoint[],System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.57.0.0</AssemblyVersion>
        <AssemblyVersion>1.58.0.0</AssemblyVersion>
        <AssemblyVersion>1.59.0.0</AssemblyVersion>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="points" Type="SkiaSharp.SKPoint[]" />
        <Parameter Name="close" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="points">The points that make up the polygon.</param>
        <param name="close">Whether or not to close the path.</param>
        <summary>Adds a new contour made of just lines.</summary>
        <remarks>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddRect">
      <MemberSignature Language="C#" Value="public void AddRect (SkiaSharp.SKRect rect, SkiaSharp.SKPathDirection direction = SkiaSharp.SKPathDirection.Clockwise);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddRect(valuetype SkiaSharp.SKRect rect, valuetype SkiaSharp.SKPathDirection direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.SKPath.AddRect(SkiaSharp.SKRect,SkiaSharp.SKPathDirection)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.57.0.0</AssemblyVersion>
        <AssemblyVersion>1.58.0.0</AssemblyVersion>
        <AssemblyVersion>1.59.0.0</AssemblyVersion>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="SkiaSharp.SKRect" />
        <Parameter Name="direction" Type="SkiaSharp.SKPathDirection" />
      </Parameters>
      <Docs>
        <param name="rect">The rectangle to add as a closed contour to the path</param>
        <param name="direction">The direction to wind the rectangle's contour.</param>
        <summary>Adds a closed rectangle contour to the path.</summary>
        <remarks>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddRect">
      <MemberSignature Language="C#" Value="public void AddRect (SkiaSharp.SKRect rect, SkiaSharp.SKPathDirection direction, uint startIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddRect(valuetype SkiaSharp.SKRect rect, valuetype SkiaSharp.SKPathDirection direction, unsigned int32 startIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.SKPath.AddRect(SkiaSharp.SKRect,SkiaSharp.SKPathDirection,System.UInt32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.57.0.0</AssemblyVersion>
        <AssemblyVersion>1.58.0.0</AssemblyVersion>
        <AssemblyVersion>1.59.0.0</AssemblyVersion>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="SkiaSharp.SKRect" />
        <Parameter Name="direction" Type="SkiaSharp.SKPathDirection" />
        <Parameter Name="startIndex" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="rect">The rectangle to add as a closed contour to the path</param>
        <param name="direction">The direction to wind the rectangle's contour.</param>
        <param name="startIndex">Initial point of the contour (initial <see cref="M:SkiaSharp.SKPath.MoveTo" />), expressed as a corner index, starting in the upper-left position, clock-wise. Must be in the range of 0..3.</param>
        <summary>Adds a closed rectangle contour to the path.</summary>
        <remarks>Add a closed rectangle contour to the path with an initial point of the contour (startIndex) expressed as a corner index.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddRoundedRect">
      <MemberSignature Language="C#" Value="public void AddRoundedRect (SkiaSharp.SKRect rect, float rx, float ry, SkiaSharp.SKPathDirection dir = SkiaSharp.SKPathDirection.Clockwise);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddRoundedRect(valuetype SkiaSharp.SKRect rect, float32 rx, float32 ry, valuetype SkiaSharp.SKPathDirection dir) cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.SKPath.AddRoundedRect(SkiaSharp.SKRect,System.Single,System.Single,SkiaSharp.SKPathDirection)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.57.0.0</AssemblyVersion>
        <AssemblyVersion>1.58.0.0</AssemblyVersion>
        <AssemblyVersion>1.59.0.0</AssemblyVersion>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Use AddRoundRect instead.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="SkiaSharp.SKRect" />
        <Parameter Name="rx" Type="System.Single" />
        <Parameter Name="ry" Type="System.Single" />
        <Parameter Name="dir" Type="SkiaSharp.SKPathDirection" />
      </Parameters>
      <Docs>
        <param name="rect">The bounds of a the rounded rectangle.</param>
        <param name="rx">The x-radius of the rounded corners.</param>
        <param name="ry">The y-radius of the rounded corners</param>
        <param name="dir">The direction to wind the rectangle's contour.</param>
        <summary>Adds a closed rectangle with rounded corners to the current path.</summary>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="AddRoundRect">
      <MemberSignature Language="C#" Value="public void AddRoundRect (SkiaSharp.SKRoundRect rect, SkiaSharp.SKPathDirection direction = SkiaSharp.SKPathDirection.Clockwise);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddRoundRect(class SkiaSharp.SKRoundRect rect, valuetype SkiaSharp.SKPathDirection direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.SKPath.AddRoundRect(SkiaSharp.SKRoundRect,SkiaSharp.SKPathDirection)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="SkiaSharp.SKRoundRect" />
        <Parameter Name="direction" Type="SkiaSharp.SKPathDirection" />
      </Parameters>
      <Docs>
        <param name="rect">The rounded rectangle.</param>
        <param name="direction">The direction to wind the rectangle's contour.</param>
        <summary>Adds a closed rectangle with rounded corners to the current path.</summary>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="AddRoundRect">
      <MemberSignature Language="C#" Value="public void AddRoundRect (SkiaSharp.SKRoundRect rect, SkiaSharp.SKPathDirection direction, uint startIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddRoundRect(class SkiaSharp.SKRoundRect rect, valuetype SkiaSharp.SKPathDirection direction, unsigned int32 startIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.SKPath.AddRoundRect(SkiaSharp.SKRoundRect,SkiaSharp.SKPathDirection,System.UInt32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="SkiaSharp.SKRoundRect" />
        <Parameter Name="direction" Type="SkiaSharp.SKPathDirection" />
        <Parameter Name="startIndex" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="rect">The rounded rectangle.</param>
        <param name="direction">The direction to wind the rectangle's contour.</param>
        <param name="startIndex">Initial point of the contour (initial <see cref="M:SkiaSharp.SKPath.MoveTo" />), expressed as an index of the radii minor/major points, ordered clock-wise. Must be in the range of 0..7.</param>
        <summary>Adds a closed rectangle with rounded corners to the current path.</summary>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="AddRoundRect">
      <MemberSignature Language="C#" Value="public void AddRoundRect (SkiaSharp.SKRect rect, float rx, float ry, SkiaSharp.SKPathDirection dir = SkiaSharp.SKPathDirection.Clockwise);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddRoundRect(valuetype SkiaSharp.SKRect rect, float32 rx, float32 ry, valuetype SkiaSharp.SKPathDirection dir) cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.SKPath.AddRoundRect(SkiaSharp.SKRect,System.Single,System.Single,SkiaSharp.SKPathDirection)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="SkiaSharp.SKRect" />
        <Parameter Name="rx" Type="System.Single" />
        <Parameter Name="ry" Type="System.Single" />
        <Parameter Name="dir" Type="SkiaSharp.SKPathDirection" />
      </Parameters>
      <Docs>
        <param name="rect">The bounds of a the rounded rectangle.</param>
        <param name="rx">The x-radius of the rounded corners.</param>
        <param name="ry">The y-radius of the rounded corners</param>
        <param name="dir">The direction to wind the rectangle's contour.</param>
        <summary>Adds a closed rectangle with rounded corners to the current path.</summary>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="ArcTo">
      <MemberSignature Language="C#" Value="public void ArcTo (SkiaSharp.SKPoint point1, SkiaSharp.SKPoint point2, float radius);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ArcTo(valuetype SkiaSharp.SKPoint point1, valuetype SkiaSharp.SKPoint point2, float32 radius) cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.SKPath.ArcTo(SkiaSharp.SKPoint,SkiaSharp.SKPoint,System.Single)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.57.0.0</AssemblyVersion>
        <AssemblyVersion>1.58.0.0</AssemblyVersion>
        <AssemblyVersion>1.59.0.0</AssemblyVersion>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point1" Type="SkiaSharp.SKPoint" />
        <Parameter Name="point2" Type="SkiaSharp.SKPoint" />
        <Parameter Name="radius" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="point1">The corner coordinates.</param>
        <param name="point2">The destination coordinates.</param>
        <param name="radius">The corner radius.</param>
        <summary>Appends a line and arc to the current path.</summary>
        <remarks>This is the same as the PostScript call "arct".</remarks>
      </Docs>
    </Member>
    <Member MemberName="ArcTo">
      <MemberSignature Language="C#" Value="public void ArcTo (SkiaSharp.SKRect oval, float startAngle, float sweepAngle, bool forceMoveTo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ArcTo(valuetype SkiaSharp.SKRect oval, float32 startAngle, float32 sweepAngle, bool forceMoveTo) cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.SKPath.ArcTo(SkiaSharp.SKRect,System.Single,System.Single,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.57.0.0</AssemblyVersion>
        <AssemblyVersion>1.58.0.0</AssemblyVersion>
        <AssemblyVersion>1.59.0.0</AssemblyVersion>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oval" Type="SkiaSharp.SKRect" />
        <Parameter Name="startAngle" Type="System.Single" />
        <Parameter Name="sweepAngle" Type="System.Single" />
        <Parameter Name="forceMoveTo" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="oval">The bounding oval defining the shape and size of the arc.</param>
        <param name="startAngle">The starting angle (in degrees) where the arc begins.</param>
        <param name="sweepAngle">The sweep angle (in degrees) measured clockwise.</param>
        <param name="forceMoveTo">Whether to always begin a new contour with the arc.</param>
        <summary>Appends the specified arc to the path.</summary>
        <remarks>If the start of the arc is different from the path’s current last point, then an automatic <see cref="M:SkiaSharp.SKPath.LineTo" /> is added to connect the current contour to the start of the arc. However, if the path is empty, then we call <see cref="M:SkiaSharp.SKPath.MoveTo" /> with the first point of the arc.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ArcTo">
      <MemberSignature Language="C#" Value="public void ArcTo (SkiaSharp.SKPoint r, float xAxisRotate, SkiaSharp.SKPathArcSize largeArc, SkiaSharp.SKPathDirection sweep, SkiaSharp.SKPoint xy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ArcTo(valuetype SkiaSharp.SKPoint r, float32 xAxisRotate, valuetype SkiaSharp.SKPathArcSize largeArc, valuetype SkiaSharp.SKPathDirection sweep, valuetype SkiaSharp.SKPoint xy) cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.SKPath.ArcTo(SkiaSharp.SKPoint,System.Single,SkiaSharp.SKPathArcSize,SkiaSharp.SKPathDirection,SkiaSharp.SKPoint)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.57.0.0</AssemblyVersion>
        <AssemblyVersion>1.58.0.0</AssemblyVersion>
        <AssemblyVersion>1.59.0.0</AssemblyVersion>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="r" Type="SkiaSharp.SKPoint" />
        <Parameter Name="xAxisRotate" Type="System.Single" />
        <Parameter Name="largeArc" Type="SkiaSharp.SKPathArcSize" />
        <Parameter Name="sweep" Type="SkiaSharp.SKPathDirection" />
        <Parameter Name="xy" Type="SkiaSharp.SKPoint" />
      </Parameters>
      <Docs>
        <param name="r">The radius.</param>
        <param name="xAxisRotate">The angle in degrees relative to the x-axis.</param>
        <param name="largeArc">Determines whether the smallest or largest arc possible is drawn.</param>
        <param name="sweep">Determines if the arc should be swept in an anti-clockwise or clockwise direction.</param>
        <param name="xy">The destination coordinate.</param>
        <summary>Appends an elliptical arc from the current point in the format used by SVG.</summary>
        <remarks>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ArcTo">
      <MemberSignature Language="C#" Value="public void ArcTo (float x1, float y1, float x2, float y2, float radius);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ArcTo(float32 x1, float32 y1, float32 x2, float32 y2, float32 radius) cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.SKPath.ArcTo(System.Single,System.Single,System.Single,System.Single,System.Single)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.57.0.0</AssemblyVersion>
        <AssemblyVersion>1.58.0.0</AssemblyVersion>
        <AssemblyVersion>1.59.0.0</AssemblyVersion>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x1" Type="System.Single" />
        <Parameter Name="y1" Type="System.Single" />
        <Parameter Name="x2" Type="System.Single" />
        <Parameter Name="y2" Type="System.Single" />
        <Parameter Name="radius" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="x1">The corner x-coordinate.</param>
        <param name="y1">The corner y-coordinate.</param>
        <param name="x2">The destination x-coordinate.</param>
        <param name="y2">The destination y-coordinate.</param>
        <param name="radius">The corner radius.</param>
        <summary>Appends a line and arc to the current path.</summary>
        <remarks>This is the same as the PostScript call "arct".</remarks>
      </Docs>
    </Member>
    <Member MemberName="ArcTo">
      <MemberSignature Language="C#" Value="public void ArcTo (float rx, float ry, float xAxisRotate, SkiaSharp.SKPathArcSize largeArc, SkiaSharp.SKPathDirection sweep, float x, float y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ArcTo(float32 rx, float32 ry, float32 xAxisRotate, valuetype SkiaSharp.SKPathArcSize largeArc, valuetype SkiaSharp.SKPathDirection sweep, float32 x, float32 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.SKPath.ArcTo(System.Single,System.Single,System.Single,SkiaSharp.SKPathArcSize,SkiaSharp.SKPathDirection,System.Single,System.Single)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.57.0.0</AssemblyVersion>
        <AssemblyVersion>1.58.0.0</AssemblyVersion>
        <AssemblyVersion>1.59.0.0</AssemblyVersion>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rx" Type="System.Single" />
        <Parameter Name="ry" Type="System.Single" />
        <Parameter Name="xAxisRotate" Type="System.Single" />
        <Parameter Name="largeArc" Type="SkiaSharp.SKPathArcSize" />
        <Parameter Name="sweep" Type="SkiaSharp.SKPathDirection" />
        <Parameter Name="x" Type="System.Single" />
        <Parameter Name="y" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="rx">The radius in the x-direction.</param>
        <param name="ry">The radius in the y-direction.</param>
        <param name="xAxisRotate">The angle in degrees relative to the x-axis.</param>
        <param name="largeArc">Determines whether the smallest or largest arc possible is drawn.</param>
        <param name="sweep">Determines if the arc should be swept in an anti-clockwise or clockwise direction.</param>
        <param name="x">The destination x-coordinate.</param>
        <param name="y">The destination y-coordinate.</param>
        <summary>Appends an elliptical arc from the current point in the format used by SVG.</summary>
        <remarks>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Bounds">
      <MemberSignature Language="C#" Value="public SkiaSharp.SKRect Bounds { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype SkiaSharp.SKRect Bounds" />
      <MemberSignature Language="DocId" Value="P:SkiaSharp.SKPath.Bounds" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.57.0.0</AssemblyVersion>
        <AssemblyVersion>1.58.0.0</AssemblyVersion>
        <AssemblyVersion>1.59.0.0</AssemblyVersion>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>SkiaSharp.SKRect</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the bounds of the path's points. If the path contains zero points/verbs, this will return the empty rectangle.</summary>
        <value>Gets the bounds of the path's points.</value>
        <remarks>This bounds may be larger than the actual shape, since curves do not extend as far as their control points. Additionally this bound encompases all points, even isolated MoveTo either preceeding or following the last non-degenerate contour.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.SKPath.Close" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.57.0.0</AssemblyVersion>
        <AssemblyVersion>1.58.0.0</AssemblyVersion>
        <AssemblyVersion>1.59.0.0</AssemblyVersion>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Closes the current contour.</summary>
        <remarks>If the current point is not equal to the first point of the contour, a line segment is automatically added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ComputeTightBounds">
      <MemberSignature Language="C#" Value="public SkiaSharp.SKRect ComputeTightBounds ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype SkiaSharp.SKRect ComputeTightBounds() cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.SKPath.ComputeTightBounds" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.58.0.0</AssemblyVersion>
        <AssemblyVersion>1.59.0.0</AssemblyVersion>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>SkiaSharp.SKRect</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Computes a bounds that is conservatively "snug" around the path.</summary>
        <returns>Returns the bounds.</returns>
        <remarks>
          <para>This assumes that the path will be filled.</para>
          <para></para>
          <para>It does not attempt to collapse away contours that are logically empty (e.g. MoveTo(x, y) + LineTo(x, y)) but will include them in the calculation.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConicTo">
      <MemberSignature Language="C#" Value="public void ConicTo (SkiaSharp.SKPoint point0, SkiaSharp.SKPoint point1, float w);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ConicTo(valuetype SkiaSharp.SKPoint point0, valuetype SkiaSharp.SKPoint point1, float32 w) cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.SKPath.ConicTo(SkiaSharp.SKPoint,SkiaSharp.SKPoint,System.Single)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.57.0.0</AssemblyVersion>
        <AssemblyVersion>1.58.0.0</AssemblyVersion>
        <AssemblyVersion>1.59.0.0</AssemblyVersion>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point0" Type="SkiaSharp.SKPoint" />
        <Parameter Name="point1" Type="SkiaSharp.SKPoint" />
        <Parameter Name="w" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="point0">The coordinates of the control point of the conic curve.</param>
        <param name="point1">The coordinates of the end point of the conic curve.</param>
        <param name="w">The weight of the conic curve.</param>
        <summary>Add a conic path from the last point.</summary>
        <remarks>If no <see cref="M:SkiaSharp.SKPath.MoveTo" /> call has been made for this contour, the first point is automatically set to (0, 0).</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConicTo">
      <MemberSignature Language="C#" Value="public void ConicTo (float x0, float y0, float x1, float y1, float w);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ConicTo(float32 x0, float32 y0, float32 x1, float32 y1, float32 w) cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.SKPath.ConicTo(System.Single,System.Single,System.Single,System.Single,System.Single)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.57.0.0</AssemblyVersion>
        <AssemblyVersion>1.58.0.0</AssemblyVersion>
        <AssemblyVersion>1.59.0.0</AssemblyVersion>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x0" Type="System.Single" />
        <Parameter Name="y0" Type="System.Single" />
        <Parameter Name="x1" Type="System.Single" />
        <Parameter Name="y1" Type="System.Single" />
        <Parameter Name="w" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="x0">The x-coordinate of the control point of the conic curve.</param>
        <param name="y0">The y-coordinate of the control point of the conic curve.</param>
        <param name="x1">The x-coordinate of the end point of the conic curve.</param>
        <param name="y1">The y-coordinate of the end point of the conic curve.</param>
        <param name="w">The weight of the conic curve.</param>
        <summary>Add a conic path from the last point.</summary>
        <remarks>If no <see cref="M:SkiaSharp.SKPath.MoveTo" /> call has been made for this contour, the first point is automatically set to (0, 0).</remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (float x, float y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(float32 x, float32 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.SKPath.Contains(System.Single,System.Single)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.57.0.0</AssemblyVersion>
        <AssemblyVersion>1.58.0.0</AssemblyVersion>
        <AssemblyVersion>1.59.0.0</AssemblyVersion>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Single" />
        <Parameter Name="y" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="x">The x-coordinate to check.</param>
        <param name="y">The y-coordinate to check.</param>
        <summary>Returns true if the point (x, y) is contained by the path, taking into account the <see cref="P:SkiaSharp.SKPath.FillType" />.</summary>
        <returns>Returns true if the point (x, y) is contained by the path.</returns>
        <remarks>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertConicToQuads">
      <MemberSignature Language="C#" Value="public static SkiaSharp.SKPoint[] ConvertConicToQuads (SkiaSharp.SKPoint p0, SkiaSharp.SKPoint p1, SkiaSharp.SKPoint p2, float w, int pow2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype SkiaSharp.SKPoint[] ConvertConicToQuads(valuetype SkiaSharp.SKPoint p0, valuetype SkiaSharp.SKPoint p1, valuetype SkiaSharp.SKPoint p2, float32 w, int32 pow2) cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.SKPath.ConvertConicToQuads(SkiaSharp.SKPoint,SkiaSharp.SKPoint,SkiaSharp.SKPoint,System.Single,System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.57.0.0</AssemblyVersion>
        <AssemblyVersion>1.58.0.0</AssemblyVersion>
        <AssemblyVersion>1.59.0.0</AssemblyVersion>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>SkiaSharp.SKPoint[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="p0" Type="SkiaSharp.SKPoint" />
        <Parameter Name="p1" Type="SkiaSharp.SKPoint" />
        <Parameter Name="p2" Type="SkiaSharp.SKPoint" />
        <Parameter Name="w" Type="System.Single" />
        <Parameter Name="pow2" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="p0">The coordinates of the starting point of the conic curve.</param>
        <param name="p1">The coordinates of the control point of the conic curve.</param>
        <param name="p2">The coordinates of the end point of the conic curve.</param>
        <param name="w">The weight of the conic curve.</param>
        <param name="pow2">The tolerance to use (1 &lt;&lt; pow2).</param>
        <summary>Chop a conic into a number of quads.</summary>
        <returns>Returns the collection of points that make up the conic curve.</returns>
        <remarks>The amount of storage needed for pts is: 1 + 2 * (1 &lt;&lt; pow2)</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertConicToQuads">
      <MemberSignature Language="C#" Value="public static int ConvertConicToQuads (SkiaSharp.SKPoint p0, SkiaSharp.SKPoint p1, SkiaSharp.SKPoint p2, float w, SkiaSharp.SKPoint[] pts, int pow2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ConvertConicToQuads(valuetype SkiaSharp.SKPoint p0, valuetype SkiaSharp.SKPoint p1, valuetype SkiaSharp.SKPoint p2, float32 w, valuetype SkiaSharp.SKPoint[] pts, int32 pow2) cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.SKPath.ConvertConicToQuads(SkiaSharp.SKPoint,SkiaSharp.SKPoint,SkiaSharp.SKPoint,System.Single,SkiaSharp.SKPoint[],System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.57.0.0</AssemblyVersion>
        <AssemblyVersion>1.58.0.0</AssemblyVersion>
        <AssemblyVersion>1.59.0.0</AssemblyVersion>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="p0" Type="SkiaSharp.SKPoint" />
        <Parameter Name="p1" Type="SkiaSharp.SKPoint" />
        <Parameter Name="p2" Type="SkiaSharp.SKPoint" />
        <Parameter Name="w" Type="System.Single" />
        <Parameter Name="pts" Type="SkiaSharp.SKPoint[]" />
        <Parameter Name="pow2" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="p0">The coordinates of the starting point of the conic curve.</param>
        <param name="p1">The coordinates of the control point of the conic curve.</param>
        <param name="p2">The coordinates of the end point of the conic curve.</param>
        <param name="w">The weight of the conic curve.</param>
        <param name="pts">The collection to store the points.</param>
        <param name="pow2">The tolerance to use (1 &lt;&lt; pow2).</param>
        <summary>Chop a conic into a number of quads.</summary>
        <returns>Returns the number of quads.</returns>
        <remarks>The amount of storage needed for pts is: 1 + 2 * (1 &lt;&lt; pow2)</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertConicToQuads">
      <MemberSignature Language="C#" Value="public static int ConvertConicToQuads (SkiaSharp.SKPoint p0, SkiaSharp.SKPoint p1, SkiaSharp.SKPoint p2, float w, out SkiaSharp.SKPoint[] pts, int pow2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ConvertConicToQuads(valuetype SkiaSharp.SKPoint p0, valuetype SkiaSharp.SKPoint p1, valuetype SkiaSharp.SKPoint p2, float32 w, [out] valuetype SkiaSharp.SKPoint[]&amp; pts, int32 pow2) cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.SKPath.ConvertConicToQuads(SkiaSharp.SKPoint,SkiaSharp.SKPoint,SkiaSharp.SKPoint,System.Single,SkiaSharp.SKPoint[]@,System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.57.0.0</AssemblyVersion>
        <AssemblyVersion>1.58.0.0</AssemblyVersion>
        <AssemblyVersion>1.59.0.0</AssemblyVersion>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="p0" Type="SkiaSharp.SKPoint" />
        <Parameter Name="p1" Type="SkiaSharp.SKPoint" />
        <Parameter Name="p2" Type="SkiaSharp.SKPoint" />
        <Parameter Name="w" Type="System.Single" />
        <Parameter Name="pts" Type="SkiaSharp.SKPoint[]&amp;" RefType="out" />
        <Parameter Name="pow2" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="p0">The coordinates of the starting point of the conic curve.</param>
        <param name="p1">The coordinates of the control point of the conic curve.</param>
        <param name="p2">The coordinates of the end point of the conic curve.</param>
        <param name="w">The weight of the conic curve.</param>
        <param name="pts">The collection of points.</param>
        <param name="pow2">The tolerance to use (1 &lt;&lt; pow2).</param>
        <summary>Chop a conic into a number of quads.</summary>
        <returns>Returns the number of quads.</returns>
        <remarks>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Convexity">
      <MemberSignature Language="C#" Value="public SkiaSharp.SKPathConvexity Convexity { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype SkiaSharp.SKPathConvexity Convexity" />
      <MemberSignature Language="DocId" Value="P:SkiaSharp.SKPath.Convexity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.57.0.0</AssemblyVersion>
        <AssemblyVersion>1.58.0.0</AssemblyVersion>
        <AssemblyVersion>1.59.0.0</AssemblyVersion>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>SkiaSharp.SKPathConvexity</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the path's convexity.</summary>
        <value>
          <para></para>
        </value>
        <remarks>If it is currently unknown, then this function will attempt to compute the convexity (and cache the result).</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateIterator">
      <MemberSignature Language="C#" Value="public SkiaSharp.SKPath.Iterator CreateIterator (bool forceClose);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class SkiaSharp.SKPath/Iterator CreateIterator(bool forceClose) cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.SKPath.CreateIterator(System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.57.0.0</AssemblyVersion>
        <AssemblyVersion>1.58.0.0</AssemblyVersion>
        <AssemblyVersion>1.59.0.0</AssemblyVersion>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>SkiaSharp.SKPath+Iterator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="forceClose" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="forceClose">When this is true, each contour (as defined by a new starting move command) will be completed with a close verb regardless of the contour's contents.</param>
        <summary>Creates an iterator object to scan the all of the segments (lines, quadratics, cubics) of each contours in a path.</summary>
        <returns>Returns an object that can be used to iterate over the various elements of the path.</returns>
        <remarks>This iterator is able to clean up the path as the values are returned. If you do not desire to get verbs that have been cleaned up, use the <see cref="M:SkiaSharp.SKPath.CreateRawIterator" /> method instead.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateRawIterator">
      <MemberSignature Language="C#" Value="public SkiaSharp.SKPath.RawIterator CreateRawIterator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class SkiaSharp.SKPath/RawIterator CreateRawIterator() cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.SKPath.CreateRawIterator" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.57.0.0</AssemblyVersion>
        <AssemblyVersion>1.58.0.0</AssemblyVersion>
        <AssemblyVersion>1.59.0.0</AssemblyVersion>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>SkiaSharp.SKPath+RawIterator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Creates a raw iterator object to scan the all of the segments (lines, quadratics, cubics) of each contours in a path.</summary>
        <returns>Returns an object that can be used to iterate over the various elements of the path.</returns>
        <remarks>Unlike the <see cref="M:SkiaSharp.SKPath.CreateIterator" /> method, this iterator does not clean up or normalize the values in the path. It returns the raw elements contained in the path.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CubicTo">
      <MemberSignature Language="C#" Value="public void CubicTo (SkiaSharp.SKPoint point0, SkiaSharp.SKPoint point1, SkiaSharp.SKPoint point2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CubicTo(valuetype SkiaSharp.SKPoint point0, valuetype SkiaSharp.SKPoint point1, valuetype SkiaSharp.SKPoint point2) cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.SKPath.CubicTo(SkiaSharp.SKPoint,SkiaSharp.SKPoint,SkiaSharp.SKPoint)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.57.0.0</AssemblyVersion>
        <AssemblyVersion>1.58.0.0</AssemblyVersion>
        <AssemblyVersion>1.59.0.0</AssemblyVersion>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point0" Type="SkiaSharp.SKPoint" />
        <Parameter Name="point1" Type="SkiaSharp.SKPoint" />
        <Parameter Name="point2" Type="SkiaSharp.SKPoint" />
      </Parameters>
      <Docs>
        <param name="point0">The coordinates of the 1st control point on a cubic curve.</param>
        <param name="point1">The coordinates of the 2nd control point on a cubic curve.</param>
        <param name="point2">The coordinates of the end point on a cubic curve.</param>
        <summary>Adds a cubic bezier from the last point.</summary>
        <remarks>If no <see cref="M:SkiaSharp.SKPath.MoveTo" /> call has been made for this contour, the first point is automatically set to (0, 0).</remarks>
      </Docs>
    </Member>
    <Member MemberName="CubicTo">
      <MemberSignature Language="C#" Value="public void CubicTo (float x0, float y0, float x1, float y1, float x2, float y2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CubicTo(float32 x0, float32 y0, float32 x1, float32 y1, float32 x2, float32 y2) cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.SKPath.CubicTo(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.57.0.0</AssemblyVersion>
        <AssemblyVersion>1.58.0.0</AssemblyVersion>
        <AssemblyVersion>1.59.0.0</AssemblyVersion>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x0" Type="System.Single" />
        <Parameter Name="y0" Type="System.Single" />
        <Parameter Name="x1" Type="System.Single" />
        <Parameter Name="y1" Type="System.Single" />
        <Parameter Name="x2" Type="System.Single" />
        <Parameter Name="y2" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="x0">The x-coordinate of the 1st control point on a cubic curve.</param>
        <param name="y0">The y-coordinate of the 1st control point on a cubic curve.</param>
        <param name="x1">The x-coordinate of the 2nd control point on a cubic curve.</param>
        <param name="y1">The y-coordinate of the 2nd control point on a cubic curve.</param>
        <param name="x2">The x-coordinate of the end point on a cubic curve.</param>
        <param name="y2">The y-coordinate of the end point on a cubic curve.</param>
        <summary>Adds a cubic bezier from the last point.</summary>
        <remarks>If no <see cref="M:SkiaSharp.SKPath.MoveTo" /> call has been made for this contour, the first point is automatically set to (0, 0).</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.SKPath.Dispose(System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.57.0.0</AssemblyVersion>
        <AssemblyVersion>1.58.0.0</AssemblyVersion>
        <AssemblyVersion>1.59.0.0</AssemblyVersion>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FillType">
      <MemberSignature Language="C#" Value="public SkiaSharp.SKPathFillType FillType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype SkiaSharp.SKPathFillType FillType" />
      <MemberSignature Language="DocId" Value="P:SkiaSharp.SKPath.FillType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.57.0.0</AssemblyVersion>
        <AssemblyVersion>1.58.0.0</AssemblyVersion>
        <AssemblyVersion>1.59.0.0</AssemblyVersion>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>SkiaSharp.SKPathFillType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the path's fill type.</summary>
        <value>
          <para></para>
        </value>
        <remarks>This is used to define how "inside" is computed. The default value is <see cref="F:SkiaSharp.SKPathFillType.Winding" />.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBounds">
      <MemberSignature Language="C#" Value="public bool GetBounds (out SkiaSharp.SKRect rect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool GetBounds([out] valuetype SkiaSharp.SKRect&amp; rect) cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.SKPath.GetBounds(SkiaSharp.SKRect@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.57.0.0</AssemblyVersion>
        <AssemblyVersion>1.58.0.0</AssemblyVersion>
        <AssemblyVersion>1.59.0.0</AssemblyVersion>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="SkiaSharp.SKRect&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="rect">The bounds, if the path contains any points.</param>
        <summary>Returns the bounds of the path's points.</summary>
        <returns>Returns true if the path is not empty, otherwise false.</returns>
        <remarks>This bounds may be larger than the actual shape, since curves do not extend as far as their control points. Additionally this bound encompases all points, even isolated MoveTo either preceeding or following the last non-degenerate contour.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPoint">
      <MemberSignature Language="C#" Value="public SkiaSharp.SKPoint GetPoint (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype SkiaSharp.SKPoint GetPoint(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.SKPath.GetPoint(System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.57.0.0</AssemblyVersion>
        <AssemblyVersion>1.58.0.0</AssemblyVersion>
        <AssemblyVersion>1.59.0.0</AssemblyVersion>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>SkiaSharp.SKPoint</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">The index of the point to return.</param>
        <summary>Returns the point at the specified index.</summary>
        <returns>The point at the specified index.</returns>
        <remarks>If the index is out of range (i.e. is not 0 &lt;= index &lt; <see cref="P:SkiaSharp.SKPath.PointCount" />), then the returned coordinates will be (0, 0).</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPoints">
      <MemberSignature Language="C#" Value="public SkiaSharp.SKPoint[] GetPoints (int max);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype SkiaSharp.SKPoint[] GetPoints(int32 max) cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.SKPath.GetPoints(System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.57.0.0</AssemblyVersion>
        <AssemblyVersion>1.58.0.0</AssemblyVersion>
        <AssemblyVersion>1.59.0.0</AssemblyVersion>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>SkiaSharp.SKPoint[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="max" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="max">The maximum number of points to copy into points.</param>
        <summary>Returns a subset of points in the path. Up to max points are copied.</summary>
        <returns>Returns the requested set of points.</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="GetPoints">
      <MemberSignature Language="C#" Value="public int GetPoints (SkiaSharp.SKPoint[] points, int max);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetPoints(valuetype SkiaSharp.SKPoint[] points, int32 max) cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.SKPath.GetPoints(SkiaSharp.SKPoint[],System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.57.0.0</AssemblyVersion>
        <AssemblyVersion>1.58.0.0</AssemblyVersion>
        <AssemblyVersion>1.59.0.0</AssemblyVersion>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="points" Type="SkiaSharp.SKPoint[]" />
        <Parameter Name="max" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="points">The array to hold the points.</param>
        <param name="max">The maximum number of points to copy into points.</param>
        <summary>Returns a subset of points in the path. Up to max points are copied.</summary>
        <returns>Returns the actual number of points in the path</returns>
        <remarks>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTightBounds">
      <MemberSignature Language="C#" Value="public bool GetTightBounds (out SkiaSharp.SKRect result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool GetTightBounds([out] valuetype SkiaSharp.SKRect&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.SKPath.GetTightBounds(SkiaSharp.SKRect@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.57.0.0</AssemblyVersion>
        <AssemblyVersion>1.58.0.0</AssemblyVersion>
        <AssemblyVersion>1.59.0.0</AssemblyVersion>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="SkiaSharp.SKRect&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="result">The tight bounds of the path.</param>
        <summary>Gets the “tight” bounds of the path. Unlike <see cref="M:SkiaSharp.SKPath.GetBounds" />, the control points of curves are excluded.</summary>
        <returns>Returns true if the bounds could be computed, otherwise false.</returns>
        <remarks>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsConcave">
      <MemberSignature Language="C#" Value="public bool IsConcave { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsConcave" />
      <MemberSignature Language="DocId" Value="P:SkiaSharp.SKPath.IsConcave" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.57.0.0</AssemblyVersion>
        <AssemblyVersion>1.58.0.0</AssemblyVersion>
        <AssemblyVersion>1.59.0.0</AssemblyVersion>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value indicating whether the path is concave.</summary>
        <value />
        <remarks>If it is currently unknown, then this function will attempt to compute the convexity (and cache the result).</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsConvex">
      <MemberSignature Language="C#" Value="public bool IsConvex { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsConvex" />
      <MemberSignature Language="DocId" Value="P:SkiaSharp.SKPath.IsConvex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.57.0.0</AssemblyVersion>
        <AssemblyVersion>1.58.0.0</AssemblyVersion>
        <AssemblyVersion>1.59.0.0</AssemblyVersion>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value indicating whether the path is convex.</summary>
        <value>
          <para></para>
        </value>
        <remarks>If it is currently unknown, then this function will attempt to compute the convexity (and cache the result).</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEmpty">
      <MemberSignature Language="C#" Value="public bool IsEmpty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEmpty" />
      <MemberSignature Language="DocId" Value="P:SkiaSharp.SKPath.IsEmpty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.57.0.0</AssemblyVersion>
        <AssemblyVersion>1.58.0.0</AssemblyVersion>
        <AssemblyVersion>1.59.0.0</AssemblyVersion>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value indicating whether or not the path is empty (contains no lines or curves).</summary>
        <value>
          <para></para>
        </value>
        <remarks>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public SkiaSharp.SKPoint this[int index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype SkiaSharp.SKPoint Item(int32)" />
      <MemberSignature Language="DocId" Value="P:SkiaSharp.SKPath.Item(System.Int32)" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.57.0.0</AssemblyVersion>
        <AssemblyVersion>1.58.0.0</AssemblyVersion>
        <AssemblyVersion>1.59.0.0</AssemblyVersion>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>SkiaSharp.SKPoint</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">The index of the point to get.</param>
        <summary>Gets the point at the specified index.</summary>
        <value>The point at the specified index.</value>
        <remarks>If the index is out of range (i.e. is not 0 &lt;= index &lt; <see cref="P:SkiaSharp.SKPath.PointCount" />), then the returned coordinates will be (0, 0).</remarks>
      </Docs>
    </Member>
    <Member MemberName="LastPoint">
      <MemberSignature Language="C#" Value="public SkiaSharp.SKPoint LastPoint { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype SkiaSharp.SKPoint LastPoint" />
      <MemberSignature Language="DocId" Value="P:SkiaSharp.SKPath.LastPoint" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.57.0.0</AssemblyVersion>
        <AssemblyVersion>1.58.0.0</AssemblyVersion>
        <AssemblyVersion>1.59.0.0</AssemblyVersion>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>SkiaSharp.SKPoint</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return the last point on the path. If no points have been added, (0, 0) is returned.</summary>
        <value>
          <para></para>
        </value>
        <remarks>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LineTo">
      <MemberSignature Language="C#" Value="public void LineTo (SkiaSharp.SKPoint point);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void LineTo(valuetype SkiaSharp.SKPoint point) cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.SKPath.LineTo(SkiaSharp.SKPoint)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.57.0.0</AssemblyVersion>
        <AssemblyVersion>1.58.0.0</AssemblyVersion>
        <AssemblyVersion>1.59.0.0</AssemblyVersion>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="SkiaSharp.SKPoint" />
      </Parameters>
      <Docs>
        <param name="point">The coordinates of the end of a line.</param>
        <summary>Add a line from the last point to the specified point (x, y).</summary>
        <remarks>If no <see cref="M:SkiaSharp.SKPath.MoveTo" /> call has been made for this contour, the first point is automatically set to (0, 0).</remarks>
      </Docs>
    </Member>
    <Member MemberName="LineTo">
      <MemberSignature Language="C#" Value="public void LineTo (float x, float y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void LineTo(float32 x, float32 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.SKPath.LineTo(System.Single,System.Single)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.57.0.0</AssemblyVersion>
        <AssemblyVersion>1.58.0.0</AssemblyVersion>
        <AssemblyVersion>1.59.0.0</AssemblyVersion>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Single" />
        <Parameter Name="y" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="x">The x-coordinate of the end of a line.</param>
        <param name="y">The y-coordinate of the end of a line.</param>
        <summary>Add a line from the last point to the specified point (x, y).</summary>
        <remarks>If no <see cref="M:SkiaSharp.SKPath.MoveTo" /> call has been made for this contour, the first point is automatically set to (0, 0).</remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveTo">
      <MemberSignature Language="C#" Value="public void MoveTo (SkiaSharp.SKPoint point);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void MoveTo(valuetype SkiaSharp.SKPoint point) cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.SKPath.MoveTo(SkiaSharp.SKPoint)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.57.0.0</AssemblyVersion>
        <AssemblyVersion>1.58.0.0</AssemblyVersion>
        <AssemblyVersion>1.59.0.0</AssemblyVersion>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="SkiaSharp.SKPoint" />
      </Parameters>
      <Docs>
        <param name="point">The coordinates of the start of a new contour.</param>
        <summary>Set the beginning of the next contour to the point.</summary>
        <remarks>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveTo">
      <MemberSignature Language="C#" Value="public void MoveTo (float x, float y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void MoveTo(float32 x, float32 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.SKPath.MoveTo(System.Single,System.Single)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.57.0.0</AssemblyVersion>
        <AssemblyVersion>1.58.0.0</AssemblyVersion>
        <AssemblyVersion>1.59.0.0</AssemblyVersion>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Single" />
        <Parameter Name="y" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="x">The x-coordinate of the start of a new contour.</param>
        <param name="y">The y-coordinate of the start of a new contour.</param>
        <summary>Set the beginning of the next contour to the point.</summary>
        <remarks>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Offset">
      <MemberSignature Language="C#" Value="public void Offset (SkiaSharp.SKPoint offset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Offset(valuetype SkiaSharp.SKPoint offset) cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.SKPath.Offset(SkiaSharp.SKPoint)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.57.0.0</AssemblyVersion>
        <AssemblyVersion>1.58.0.0</AssemblyVersion>
        <AssemblyVersion>1.59.0.0</AssemblyVersion>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="SkiaSharp.SKPoint" />
      </Parameters>
      <Docs>
        <param name="offset">The amount to offset the entire path.</param>
        <summary>Set the beginning of the next contour to the point.</summary>
        <remarks>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Offset">
      <MemberSignature Language="C#" Value="public void Offset (float dx, float dy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Offset(float32 dx, float32 dy) cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.SKPath.Offset(System.Single,System.Single)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.57.0.0</AssemblyVersion>
        <AssemblyVersion>1.58.0.0</AssemblyVersion>
        <AssemblyVersion>1.59.0.0</AssemblyVersion>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dx" Type="System.Single" />
        <Parameter Name="dy" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="dx">The amount in the x-direction to offset the entire path.</param>
        <param name="dy">The amount in the y-direction to offset the entire path.</param>
        <summary>Offset the path by the specifid distance.</summary>
        <remarks>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Op">
      <MemberSignature Language="C#" Value="public SkiaSharp.SKPath Op (SkiaSharp.SKPath other, SkiaSharp.SKPathOp op);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class SkiaSharp.SKPath Op(class SkiaSharp.SKPath other, valuetype SkiaSharp.SKPathOp op) cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.SKPath.Op(SkiaSharp.SKPath,SkiaSharp.SKPathOp)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.57.0.0</AssemblyVersion>
        <AssemblyVersion>1.58.0.0</AssemblyVersion>
        <AssemblyVersion>1.59.0.0</AssemblyVersion>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>SkiaSharp.SKPath</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="SkiaSharp.SKPath" />
        <Parameter Name="op" Type="SkiaSharp.SKPathOp" />
      </Parameters>
      <Docs>
        <param name="other">The second operand.</param>
        <param name="op">The logical operator.</param>
        <summary>Compute the result of a logical operation on two paths.</summary>
        <returns>Returns the resulting path if the operation was successful, otherwise null.</returns>
        <remarks>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Op">
      <MemberSignature Language="C#" Value="public bool Op (SkiaSharp.SKPath other, SkiaSharp.SKPathOp op, SkiaSharp.SKPath result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Op(class SkiaSharp.SKPath other, valuetype SkiaSharp.SKPathOp op, class SkiaSharp.SKPath result) cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.SKPath.Op(SkiaSharp.SKPath,SkiaSharp.SKPathOp,SkiaSharp.SKPath)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.57.0.0</AssemblyVersion>
        <AssemblyVersion>1.58.0.0</AssemblyVersion>
        <AssemblyVersion>1.59.0.0</AssemblyVersion>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="SkiaSharp.SKPath" />
        <Parameter Name="op" Type="SkiaSharp.SKPathOp" />
        <Parameter Name="result" Type="SkiaSharp.SKPath" />
      </Parameters>
      <Docs>
        <param name="other">The second operand.</param>
        <param name="op">The logical operator.</param>
        <param name="result">The path that will be used to set the result to. The current path will be <see cref="M:SkiaSharp.SKPath.Reset" />.</param>
        <summary>Compute the result of a logical operation on two paths.</summary>
        <returns>Returns true if the operation was successful, otherwise false.</returns>
        <remarks>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ParseSvgPathData">
      <MemberSignature Language="C#" Value="public static SkiaSharp.SKPath ParseSvgPathData (string svgPath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class SkiaSharp.SKPath ParseSvgPathData(string svgPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.SKPath.ParseSvgPathData(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.57.0.0</AssemblyVersion>
        <AssemblyVersion>1.58.0.0</AssemblyVersion>
        <AssemblyVersion>1.59.0.0</AssemblyVersion>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>SkiaSharp.SKPath</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="svgPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="svgPath">The SVG path data.</param>
        <summary>Creates a path based on the SVG path data string.</summary>
        <returns>Returns the new path if successful, otherwise null.</returns>
        <remarks>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PointCount">
      <MemberSignature Language="C#" Value="public int PointCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PointCount" />
      <MemberSignature Language="DocId" Value="P:SkiaSharp.SKPath.PointCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.57.0.0</AssemblyVersion>
        <AssemblyVersion>1.58.0.0</AssemblyVersion>
        <AssemblyVersion>1.59.0.0</AssemblyVersion>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the number of points on the path.</summary>
        <value>
          <para></para>
        </value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="Points">
      <MemberSignature Language="C#" Value="public SkiaSharp.SKPoint[] Points { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype SkiaSharp.SKPoint[] Points" />
      <MemberSignature Language="DocId" Value="P:SkiaSharp.SKPath.Points" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.57.0.0</AssemblyVersion>
        <AssemblyVersion>1.58.0.0</AssemblyVersion>
        <AssemblyVersion>1.59.0.0</AssemblyVersion>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>SkiaSharp.SKPoint[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets all the points in the path.</summary>
        <value>
          <para></para>
        </value>
        <remarks>The number of points will be <see cref="P:SkiaSharp.SKPath.PointCount" />, To only return a subset of the points in the path, use <see cref="M:SkiaSharp.SKPath.GetPoints" />.</remarks>
      </Docs>
    </Member>
    <Member MemberName="QuadTo">
      <MemberSignature Language="C#" Value="public void QuadTo (SkiaSharp.SKPoint point0, SkiaSharp.SKPoint point1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void QuadTo(valuetype SkiaSharp.SKPoint point0, valuetype SkiaSharp.SKPoint point1) cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.SKPath.QuadTo(SkiaSharp.SKPoint,SkiaSharp.SKPoint)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.57.0.0</AssemblyVersion>
        <AssemblyVersion>1.58.0.0</AssemblyVersion>
        <AssemblyVersion>1.59.0.0</AssemblyVersion>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point0" Type="SkiaSharp.SKPoint" />
        <Parameter Name="point1" Type="SkiaSharp.SKPoint" />
      </Parameters>
      <Docs>
        <param name="point0">The coordinates of the control point on a quadratic curve.</param>
        <param name="point1">The coordinates of the end point on a quadratic curve.</param>
        <summary>Add a quadratic bezier from the last point.</summary>
        <remarks>Add a quadratic bezier from the last point, approaching control point (point0), and ending at point1. If no <see cref="M:SkiaSharp.SKPath.MoveTo" /> call has been made for this contour, the first point is automatically set to (0, 0).</remarks>
      </Docs>
    </Member>
    <Member MemberName="QuadTo">
      <MemberSignature Language="C#" Value="public void QuadTo (float x0, float y0, float x1, float y1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void QuadTo(float32 x0, float32 y0, float32 x1, float32 y1) cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.SKPath.QuadTo(System.Single,System.Single,System.Single,System.Single)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.57.0.0</AssemblyVersion>
        <AssemblyVersion>1.58.0.0</AssemblyVersion>
        <AssemblyVersion>1.59.0.0</AssemblyVersion>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x0" Type="System.Single" />
        <Parameter Name="y0" Type="System.Single" />
        <Parameter Name="x1" Type="System.Single" />
        <Parameter Name="y1" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="x0">The x-coordinate of the control point on a quadratic curve.</param>
        <param name="y0">The y-coordinate of the control point on a quadratic curve.</param>
        <param name="x1">The x-coordinate of the end point on a quadratic curve.</param>
        <param name="y1">The y-coordinate of the end point on a quadratic curve.</param>
        <summary>Add a quadratic bezier from the last point.</summary>
        <remarks>Add a quadratic bezier from the last point, approaching control point (x0, y0), and ending at (x1, y1). If no <see cref="M:SkiaSharp.SKPath.MoveTo" /> call has been made for this contour, the first point is automatically set to (0, 0).</remarks>
      </Docs>
    </Member>
    <Member MemberName="RArcTo">
      <MemberSignature Language="C#" Value="public void RArcTo (SkiaSharp.SKPoint r, float xAxisRotate, SkiaSharp.SKPathArcSize largeArc, SkiaSharp.SKPathDirection sweep, SkiaSharp.SKPoint xy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RArcTo(valuetype SkiaSharp.SKPoint r, float32 xAxisRotate, valuetype SkiaSharp.SKPathArcSize largeArc, valuetype SkiaSharp.SKPathDirection sweep, valuetype SkiaSharp.SKPoint xy) cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.SKPath.RArcTo(SkiaSharp.SKPoint,System.Single,SkiaSharp.SKPathArcSize,SkiaSharp.SKPathDirection,SkiaSharp.SKPoint)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.57.0.0</AssemblyVersion>
        <AssemblyVersion>1.58.0.0</AssemblyVersion>
        <AssemblyVersion>1.59.0.0</AssemblyVersion>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="r" Type="SkiaSharp.SKPoint" />
        <Parameter Name="xAxisRotate" Type="System.Single" />
        <Parameter Name="largeArc" Type="SkiaSharp.SKPathArcSize" />
        <Parameter Name="sweep" Type="SkiaSharp.SKPathDirection" />
        <Parameter Name="xy" Type="SkiaSharp.SKPoint" />
      </Parameters>
      <Docs>
        <param name="r">The radius.</param>
        <param name="xAxisRotate">The angle in degrees relative to the x-axis.</param>
        <param name="largeArc">Determines whether the smallest or largest arc possible is drawn.</param>
        <param name="sweep">Determines if the arc should be swept in an anti-clockwise or clockwise direction.</param>
        <param name="xy">The destination coordinates relative to the last point.</param>
        <summary>The same as <see cref="M:SkiaSharp.SKPath.ArcTo" />, but the coordinates are considered relative to the last point on this contour.</summary>
        <remarks>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RArcTo">
      <MemberSignature Language="C#" Value="public void RArcTo (float rx, float ry, float xAxisRotate, SkiaSharp.SKPathArcSize largeArc, SkiaSharp.SKPathDirection sweep, float x, float y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RArcTo(float32 rx, float32 ry, float32 xAxisRotate, valuetype SkiaSharp.SKPathArcSize largeArc, valuetype SkiaSharp.SKPathDirection sweep, float32 x, float32 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.SKPath.RArcTo(System.Single,System.Single,System.Single,SkiaSharp.SKPathArcSize,SkiaSharp.SKPathDirection,System.Single,System.Single)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.57.0.0</AssemblyVersion>
        <AssemblyVersion>1.58.0.0</AssemblyVersion>
        <AssemblyVersion>1.59.0.0</AssemblyVersion>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rx" Type="System.Single" />
        <Parameter Name="ry" Type="System.Single" />
        <Parameter Name="xAxisRotate" Type="System.Single" />
        <Parameter Name="largeArc" Type="SkiaSharp.SKPathArcSize" />
        <Parameter Name="sweep" Type="SkiaSharp.SKPathDirection" />
        <Parameter Name="x" Type="System.Single" />
        <Parameter Name="y" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="rx">The radius in the x-direction.</param>
        <param name="ry">The radius in the y-direction.</param>
        <param name="xAxisRotate">The angle in degrees relative to the x-axis.</param>
        <param name="largeArc">Determines whether the smallest or largest arc possible is drawn.</param>
        <param name="sweep">Determines if the arc should be swept in an anti-clockwise or clockwise direction.</param>
        <param name="x">The destination x-coordinate relative to the last point.</param>
        <param name="y">The destination y-coordinate relative to the last point.</param>
        <summary>The same as <see cref="M:SkiaSharp.SKPath.ArcTo" />, but the coordinates are considered relative to the last point on this contour.</summary>
        <remarks>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RConicTo">
      <MemberSignature Language="C#" Value="public void RConicTo (SkiaSharp.SKPoint point0, SkiaSharp.SKPoint point1, float w);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RConicTo(valuetype SkiaSharp.SKPoint point0, valuetype SkiaSharp.SKPoint point1, float32 w) cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.SKPath.RConicTo(SkiaSharp.SKPoint,SkiaSharp.SKPoint,System.Single)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.57.0.0</AssemblyVersion>
        <AssemblyVersion>1.58.0.0</AssemblyVersion>
        <AssemblyVersion>1.59.0.0</AssemblyVersion>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point0" Type="SkiaSharp.SKPoint" />
        <Parameter Name="point1" Type="SkiaSharp.SKPoint" />
        <Parameter Name="w" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="point0">The amount to add to the coordinates of the last point on this contour, to specify the control point of the conic curve.</param>
        <param name="point1">The amount to add to the coordinates of the last point on this contour, to specify the end point of the conic curve.</param>
        <param name="w">The weight of the conic curve.</param>
        <summary>Same as <see cref="M:SkiaSharp.SKPath.ConicTo" /> but the coordinates are considered relative to the last point on this contour.</summary>
        <remarks>If no <see cref="M:SkiaSharp.SKPath.MoveTo" /> call has been made for this contour, the first point is automatically set to (0, 0).</remarks>
      </Docs>
    </Member>
    <Member MemberName="RConicTo">
      <MemberSignature Language="C#" Value="public void RConicTo (float dx0, float dy0, float dx1, float dy1, float w);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RConicTo(float32 dx0, float32 dy0, float32 dx1, float32 dy1, float32 w) cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.SKPath.RConicTo(System.Single,System.Single,System.Single,System.Single,System.Single)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.57.0.0</AssemblyVersion>
        <AssemblyVersion>1.58.0.0</AssemblyVersion>
        <AssemblyVersion>1.59.0.0</AssemblyVersion>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dx0" Type="System.Single" />
        <Parameter Name="dy0" Type="System.Single" />
        <Parameter Name="dx1" Type="System.Single" />
        <Parameter Name="dy1" Type="System.Single" />
        <Parameter Name="w" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="dx0">The amount to add to the x-coordinate of the last point on this contour, to specify the control point of the conic curve.</param>
        <param name="dy0">The amount to add to the y-coordinate of the last point on this contour, to specify the control point of the conic curve.</param>
        <param name="dx1">The amount to add to the x-coordinate of the last point on this contour, to specify the end point of the conic curve.</param>
        <param name="dy1">The amount to add to the y-coordinate of the last point on this contour, to specify the end point of the conic curve.</param>
        <param name="w">The weight of the conic curve.</param>
        <summary>Same as <see cref="M:SkiaSharp.SKPath.ConicTo" /> but the coordinates are considered relative to the last point on this contour.</summary>
        <remarks>If no <see cref="M:SkiaSharp.SKPath.MoveTo" /> call has been made for this contour, the first point is automatically set to (0, 0).</remarks>
      </Docs>
    </Member>
    <Member MemberName="RCubicTo">
      <MemberSignature Language="C#" Value="public void RCubicTo (SkiaSharp.SKPoint point0, SkiaSharp.SKPoint point1, SkiaSharp.SKPoint point2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RCubicTo(valuetype SkiaSharp.SKPoint point0, valuetype SkiaSharp.SKPoint point1, valuetype SkiaSharp.SKPoint point2) cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.SKPath.RCubicTo(SkiaSharp.SKPoint,SkiaSharp.SKPoint,SkiaSharp.SKPoint)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.57.0.0</AssemblyVersion>
        <AssemblyVersion>1.58.0.0</AssemblyVersion>
        <AssemblyVersion>1.59.0.0</AssemblyVersion>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point0" Type="SkiaSharp.SKPoint" />
        <Parameter Name="point1" Type="SkiaSharp.SKPoint" />
        <Parameter Name="point2" Type="SkiaSharp.SKPoint" />
      </Parameters>
      <Docs>
        <param name="point0">The amount to add to the coordinates of the last point on this contour, to specify the 1st control point on a cubic curve.</param>
        <param name="point1">The amount to add to the coordinates of the last point on this contour, to specify the 2nd control point on a cubic curve.</param>
        <param name="point2">The amount to add to the coordinates of the last point on this contour, to specify the end point on a cubic curve.</param>
        <summary>Same as <see cref="M:SkiaSharp.SKPath.CubicTo" /> but the coordinates are considered relative to the last point on this contour.</summary>
        <remarks> If no <see cref="M:SkiaSharp.SKPath.MoveTo" /> call has been made for this contour, the first point is automatically set to (0, 0).</remarks>
      </Docs>
    </Member>
    <Member MemberName="RCubicTo">
      <MemberSignature Language="C#" Value="public void RCubicTo (float dx0, float dy0, float dx1, float dy1, float dx2, float dy2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RCubicTo(float32 dx0, float32 dy0, float32 dx1, float32 dy1, float32 dx2, float32 dy2) cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.SKPath.RCubicTo(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.57.0.0</AssemblyVersion>
        <AssemblyVersion>1.58.0.0</AssemblyVersion>
        <AssemblyVersion>1.59.0.0</AssemblyVersion>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dx0" Type="System.Single" />
        <Parameter Name="dy0" Type="System.Single" />
        <Parameter Name="dx1" Type="System.Single" />
        <Parameter Name="dy1" Type="System.Single" />
        <Parameter Name="dx2" Type="System.Single" />
        <Parameter Name="dy2" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="dx0">The amount to add to the x-coordinate of the last point on this contour, to specify the 1st control point on a cubic curve.</param>
        <param name="dy0">The amount to add to the y-coordinate of the last point on this contour, to specify the 1st control point on a cubic curve.</param>
        <param name="dx1">The amount to add to the x-coordinate of the last point on this contour, to specify the 2nd control point on a cubic curve.</param>
        <param name="dy1">The amount to add to the y-coordinate of the last point on this contour, to specify the 2nd control point on a cubic curve.</param>
        <param name="dx2">The amount to add to the x-coordinate of the last point on this contour, to specify the end point on a cubic curve.</param>
        <param name="dy2">The amount to add to the y-coordinate of the last point on this contour, to specify the end point on a cubic curve.</param>
        <summary>Same as <see cref="M:SkiaSharp.SKPath.CubicTo" /> but the coordinates are considered relative to the last point on this contour.</summary>
        <remarks> If no <see cref="M:SkiaSharp.SKPath.MoveTo" /> call has been made for this contour, the first point is automatically set to (0, 0).</remarks>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.SKPath.Reset" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.57.0.0</AssemblyVersion>
        <AssemblyVersion>1.58.0.0</AssemblyVersion>
        <AssemblyVersion>1.59.0.0</AssemblyVersion>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Clear any lines and curves from the path, making it empty.</summary>
        <remarks>This frees up internal storage associated with those segments.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Rewind">
      <MemberSignature Language="C#" Value="public void Rewind ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Rewind() cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.SKPath.Rewind" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.57.0.0</AssemblyVersion>
        <AssemblyVersion>1.58.0.0</AssemblyVersion>
        <AssemblyVersion>1.59.0.0</AssemblyVersion>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Clear any lines and curves from the path, making it empty.</summary>
        <remarks>Any internal storage for those lines/curves is retained, making reuse of the path potentially faster.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RLineTo">
      <MemberSignature Language="C#" Value="public void RLineTo (SkiaSharp.SKPoint point);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RLineTo(valuetype SkiaSharp.SKPoint point) cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.SKPath.RLineTo(SkiaSharp.SKPoint)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.57.0.0</AssemblyVersion>
        <AssemblyVersion>1.58.0.0</AssemblyVersion>
        <AssemblyVersion>1.59.0.0</AssemblyVersion>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="SkiaSharp.SKPoint" />
      </Parameters>
      <Docs>
        <param name="point">The amount to add to the coordinates of the last point on this contour, to specify the end of a line.</param>
        <summary>Same as <see cref="M:SkiaSharp.SKPath.LineTo" /> but the coordinates are considered relative to the last point on this contour.</summary>
        <remarks> If no <see cref="M:SkiaSharp.SKPath.MoveTo" /> call has been made for this contour, the first point is automatically set to (0, 0).</remarks>
      </Docs>
    </Member>
    <Member MemberName="RLineTo">
      <MemberSignature Language="C#" Value="public void RLineTo (float dx, float dy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RLineTo(float32 dx, float32 dy) cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.SKPath.RLineTo(System.Single,System.Single)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.57.0.0</AssemblyVersion>
        <AssemblyVersion>1.58.0.0</AssemblyVersion>
        <AssemblyVersion>1.59.0.0</AssemblyVersion>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dx" Type="System.Single" />
        <Parameter Name="dy" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="dx">The amount to add to the x-coordinate of the last point on this contour, to specify the end of a line.</param>
        <param name="dy">The amount to add to the y-coordinate of the last point on this contour, to specify the end of a line.</param>
        <summary>Same as <see cref="M:SkiaSharp.SKPath.LineTo" /> but the coordinates are considered relative to the last point on this contour.</summary>
        <remarks> If no <see cref="M:SkiaSharp.SKPath.MoveTo" /> call has been made for this contour, the first point is automatically set to (0, 0).</remarks>
      </Docs>
    </Member>
    <Member MemberName="RMoveTo">
      <MemberSignature Language="C#" Value="public void RMoveTo (SkiaSharp.SKPoint point);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RMoveTo(valuetype SkiaSharp.SKPoint point) cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.SKPath.RMoveTo(SkiaSharp.SKPoint)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.57.0.0</AssemblyVersion>
        <AssemblyVersion>1.58.0.0</AssemblyVersion>
        <AssemblyVersion>1.59.0.0</AssemblyVersion>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="SkiaSharp.SKPoint" />
      </Parameters>
      <Docs>
        <param name="point">The amount to add to the coordinates of the last point on this contour, to specify the start of a new contour.</param>
        <summary>Same as <see cref="M:SkiaSharp.SKPath.MoveTo" /> but the coordinates are considered relative to the last point on this contour.</summary>
        <remarks>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RMoveTo">
      <MemberSignature Language="C#" Value="public void RMoveTo (float dx, float dy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RMoveTo(float32 dx, float32 dy) cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.SKPath.RMoveTo(System.Single,System.Single)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.57.0.0</AssemblyVersion>
        <AssemblyVersion>1.58.0.0</AssemblyVersion>
        <AssemblyVersion>1.59.0.0</AssemblyVersion>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dx" Type="System.Single" />
        <Parameter Name="dy" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="dx">The amount to add to the x-coordinate of the last point on this contour, to specify the start of a new contour.</param>
        <param name="dy">The amount to add to the x-coordinate of the last point on this contour, to specify the start of a new contour.</param>
        <summary>Same as <see cref="M:SkiaSharp.SKPath.MoveTo" /> but the coordinates are considered relative to the last point on this contour.</summary>
        <remarks>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RQuadTo">
      <MemberSignature Language="C#" Value="public void RQuadTo (SkiaSharp.SKPoint point0, SkiaSharp.SKPoint point1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RQuadTo(valuetype SkiaSharp.SKPoint point0, valuetype SkiaSharp.SKPoint point1) cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.SKPath.RQuadTo(SkiaSharp.SKPoint,SkiaSharp.SKPoint)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.57.0.0</AssemblyVersion>
        <AssemblyVersion>1.58.0.0</AssemblyVersion>
        <AssemblyVersion>1.59.0.0</AssemblyVersion>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point0" Type="SkiaSharp.SKPoint" />
        <Parameter Name="point1" Type="SkiaSharp.SKPoint" />
      </Parameters>
      <Docs>
        <param name="point0">The amount to add to the coordinates of the last point on this contour, to specify the control point on a quadratic curve.</param>
        <param name="point1">The amount to add to the coordinates of the last point on this contour, to specify end point on a quadratic curve.</param>
        <summary>Same as <see cref="M:SkiaSharp.SKPath.QuadTo" /> but the coordinates are considered relative to the last point on this contour.</summary>
        <remarks> If no <see cref="M:SkiaSharp.SKPath.MoveTo" /> call has been made for this contour, the first point is automatically set to (0, 0).</remarks>
      </Docs>
    </Member>
    <Member MemberName="RQuadTo">
      <MemberSignature Language="C#" Value="public void RQuadTo (float dx0, float dy0, float dx1, float dy1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RQuadTo(float32 dx0, float32 dy0, float32 dx1, float32 dy1) cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.SKPath.RQuadTo(System.Single,System.Single,System.Single,System.Single)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.57.0.0</AssemblyVersion>
        <AssemblyVersion>1.58.0.0</AssemblyVersion>
        <AssemblyVersion>1.59.0.0</AssemblyVersion>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dx0" Type="System.Single" />
        <Parameter Name="dy0" Type="System.Single" />
        <Parameter Name="dx1" Type="System.Single" />
        <Parameter Name="dy1" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="dx0">The amount to add to the x-coordinate of the last point on this contour, to specify the control point on a quadratic curve.</param>
        <param name="dy0">The amount to add to the y-coordinate of the last point on this contour, to specify the control point on a quadratic curve.</param>
        <param name="dx1">The amount to add to the x-coordinate of the last point on this contour, to specify end point on a quadratic curve.</param>
        <param name="dy1">The amount to add to the y-coordinate of the last point on this contour, to specify end point on a quadratic curve.</param>
        <summary>Same as <see cref="M:SkiaSharp.SKPath.QuadTo" /> but the coordinates are considered relative to the last point on this contour.</summary>
        <remarks> If no <see cref="M:SkiaSharp.SKPath.MoveTo" /> call has been made for this contour, the first point is automatically set to (0, 0).</remarks>
      </Docs>
    </Member>
    <Member MemberName="SegmentMasks">
      <MemberSignature Language="C#" Value="public SkiaSharp.SKPathSegmentMask SegmentMasks { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype SkiaSharp.SKPathSegmentMask SegmentMasks" />
      <MemberSignature Language="DocId" Value="P:SkiaSharp.SKPath.SegmentMasks" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.57.0.0</AssemblyVersion>
        <AssemblyVersion>1.58.0.0</AssemblyVersion>
        <AssemblyVersion>1.59.0.0</AssemblyVersion>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>SkiaSharp.SKPathSegmentMask</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a set of flags indicating if the path contains one or more segments of that type.</summary>
        <value>
          <para></para>
        </value>
        <remarks>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Simplify">
      <MemberSignature Language="C#" Value="public SkiaSharp.SKPath Simplify ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class SkiaSharp.SKPath Simplify() cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.SKPath.Simplify" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.57.0.0</AssemblyVersion>
        <AssemblyVersion>1.58.0.0</AssemblyVersion>
        <AssemblyVersion>1.59.0.0</AssemblyVersion>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>SkiaSharp.SKPath</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Return a simplified copy of the current path.</summary>
        <returns>Returns the new path if simplification was successful, otherwise null.</returns>
        <remarks>The curve order is reduced where possible so that cubics may be turned into quadratics, and quadratics maybe turned into lines.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Simplify">
      <MemberSignature Language="C#" Value="public bool Simplify (SkiaSharp.SKPath result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Simplify(class SkiaSharp.SKPath result) cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.SKPath.Simplify(SkiaSharp.SKPath)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.57.0.0</AssemblyVersion>
        <AssemblyVersion>1.58.0.0</AssemblyVersion>
        <AssemblyVersion>1.59.0.0</AssemblyVersion>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="SkiaSharp.SKPath" />
      </Parameters>
      <Docs>
        <param name="result">The path to store the simplified path data. If simplification failed, then this is unmodified.</param>
        <summary>Simplifies the current path.</summary>
        <returns>Returns true if simplification was successful, otherwise false.</returns>
        <remarks>The curve order is reduced where possible so that cubics may be turned into quadratics, and quadratics maybe turned into lines.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TightBounds">
      <MemberSignature Language="C#" Value="public SkiaSharp.SKRect TightBounds { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype SkiaSharp.SKRect TightBounds" />
      <MemberSignature Language="DocId" Value="P:SkiaSharp.SKPath.TightBounds" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.57.0.0</AssemblyVersion>
        <AssemblyVersion>1.58.0.0</AssemblyVersion>
        <AssemblyVersion>1.59.0.0</AssemblyVersion>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>SkiaSharp.SKRect</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the “tight” bounds of the path. Unlike <see cref="P:SkiaSharp.SKPath.Bounds" />, the control points of curves are excluded.</summary>
        <value>The tight bounds of the path.</value>
        <remarks>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToSvgPathData">
      <MemberSignature Language="C#" Value="public string ToSvgPathData ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToSvgPathData() cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.SKPath.ToSvgPathData" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.57.0.0</AssemblyVersion>
        <AssemblyVersion>1.58.0.0</AssemblyVersion>
        <AssemblyVersion>1.59.0.0</AssemblyVersion>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns a SVG path data representation of the current path.</summary>
        <returns>
          <para></para>
        </returns>
        <remarks>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (SkiaSharp.SKMatrix matrix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(valuetype SkiaSharp.SKMatrix matrix) cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.SKPath.Transform(SkiaSharp.SKMatrix)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.57.0.0</AssemblyVersion>
        <AssemblyVersion>1.58.0.0</AssemblyVersion>
        <AssemblyVersion>1.59.0.0</AssemblyVersion>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="matrix" Type="SkiaSharp.SKMatrix" />
      </Parameters>
      <Docs>
        <param name="matrix">The matrix to use for transformation.</param>
        <summary>Applies a transformation matrix to the all the elements in the path.</summary>
        <remarks>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="VerbCount">
      <MemberSignature Language="C#" Value="public int VerbCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 VerbCount" />
      <MemberSignature Language="DocId" Value="P:SkiaSharp.SKPath.VerbCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.57.0.0</AssemblyVersion>
        <AssemblyVersion>1.58.0.0</AssemblyVersion>
        <AssemblyVersion>1.59.0.0</AssemblyVersion>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the number of verbs in the path.</summary>
        <value>
          <para></para>
        </value>
        <remarks>
          <para></para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
