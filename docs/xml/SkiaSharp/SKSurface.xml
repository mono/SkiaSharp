<Type Name="SKSurface" FullName="SkiaSharp.SKSurface">
  <TypeSignature Language="C#" Value="public class SKSurface : SkiaSharp.SKObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SKSurface extends SkiaSharp.SKObject" />
  <TypeSignature Language="DocId" Value="T:SkiaSharp.SKSurface" />
  <AssemblyInfo>
    <AssemblyName>SkiaSharp</AssemblyName>
    <AssemblyVersion>1.57.0.0</AssemblyVersion>
    <AssemblyVersion>1.58.0.0</AssemblyVersion>
    <AssemblyVersion>1.59.0.0</AssemblyVersion>
    <AssemblyVersion>1.60.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>SkiaSharp.SKObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Represents the backend/results of drawing to a canvas.</summary>
    <remarks>
      <para>The surface represents the backend/results of drawing to a canvas. For raster drawing, the surface will be pixels, but (for example) when drawing into a PDF or <see cref="T:SkiaSharp.SKPicture" /> canvas, the surface stores the recorded commands.</para>
      <para></para>
      <para>The surface always has non-zero dimensions. If there is a request for a new surface, and either of the requested dimensions are zero, then <see langword="null" /> will be returned.</para>
      <para></para>
      <para>Once you create a surface with one of its <see cref="M:SkiaSharp.SKSurface.Create" /> methods, you can draw into the canvas returned by the <see cref="M:SkiaSharp.SKSurface.Canvas" /> property. Once the drawing is complete, you can retrieve an <see cref="T:SkiaSharp.SKImage" /> by calling the <see cref="M:SkiaSharp.SKSurface.Snapshot" /> method.</para>
      <para></para>
      <example>
        <code lang="C#"><![CDATA[using (var surface = SKSurface.Create (width: 640, height: 480, SKImageInfo.PlatformColorType, SKAlphaType.Premul)) {
    // fetch the canvas where we draw into
    SKCanvas myCanvas = surface.Canvas;

    // Configure our brush
    var redBrush = new SKPaint () {
        Color = new SKColor (0xff, 0, 0),
        IsStroke = true
    };
    var blueBrush = new SKPaint () {
        Color = new SKColor (0, 0, 0xff),
        IsStroke = true
    };

    for (int i = 0; i < 64; i += 8)
        canvas.DrawRect (new SKRect (i, i, 256-i, 256-i), (i % 16 == 0) ? redBrush : blueBrush);

    // Save the artwork
    using (var image = surface.Snapshot ())
    using (var data = image.Encode ())
    using (var output = File.OpenWrite ("demo.png")) {
        data.SaveTo(output);
    }
}
]]></code>
      </example>
      <para></para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Canvas">
      <MemberSignature Language="C#" Value="public SkiaSharp.SKCanvas Canvas { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class SkiaSharp.SKCanvas Canvas" />
      <MemberSignature Language="DocId" Value="P:SkiaSharp.SKSurface.Canvas" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.57.0.0</AssemblyVersion>
        <AssemblyVersion>1.58.0.0</AssemblyVersion>
        <AssemblyVersion>1.59.0.0</AssemblyVersion>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>SkiaSharp.SKCanvas</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the canvas for this surface which can be used for drawing into it.</summary>
        <value>
          <para></para>
        </value>
        <remarks>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static SkiaSharp.SKSurface Create (SkiaSharp.SKImageInfo info);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class SkiaSharp.SKSurface Create(valuetype SkiaSharp.SKImageInfo info) cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.SKSurface.Create(SkiaSharp.SKImageInfo)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.57.0.0</AssemblyVersion>
        <AssemblyVersion>1.58.0.0</AssemblyVersion>
        <AssemblyVersion>1.59.0.0</AssemblyVersion>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>SkiaSharp.SKSurface</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="SkiaSharp.SKImageInfo" />
      </Parameters>
      <Docs>
        <param name="info">Contains the image configuration parameters.</param>
        <summary>Creates a new surface with the specified image parameters.</summary>
        <returns>Returns the new surface if it could be created and the configuration is supported, otherwise <see langword="null" />.</returns>
        <remarks>This will create a buffer with the parameters specified in <paramref name="info" />.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static SkiaSharp.SKSurface Create (SkiaSharp.SKPixmap pixmap);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class SkiaSharp.SKSurface Create(class SkiaSharp.SKPixmap pixmap) cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.SKSurface.Create(SkiaSharp.SKPixmap)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.58.0.0</AssemblyVersion>
        <AssemblyVersion>1.59.0.0</AssemblyVersion>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>SkiaSharp.SKSurface</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pixmap" Type="SkiaSharp.SKPixmap" />
      </Parameters>
      <Docs>
        <param name="pixmap">The pixmap.</param>
        <summary>Creates a new surface with the specified pixmap.</summary>
        <returns>Returns the new surface if it could be created and the configuration is supported, otherwise <see langword="null" />.</returns>
        <remarks>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static SkiaSharp.SKSurface Create (SkiaSharp.GRContext context, SkiaSharp.GRBackendRenderTargetDesc desc);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class SkiaSharp.SKSurface Create(class SkiaSharp.GRContext context, valuetype SkiaSharp.GRBackendRenderTargetDesc desc) cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.SKSurface.Create(SkiaSharp.GRContext,SkiaSharp.GRBackendRenderTargetDesc)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.57.0.0</AssemblyVersion>
        <AssemblyVersion>1.58.0.0</AssemblyVersion>
        <AssemblyVersion>1.59.0.0</AssemblyVersion>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>SkiaSharp.SKSurface</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="SkiaSharp.GRContext" />
        <Parameter Name="desc" Type="SkiaSharp.GRBackendRenderTargetDesc" />
      </Parameters>
      <Docs>
        <param name="context">The graphics context.</param>
        <param name="desc">The description of the existing render target.</param>
        <summary>Wraps a pre-existing 3D API rendering target as a surface.</summary>
        <returns>Returns the new surface if it could be created and the configuration is supported, otherwise <see langword="null" />.</returns>
        <remarks>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static SkiaSharp.SKSurface Create (SkiaSharp.GRContext context, SkiaSharp.GRBackendTextureDesc desc);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class SkiaSharp.SKSurface Create(class SkiaSharp.GRContext context, valuetype SkiaSharp.GRBackendTextureDesc desc) cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.SKSurface.Create(SkiaSharp.GRContext,SkiaSharp.GRBackendTextureDesc)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.57.0.0</AssemblyVersion>
        <AssemblyVersion>1.58.0.0</AssemblyVersion>
        <AssemblyVersion>1.59.0.0</AssemblyVersion>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>SkiaSharp.SKSurface</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="SkiaSharp.GRContext" />
        <Parameter Name="desc" Type="SkiaSharp.GRBackendTextureDesc" />
      </Parameters>
      <Docs>
        <param name="context">The graphics context.</param>
        <param name="desc">The description of the existing texture.</param>
        <summary>Wraps a pre-existing 3D API texture as a surface.</summary>
        <returns>Returns the new surface if it could be created and the configuration is supported, otherwise <see langword="null" />.</returns>
        <remarks>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static SkiaSharp.SKSurface Create (SkiaSharp.GRContext context, SkiaSharp.GRGlBackendTextureDesc desc);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class SkiaSharp.SKSurface Create(class SkiaSharp.GRContext context, valuetype SkiaSharp.GRGlBackendTextureDesc desc) cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.SKSurface.Create(SkiaSharp.GRContext,SkiaSharp.GRGlBackendTextureDesc)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>SkiaSharp.SKSurface</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="SkiaSharp.GRContext" />
        <Parameter Name="desc" Type="SkiaSharp.GRGlBackendTextureDesc" />
      </Parameters>
      <Docs>
        <param name="context">The graphics context.</param>
        <param name="desc">The description of the existing OpenGL texture.</param>
        <summary>Wraps a pre-existing OpenGL texture as a surface.</summary>
        <returns>Returns the new surface if it could be created and the configuration is supported, otherwise <see langword="null" />.</returns>
        <remarks>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static SkiaSharp.SKSurface Create (SkiaSharp.SKImageInfo info, SkiaSharp.SKSurfaceProps props);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class SkiaSharp.SKSurface Create(valuetype SkiaSharp.SKImageInfo info, valuetype SkiaSharp.SKSurfaceProps props) cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.SKSurface.Create(SkiaSharp.SKImageInfo,SkiaSharp.SKSurfaceProps)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.57.0.0</AssemblyVersion>
        <AssemblyVersion>1.58.0.0</AssemblyVersion>
        <AssemblyVersion>1.59.0.0</AssemblyVersion>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>SkiaSharp.SKSurface</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="SkiaSharp.SKImageInfo" />
        <Parameter Name="props" Type="SkiaSharp.SKSurfaceProps" />
      </Parameters>
      <Docs>
        <param name="info">The image configuration parameters.</param>
        <param name="props">The surface property configuration.</param>
        <summary>Creates a new surface from the specified image parameters and surface properties.</summary>
        <returns>Returns the new surface if it could be created and the configuration is supported, otherwise <see langword="null" />.</returns>
        <remarks>This will create a buffer with the parameters specified in <paramref name="info&amp;nbsp;" />and the properties specified in <paramref name="props" />.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static SkiaSharp.SKSurface Create (SkiaSharp.SKPixmap pixmap, SkiaSharp.SKSurfaceProps props);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class SkiaSharp.SKSurface Create(class SkiaSharp.SKPixmap pixmap, valuetype SkiaSharp.SKSurfaceProps props) cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.SKSurface.Create(SkiaSharp.SKPixmap,SkiaSharp.SKSurfaceProps)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.58.0.0</AssemblyVersion>
        <AssemblyVersion>1.59.0.0</AssemblyVersion>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>SkiaSharp.SKSurface</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pixmap" Type="SkiaSharp.SKPixmap" />
        <Parameter Name="props" Type="SkiaSharp.SKSurfaceProps" />
      </Parameters>
      <Docs>
        <param name="pixmap">The pixmap.</param>
        <param name="props">The surface property configuration.</param>
        <summary>Creates a new surface with the specified pixmap and surface properties.</summary>
        <returns>Returns the new surface if it could be created and the configuration is supported, otherwise <see langword="null" />.</returns>
        <remarks>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static SkiaSharp.SKSurface Create (SkiaSharp.GRContext context, SkiaSharp.GRBackendRenderTargetDesc desc, SkiaSharp.SKSurfaceProps props);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class SkiaSharp.SKSurface Create(class SkiaSharp.GRContext context, valuetype SkiaSharp.GRBackendRenderTargetDesc desc, valuetype SkiaSharp.SKSurfaceProps props) cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.SKSurface.Create(SkiaSharp.GRContext,SkiaSharp.GRBackendRenderTargetDesc,SkiaSharp.SKSurfaceProps)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.57.0.0</AssemblyVersion>
        <AssemblyVersion>1.58.0.0</AssemblyVersion>
        <AssemblyVersion>1.59.0.0</AssemblyVersion>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>SkiaSharp.SKSurface</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="SkiaSharp.GRContext" />
        <Parameter Name="desc" Type="SkiaSharp.GRBackendRenderTargetDesc" />
        <Parameter Name="props" Type="SkiaSharp.SKSurfaceProps" />
      </Parameters>
      <Docs>
        <param name="context">The graphics context.</param>
        <param name="desc">The description of the existing render target.</param>
        <param name="props">The surface property configuration.</param>
        <summary>Wraps a pre-existing 3D API rendering target as a surface.</summary>
        <returns>Returns the new surface if it could be created and the configuration is supported, otherwise <see langword="null" />.</returns>
        <remarks>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static SkiaSharp.SKSurface Create (SkiaSharp.GRContext context, SkiaSharp.GRBackendTextureDesc desc, SkiaSharp.SKSurfaceProps props);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class SkiaSharp.SKSurface Create(class SkiaSharp.GRContext context, valuetype SkiaSharp.GRBackendTextureDesc desc, valuetype SkiaSharp.SKSurfaceProps props) cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.SKSurface.Create(SkiaSharp.GRContext,SkiaSharp.GRBackendTextureDesc,SkiaSharp.SKSurfaceProps)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.57.0.0</AssemblyVersion>
        <AssemblyVersion>1.58.0.0</AssemblyVersion>
        <AssemblyVersion>1.59.0.0</AssemblyVersion>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>SkiaSharp.SKSurface</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="SkiaSharp.GRContext" />
        <Parameter Name="desc" Type="SkiaSharp.GRBackendTextureDesc" />
        <Parameter Name="props" Type="SkiaSharp.SKSurfaceProps" />
      </Parameters>
      <Docs>
        <param name="context">The graphics context.</param>
        <param name="desc">The description of the existing texture.</param>
        <param name="props">The surface property configuration.</param>
        <summary>Wraps a pre-existing 3D API texture as a surface.</summary>
        <returns>Returns the new surface if it could be created and the configuration is supported, otherwise <see langword="null" />.</returns>
        <remarks>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static SkiaSharp.SKSurface Create (SkiaSharp.GRContext context, SkiaSharp.GRGlBackendTextureDesc desc, SkiaSharp.SKSurfaceProps props);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class SkiaSharp.SKSurface Create(class SkiaSharp.GRContext context, valuetype SkiaSharp.GRGlBackendTextureDesc desc, valuetype SkiaSharp.SKSurfaceProps props) cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.SKSurface.Create(SkiaSharp.GRContext,SkiaSharp.GRGlBackendTextureDesc,SkiaSharp.SKSurfaceProps)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>SkiaSharp.SKSurface</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="SkiaSharp.GRContext" />
        <Parameter Name="desc" Type="SkiaSharp.GRGlBackendTextureDesc" />
        <Parameter Name="props" Type="SkiaSharp.SKSurfaceProps" />
      </Parameters>
      <Docs>
        <param name="context">The graphics context.</param>
        <param name="desc">The description of the existing OpenGL texture.</param>
        <param name="props">The surface property configuration.</param>
        <summary>Wraps a pre-existing OpenGL texture as a surface.</summary>
        <returns>Returns the new surface if it could be created and the configuration is supported, otherwise <see langword="null" />.</returns>
        <remarks>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static SkiaSharp.SKSurface Create (SkiaSharp.GRContext context, bool budgeted, SkiaSharp.SKImageInfo info);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class SkiaSharp.SKSurface Create(class SkiaSharp.GRContext context, bool budgeted, valuetype SkiaSharp.SKImageInfo info) cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.SKSurface.Create(SkiaSharp.GRContext,System.Boolean,SkiaSharp.SKImageInfo)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.57.0.0</AssemblyVersion>
        <AssemblyVersion>1.58.0.0</AssemblyVersion>
        <AssemblyVersion>1.59.0.0</AssemblyVersion>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>SkiaSharp.SKSurface</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="SkiaSharp.GRContext" />
        <Parameter Name="budgeted" Type="System.Boolean" />
        <Parameter Name="info" Type="SkiaSharp.SKImageInfo" />
      </Parameters>
      <Docs>
        <param name="context">The graphics context.</param>
        <param name="budgeted">Whether an allocation should count against a cache budget.</param>
        <param name="info">The image configuration parameters.</param>
        <summary>Creates a new surface whose contents will be drawn to an offscreen render target, allocated by the surface.</summary>
        <returns>Returns the new surface if it could be created and the configuration is supported, otherwise <see langword="null" />.</returns>
        <remarks>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static SkiaSharp.SKSurface Create (SkiaSharp.SKImageInfo info, IntPtr pixels, int rowBytes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class SkiaSharp.SKSurface Create(valuetype SkiaSharp.SKImageInfo info, native int pixels, int32 rowBytes) cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.SKSurface.Create(SkiaSharp.SKImageInfo,System.IntPtr,System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.57.0.0</AssemblyVersion>
        <AssemblyVersion>1.58.0.0</AssemblyVersion>
        <AssemblyVersion>1.59.0.0</AssemblyVersion>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>SkiaSharp.SKSurface</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="SkiaSharp.SKImageInfo" />
        <Parameter Name="pixels" Type="System.IntPtr" />
        <Parameter Name="rowBytes" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="info">The image configuration parameters.</param>
        <param name="pixels">The pointer to an in memory-buffer that can hold the image as specified.</param>
        <param name="rowBytes">The number of bytes per row in the pixel buffer.</param>
        <summary>Creates a new surface with the specified image parameters using a provided buffer.</summary>
        <returns>Returns the new surface if it could be created and the configuration is supported, otherwise <see langword="null" />.</returns>
        <remarks>This will create a buffer that will be backend by the in-memory buffer provided in <paramref name="pixels" />.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static SkiaSharp.SKSurface Create (SkiaSharp.GRContext context, bool budgeted, SkiaSharp.SKImageInfo info, int sampleCount);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class SkiaSharp.SKSurface Create(class SkiaSharp.GRContext context, bool budgeted, valuetype SkiaSharp.SKImageInfo info, int32 sampleCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.SKSurface.Create(SkiaSharp.GRContext,System.Boolean,SkiaSharp.SKImageInfo,System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.57.0.0</AssemblyVersion>
        <AssemblyVersion>1.58.0.0</AssemblyVersion>
        <AssemblyVersion>1.59.0.0</AssemblyVersion>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>SkiaSharp.SKSurface</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="SkiaSharp.GRContext" />
        <Parameter Name="budgeted" Type="System.Boolean" />
        <Parameter Name="info" Type="SkiaSharp.SKImageInfo" />
        <Parameter Name="sampleCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="context">The graphics context.</param>
        <param name="budgeted">Whether an allocation should count against a cache budget.</param>
        <param name="info">The image configuration parameters.</param>
        <param name="sampleCount">The number of samples.</param>
        <summary>Creates a new surface whose contents will be drawn to an offscreen render target, allocated by the surface.</summary>
        <returns>Returns the new surface if it could be created and the configuration is supported, otherwise <see langword="null" />.</returns>
        <remarks>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static SkiaSharp.SKSurface Create (SkiaSharp.SKImageInfo info, IntPtr pixels, int rowBytes, SkiaSharp.SKSurfaceProps props);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class SkiaSharp.SKSurface Create(valuetype SkiaSharp.SKImageInfo info, native int pixels, int32 rowBytes, valuetype SkiaSharp.SKSurfaceProps props) cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.SKSurface.Create(SkiaSharp.SKImageInfo,System.IntPtr,System.Int32,SkiaSharp.SKSurfaceProps)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.57.0.0</AssemblyVersion>
        <AssemblyVersion>1.58.0.0</AssemblyVersion>
        <AssemblyVersion>1.59.0.0</AssemblyVersion>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>SkiaSharp.SKSurface</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="SkiaSharp.SKImageInfo" />
        <Parameter Name="pixels" Type="System.IntPtr" />
        <Parameter Name="rowBytes" Type="System.Int32" />
        <Parameter Name="props" Type="SkiaSharp.SKSurfaceProps" />
      </Parameters>
      <Docs>
        <param name="info">The image configuration parameters.</param>
        <param name="pixels">The pointer to an in memory-buffer that can hold the image as specified.</param>
        <param name="rowBytes">The number of bytes per row in the pixel buffer.</param>
        <param name="props">The surface property configuration.</param>
        <summary>Creates a new surface from the specified image parameters, the provided buffer and surface properties.</summary>
        <returns>Returns the new surface if it could be created and the configuration is supported, otherwise <see langword="null" />.</returns>
        <remarks>This will create a buffer that will be backend by the in-memory buffer provided in <paramref name="pixels" />.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static SkiaSharp.SKSurface Create (int width, int height, SkiaSharp.SKColorType colorType, SkiaSharp.SKAlphaType alphaType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class SkiaSharp.SKSurface Create(int32 width, int32 height, valuetype SkiaSharp.SKColorType colorType, valuetype SkiaSharp.SKAlphaType alphaType) cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.SKSurface.Create(System.Int32,System.Int32,SkiaSharp.SKColorType,SkiaSharp.SKAlphaType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.57.0.0</AssemblyVersion>
        <AssemblyVersion>1.58.0.0</AssemblyVersion>
        <AssemblyVersion>1.59.0.0</AssemblyVersion>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>SkiaSharp.SKSurface</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="colorType" Type="SkiaSharp.SKColorType" />
        <Parameter Name="alphaType" Type="SkiaSharp.SKAlphaType" />
      </Parameters>
      <Docs>
        <param name="width">The desired width for the surface.</param>
        <param name="height">The desired heigh for the surface.</param>
        <param name="colorType">The color type to use for the surface.</param>
        <param name="alphaType">The transparency mode to use for the surface.</param>
        <summary>Creates a new surface with the specified image parameters.</summary>
        <returns>Returns the new surface if it could be created and the configuration is supported, otherwise <see langword="null" />.</returns>
        <remarks>This will create a buffer that will be backend by the in-memory buffer.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static SkiaSharp.SKSurface Create (SkiaSharp.GRContext context, bool budgeted, SkiaSharp.SKImageInfo info, int sampleCount, SkiaSharp.SKSurfaceProps props);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class SkiaSharp.SKSurface Create(class SkiaSharp.GRContext context, bool budgeted, valuetype SkiaSharp.SKImageInfo info, int32 sampleCount, valuetype SkiaSharp.SKSurfaceProps props) cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.SKSurface.Create(SkiaSharp.GRContext,System.Boolean,SkiaSharp.SKImageInfo,System.Int32,SkiaSharp.SKSurfaceProps)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.57.0.0</AssemblyVersion>
        <AssemblyVersion>1.58.0.0</AssemblyVersion>
        <AssemblyVersion>1.59.0.0</AssemblyVersion>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>SkiaSharp.SKSurface</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="SkiaSharp.GRContext" />
        <Parameter Name="budgeted" Type="System.Boolean" />
        <Parameter Name="info" Type="SkiaSharp.SKImageInfo" />
        <Parameter Name="sampleCount" Type="System.Int32" />
        <Parameter Name="props" Type="SkiaSharp.SKSurfaceProps" />
      </Parameters>
      <Docs>
        <param name="context">The graphics context.</param>
        <param name="budgeted">Whether an allocation should count against a cache budget.</param>
        <param name="info">The image configuration parameters.</param>
        <param name="sampleCount">The number of samples.</param>
        <param name="props">The surface property configuration.</param>
        <summary>Creates a new surface whose contents will be drawn to an offscreen render target, allocated by the surface.</summary>
        <returns>Returns the new surface if it could be created and the configuration is supported, otherwise <see langword="null" />.</returns>
        <remarks>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static SkiaSharp.SKSurface Create (int width, int height, SkiaSharp.SKColorType colorType, SkiaSharp.SKAlphaType alphaType, SkiaSharp.SKSurfaceProps props);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class SkiaSharp.SKSurface Create(int32 width, int32 height, valuetype SkiaSharp.SKColorType colorType, valuetype SkiaSharp.SKAlphaType alphaType, valuetype SkiaSharp.SKSurfaceProps props) cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.SKSurface.Create(System.Int32,System.Int32,SkiaSharp.SKColorType,SkiaSharp.SKAlphaType,SkiaSharp.SKSurfaceProps)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.57.0.0</AssemblyVersion>
        <AssemblyVersion>1.58.0.0</AssemblyVersion>
        <AssemblyVersion>1.59.0.0</AssemblyVersion>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>SkiaSharp.SKSurface</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="colorType" Type="SkiaSharp.SKColorType" />
        <Parameter Name="alphaType" Type="SkiaSharp.SKAlphaType" />
        <Parameter Name="props" Type="SkiaSharp.SKSurfaceProps" />
      </Parameters>
      <Docs>
        <param name="width">The desired width for the surface.</param>
        <param name="height">The desired height for the surface.</param>
        <param name="colorType">The color type to use for the surface.</param>
        <param name="alphaType">The transparency mode to use for the surface.</param>
        <param name="props">The surface property configuration.</param>
        <summary>Creates a new surface with the specified image parameters and surface properties.</summary>
        <returns>Returns the new surface if it could be created and the configuration is supported, otherwise <see langword="null" />.</returns>
        <remarks>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static SkiaSharp.SKSurface Create (int width, int height, SkiaSharp.SKColorType colorType, SkiaSharp.SKAlphaType alphaType, IntPtr pixels, int rowBytes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class SkiaSharp.SKSurface Create(int32 width, int32 height, valuetype SkiaSharp.SKColorType colorType, valuetype SkiaSharp.SKAlphaType alphaType, native int pixels, int32 rowBytes) cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.SKSurface.Create(System.Int32,System.Int32,SkiaSharp.SKColorType,SkiaSharp.SKAlphaType,System.IntPtr,System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.57.0.0</AssemblyVersion>
        <AssemblyVersion>1.58.0.0</AssemblyVersion>
        <AssemblyVersion>1.59.0.0</AssemblyVersion>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>SkiaSharp.SKSurface</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="colorType" Type="SkiaSharp.SKColorType" />
        <Parameter Name="alphaType" Type="SkiaSharp.SKAlphaType" />
        <Parameter Name="pixels" Type="System.IntPtr" />
        <Parameter Name="rowBytes" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="width">The desired width for the surface.</param>
        <param name="height">The desired height for the surface.</param>
        <param name="colorType">The color type to use for the surface.</param>
        <param name="alphaType">The transparency mode to use for the surface.</param>
        <param name="pixels">The pointer to an in memory-buffer that can hold the image as specified.</param>
        <param name="rowBytes">The number of bytes per row in the pixel buffer.</param>
        <summary>Creates a new surface with the specified image parameters using a provided buffer.</summary>
        <returns>Returns the new surface if it could be created and the configuration is supported, otherwise <see langword="null" />.</returns>
        <remarks>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static SkiaSharp.SKSurface Create (int width, int height, SkiaSharp.SKColorType colorType, SkiaSharp.SKAlphaType alphaType, IntPtr pixels, int rowBytes, SkiaSharp.SKSurfaceProps props);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class SkiaSharp.SKSurface Create(int32 width, int32 height, valuetype SkiaSharp.SKColorType colorType, valuetype SkiaSharp.SKAlphaType alphaType, native int pixels, int32 rowBytes, valuetype SkiaSharp.SKSurfaceProps props) cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.SKSurface.Create(System.Int32,System.Int32,SkiaSharp.SKColorType,SkiaSharp.SKAlphaType,System.IntPtr,System.Int32,SkiaSharp.SKSurfaceProps)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.57.0.0</AssemblyVersion>
        <AssemblyVersion>1.58.0.0</AssemblyVersion>
        <AssemblyVersion>1.59.0.0</AssemblyVersion>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>SkiaSharp.SKSurface</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="colorType" Type="SkiaSharp.SKColorType" />
        <Parameter Name="alphaType" Type="SkiaSharp.SKAlphaType" />
        <Parameter Name="pixels" Type="System.IntPtr" />
        <Parameter Name="rowBytes" Type="System.Int32" />
        <Parameter Name="props" Type="SkiaSharp.SKSurfaceProps" />
      </Parameters>
      <Docs>
        <param name="width">The desired width for the surface.</param>
        <param name="height">The desired height for the surface.</param>
        <param name="colorType">The color type to use for the surface.</param>
        <param name="alphaType">The transparency mode to use for the surface.</param>
        <param name="pixels">The pointer to an in memory-buffer that can hold the image as specified.</param>
        <param name="rowBytes">The number of bytes per row in the pixel buffer.</param>
        <param name="props">The surface property configuration.</param>
        <summary>Creates a new surface with the specified image parameters using a provided buffer and surface properties.</summary>
        <returns>Returns the new surface if it could be created and the configuration is supported, otherwise <see langword="null" />.</returns>
        <remarks>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateAsRenderTarget">
      <MemberSignature Language="C#" Value="public static SkiaSharp.SKSurface CreateAsRenderTarget (SkiaSharp.GRContext context, SkiaSharp.GRBackendTextureDesc desc);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class SkiaSharp.SKSurface CreateAsRenderTarget(class SkiaSharp.GRContext context, valuetype SkiaSharp.GRBackendTextureDesc desc) cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.SKSurface.CreateAsRenderTarget(SkiaSharp.GRContext,SkiaSharp.GRBackendTextureDesc)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.57.0.0</AssemblyVersion>
        <AssemblyVersion>1.58.0.0</AssemblyVersion>
        <AssemblyVersion>1.59.0.0</AssemblyVersion>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>SkiaSharp.SKSurface</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="SkiaSharp.GRContext" />
        <Parameter Name="desc" Type="SkiaSharp.GRBackendTextureDesc" />
      </Parameters>
      <Docs>
        <param name="context">The graphics context.</param>
        <param name="desc">The description of the existing texture.</param>
        <summary>Wraps a pre-existing backend 3D API texture as a surface.</summary>
        <returns>Returns the new surface if it could be created and the configuration is supported, otherwise <see langword="null" />.</returns>
        <remarks>The <see cref="F:SkiaSharp.GRBackendTextureDescFlags.RenderTarget" /> flag must be set on <see cref="T:SkiaSharp.GRBackendTextureDesc" /> for this to succeed. The texture must remain valid for the lifetime of the surface.  </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateAsRenderTarget">
      <MemberSignature Language="C#" Value="public static SkiaSharp.SKSurface CreateAsRenderTarget (SkiaSharp.GRContext context, SkiaSharp.GRGlBackendTextureDesc desc);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class SkiaSharp.SKSurface CreateAsRenderTarget(class SkiaSharp.GRContext context, valuetype SkiaSharp.GRGlBackendTextureDesc desc) cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.SKSurface.CreateAsRenderTarget(SkiaSharp.GRContext,SkiaSharp.GRGlBackendTextureDesc)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>SkiaSharp.SKSurface</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="SkiaSharp.GRContext" />
        <Parameter Name="desc" Type="SkiaSharp.GRGlBackendTextureDesc" />
      </Parameters>
      <Docs>
        <param name="context">The graphics context.</param>
        <param name="desc">The description of the existing OpenGL texture.</param>
        <summary>Wraps a pre-existing backend OpenGL texture as a surface.</summary>
        <returns>Returns the new surface if it could be created and the configuration is supported, otherwise <see langword="null" />.</returns>
        <remarks>The <see cref="F:SkiaSharp.GRBackendTextureDescFlags.RenderTarget" /> flag must be set on <see cref="T:SkiaSharp.GRGlBackendTextureDesc" /> for this to succeed. The texture must remain valid for the lifetime of the surface.  </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateAsRenderTarget">
      <MemberSignature Language="C#" Value="public static SkiaSharp.SKSurface CreateAsRenderTarget (SkiaSharp.GRContext context, SkiaSharp.GRBackendTextureDesc desc, SkiaSharp.SKSurfaceProps props);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class SkiaSharp.SKSurface CreateAsRenderTarget(class SkiaSharp.GRContext context, valuetype SkiaSharp.GRBackendTextureDesc desc, valuetype SkiaSharp.SKSurfaceProps props) cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.SKSurface.CreateAsRenderTarget(SkiaSharp.GRContext,SkiaSharp.GRBackendTextureDesc,SkiaSharp.SKSurfaceProps)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.57.0.0</AssemblyVersion>
        <AssemblyVersion>1.58.0.0</AssemblyVersion>
        <AssemblyVersion>1.59.0.0</AssemblyVersion>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>SkiaSharp.SKSurface</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="SkiaSharp.GRContext" />
        <Parameter Name="desc" Type="SkiaSharp.GRBackendTextureDesc" />
        <Parameter Name="props" Type="SkiaSharp.SKSurfaceProps" />
      </Parameters>
      <Docs>
        <param name="context">The graphics context.</param>
        <param name="desc">The description of the existing texture.</param>
        <param name="props">The surface property configuration.</param>
        <summary>Wraps a pre-existing backend 3D API texture as a surface.</summary>
        <returns>Returns the new surface if it could be created and the configuration is supported, otherwise <see langword="null" />.</returns>
        <remarks>The <see cref="F:SkiaSharp.GRBackendTextureDescFlags.RenderTarget" /> flag must be set on <see cref="T:SkiaSharp.GRBackendTextureDesc" /> for this to succeed. The texture must remain valid for the lifetime of the surface.  </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateAsRenderTarget">
      <MemberSignature Language="C#" Value="public static SkiaSharp.SKSurface CreateAsRenderTarget (SkiaSharp.GRContext context, SkiaSharp.GRGlBackendTextureDesc desc, SkiaSharp.SKSurfaceProps props);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class SkiaSharp.SKSurface CreateAsRenderTarget(class SkiaSharp.GRContext context, valuetype SkiaSharp.GRGlBackendTextureDesc desc, valuetype SkiaSharp.SKSurfaceProps props) cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.SKSurface.CreateAsRenderTarget(SkiaSharp.GRContext,SkiaSharp.GRGlBackendTextureDesc,SkiaSharp.SKSurfaceProps)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>SkiaSharp.SKSurface</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="SkiaSharp.GRContext" />
        <Parameter Name="desc" Type="SkiaSharp.GRGlBackendTextureDesc" />
        <Parameter Name="props" Type="SkiaSharp.SKSurfaceProps" />
      </Parameters>
      <Docs>
        <param name="context">The graphics context.</param>
        <param name="desc">The description of the existing OpenGL texture.</param>
        <param name="props">The surface property configuration.</param>
        <summary>Wraps a pre-existing backend OpenGL texture as a surface.</summary>
        <returns>Returns the new surface if it could be created and the configuration is supported, otherwise <see langword="null" />.</returns>
        <remarks>The <see cref="F:SkiaSharp.GRBackendTextureDescFlags.RenderTarget" /> flag must be set on <see cref="T:SkiaSharp.GRGlBackendTextureDesc" /> for this to succeed. The texture must remain valid for the lifetime of the surface.  </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.SKSurface.Dispose(System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.57.0.0</AssemblyVersion>
        <AssemblyVersion>1.58.0.0</AssemblyVersion>
        <AssemblyVersion>1.59.0.0</AssemblyVersion>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Draw">
      <MemberSignature Language="C#" Value="public void Draw (SkiaSharp.SKCanvas canvas, float x, float y, SkiaSharp.SKPaint paint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Draw(class SkiaSharp.SKCanvas canvas, float32 x, float32 y, class SkiaSharp.SKPaint paint) cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.SKSurface.Draw(SkiaSharp.SKCanvas,System.Single,System.Single,SkiaSharp.SKPaint)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.57.0.0</AssemblyVersion>
        <AssemblyVersion>1.58.0.0</AssemblyVersion>
        <AssemblyVersion>1.59.0.0</AssemblyVersion>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="canvas" Type="SkiaSharp.SKCanvas" />
        <Parameter Name="x" Type="System.Single" />
        <Parameter Name="y" Type="System.Single" />
        <Parameter Name="paint" Type="SkiaSharp.SKPaint" />
      </Parameters>
      <Docs>
        <param name="canvas">The canvas to draw on.</param>
        <param name="x">The destination x-coordinate for the surface.</param>
        <param name="y">The destination y-coordinate for the surface.</param>
        <param name="paint">The paint to use when drawing the surface, or <see langword="null" />.</param>
        <summary>Draws the current surface on the specified canvas.</summary>
        <remarks>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PeekPixels">
      <MemberSignature Language="C#" Value="public SkiaSharp.SKPixmap PeekPixels ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class SkiaSharp.SKPixmap PeekPixels() cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.SKSurface.PeekPixels" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.57.0.0</AssemblyVersion>
        <AssemblyVersion>1.58.0.0</AssemblyVersion>
        <AssemblyVersion>1.59.0.0</AssemblyVersion>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>SkiaSharp.SKPixmap</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the pixels, if they are available.</summary>
        <returns>Returns the pixels, if they are available, otherwise <see langword="null" />.</returns>
        <remarks>If the pixels are available, then the surface is only valid until the surface changes in any way, in which case the pixmap becomes invalid.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PeekPixels">
      <MemberSignature Language="C#" Value="public bool PeekPixels (SkiaSharp.SKPixmap pixmap);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool PeekPixels(class SkiaSharp.SKPixmap pixmap) cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.SKSurface.PeekPixels(SkiaSharp.SKPixmap)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.57.0.0</AssemblyVersion>
        <AssemblyVersion>1.58.0.0</AssemblyVersion>
        <AssemblyVersion>1.59.0.0</AssemblyVersion>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pixmap" Type="SkiaSharp.SKPixmap" />
      </Parameters>
      <Docs>
        <param name="pixmap">The pixmap to receive the pixel information.</param>
        <summary>Returns the pixmap of the surface.</summary>
        <returns>Returns <see langword="true" /> on success, or <see langword="false" /> if the surface does not have access to pixel data.</returns>
        <remarks>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadPixels">
      <MemberSignature Language="C#" Value="public bool ReadPixels (SkiaSharp.SKImageInfo dstInfo, IntPtr dstPixels, int dstRowBytes, int srcX, int srcY);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ReadPixels(valuetype SkiaSharp.SKImageInfo dstInfo, native int dstPixels, int32 dstRowBytes, int32 srcX, int32 srcY) cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.SKSurface.ReadPixels(SkiaSharp.SKImageInfo,System.IntPtr,System.Int32,System.Int32,System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.57.0.0</AssemblyVersion>
        <AssemblyVersion>1.58.0.0</AssemblyVersion>
        <AssemblyVersion>1.59.0.0</AssemblyVersion>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dstInfo" Type="SkiaSharp.SKImageInfo" />
        <Parameter Name="dstPixels" Type="System.IntPtr" />
        <Parameter Name="dstRowBytes" Type="System.Int32" />
        <Parameter Name="srcX" Type="System.Int32" />
        <Parameter Name="srcY" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="dstInfo">The image information describing the destination pixel buffer.</param>
        <param name="dstPixels">The pixel buffer to read the pixel data into.</param>
        <param name="dstRowBytes">The number of bytes in each row of in the destination buffer.</param>
        <param name="srcX">The source x-coordinate to start reading from.</param>
        <param name="srcY">The source y-coordinate to start reading from.</param>
        <summary>Copies the pixels from the surface into the specified buffer.</summary>
        <returns>Returns <see langword="true" /> if the pixels were read, or <see langword="false" /> if there was an error.</returns>
        <remarks>This method may return <see langword="false" /> if the source rectangle [<paramref name="srcX" />, <paramref name="srcY" />, dstInfo.Width, dstInfo.Height] does not intersect the surface, or if the color type/alpha type could not be converted to the destination types.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Snapshot">
      <MemberSignature Language="C#" Value="public SkiaSharp.SKImage Snapshot ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class SkiaSharp.SKImage Snapshot() cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.SKSurface.Snapshot" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.57.0.0</AssemblyVersion>
        <AssemblyVersion>1.58.0.0</AssemblyVersion>
        <AssemblyVersion>1.59.0.0</AssemblyVersion>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>SkiaSharp.SKImage</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Takes a snapshot of the surface and returns it as an image.</summary>
        <returns>
          <para>An <see cref="T:SkiaSharp.SKImage" /> that contains a snapshot of the current image.</para>
          <para></para>
        </returns>
        <remarks>
          <para>You can use this method to take a snapshot of the image</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SurfaceProps">
      <MemberSignature Language="C#" Value="public SkiaSharp.SKSurfaceProps SurfaceProps { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype SkiaSharp.SKSurfaceProps SurfaceProps" />
      <MemberSignature Language="DocId" Value="P:SkiaSharp.SKSurface.SurfaceProps" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp</AssemblyName>
        <AssemblyVersion>1.57.0.0</AssemblyVersion>
        <AssemblyVersion>1.58.0.0</AssemblyVersion>
        <AssemblyVersion>1.59.0.0</AssemblyVersion>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>SkiaSharp.SKSurfaceProps</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the surface property configuration.</summary>
        <value>
          <para></para>
        </value>
        <remarks>
          <para></para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
