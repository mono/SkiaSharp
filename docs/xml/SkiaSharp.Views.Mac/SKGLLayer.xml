<Type Name="SKGLLayer" FullName="SkiaSharp.Views.Mac.SKGLLayer">
  <TypeSignature Language="C#" Value="public class SKGLLayer : CoreAnimation.CAOpenGLLayer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SKGLLayer extends CoreAnimation.CAOpenGLLayer" />
  <TypeSignature Language="DocId" Value="T:SkiaSharp.Views.Mac.SKGLLayer" />
  <AssemblyInfo>
    <AssemblyName>SkiaSharp.Views.Mac</AssemblyName>
    <AssemblyVersion>1.57.0.0</AssemblyVersion>
    <AssemblyVersion>1.58.0.0</AssemblyVersion>
    <AssemblyVersion>1.59.0.0</AssemblyVersion>
    <AssemblyVersion>1.60.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>CoreAnimation.CAOpenGLLayer</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>A CoreAnimation OpenGL layer that can be drawn on using SkiaSharp drawing commands.</summary>
    <remarks>
      <para></para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SKGLLayer ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.Mac.SKGLLayer.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp.Views.Mac</AssemblyName>
        <AssemblyVersion>1.57.0.0</AssemblyVersion>
        <AssemblyVersion>1.58.0.0</AssemblyVersion>
        <AssemblyVersion>1.59.0.0</AssemblyVersion>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Default constructor that initializes a new instance of <see cref="T:SkiaSharp.Views.Mac.SKGLLayer" />.</summary>
        <remarks>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanvasSize">
      <MemberSignature Language="C#" Value="public SkiaSharp.SKSize CanvasSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype SkiaSharp.SKSize CanvasSize" />
      <MemberSignature Language="DocId" Value="P:SkiaSharp.Views.Mac.SKGLLayer.CanvasSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp.Views.Mac</AssemblyName>
        <AssemblyVersion>1.57.0.0</AssemblyVersion>
        <AssemblyVersion>1.58.0.0</AssemblyVersion>
        <AssemblyVersion>1.59.0.0</AssemblyVersion>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>SkiaSharp.SKSize</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the current canvas size.</summary>
        <value></value>
        <remarks>The canvas size may be different to the view size as a result of the current device's pixel density.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DrawInCGLContext">
      <MemberSignature Language="C#" Value="public override void DrawInCGLContext (OpenGL.CGLContext glContext, OpenGL.CGLPixelFormat pixelFormat, double timeInterval, ref CoreVideo.CVTimeStamp timeStamp);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void DrawInCGLContext(class OpenGL.CGLContext glContext, class OpenGL.CGLPixelFormat pixelFormat, float64 timeInterval, valuetype CoreVideo.CVTimeStamp&amp; timeStamp) cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.Mac.SKGLLayer.DrawInCGLContext(OpenGL.CGLContext,OpenGL.CGLPixelFormat,System.Double,CoreVideo.CVTimeStamp@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp.Views.Mac</AssemblyName>
        <AssemblyVersion>1.57.0.0</AssemblyVersion>
        <AssemblyVersion>1.58.0.0</AssemblyVersion>
        <AssemblyVersion>1.59.0.0</AssemblyVersion>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="glContext" Type="OpenGL.CGLContext" />
        <Parameter Name="pixelFormat" Type="OpenGL.CGLPixelFormat" />
        <Parameter Name="timeInterval" Type="System.Double" />
        <Parameter Name="timeStamp" Type="CoreVideo.CVTimeStamp&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="glContext">The rendering context in to which the OpenGL content should be rendered.</param>
        <param name="pixelFormat">The pixel format used when the context was created.</param>
        <param name="timeInterval">The current layer time.</param>
        <param name="timeStamp">The display timestamp associated with the time interval. Can be null.</param>
        <summary>Draws the OpenGL content for the specified time.</summary>
        <remarks>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DrawInSurface">
      <MemberSignature Language="C#" Value="public virtual void DrawInSurface (SkiaSharp.SKSurface surface, SkiaSharp.GRBackendRenderTargetDesc renderTarget);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DrawInSurface(class SkiaSharp.SKSurface surface, valuetype SkiaSharp.GRBackendRenderTargetDesc renderTarget) cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.Mac.SKGLLayer.DrawInSurface(SkiaSharp.SKSurface,SkiaSharp.GRBackendRenderTargetDesc)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp.Views.Mac</AssemblyName>
        <AssemblyVersion>1.57.0.0</AssemblyVersion>
        <AssemblyVersion>1.58.0.0</AssemblyVersion>
        <AssemblyVersion>1.59.0.0</AssemblyVersion>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="surface" Type="SkiaSharp.SKSurface" />
        <Parameter Name="renderTarget" Type="SkiaSharp.GRBackendRenderTargetDesc" />
      </Parameters>
      <Docs>
        <param name="surface">The surface to draw on.</param>
        <param name="renderTarget">The render target that is currently being drawn.</param>
        <summary>Implement this to draw on the canvas.</summary>
        <remarks>
          <para>There are two ways to draw on this surface: by overriding the <see cref="M:SkiaSharp.Views.Mac.SKGLLayer.DrawInSurface" /> method, or by attaching a handler to the <see cref="E:SkiaSharp.Views.Mac.SKGLLayer.PaintSurface" /> event. If the method is overriden, then the base must be called.</para>
          <para></para>
          <example>
            <code lang="C#"><![CDATA[public override void DrawInSurface (SKSurface surface, SKBackendRenderTargetDesc renderTarget)
{
    // call the base method
    base.DrawInSurface (surface, renderTarget);

    var surfaceWidth = renderTarget.Width;
    var surfaceHeight = renderTarget.Height;

    var canvas = surface.Canvas;
    // draw on the canvas
    canvas.Flush ();
}]]></code>
          </example>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GRContext">
      <MemberSignature Language="C#" Value="public SkiaSharp.GRContext GRContext { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class SkiaSharp.GRContext GRContext" />
      <MemberSignature Language="DocId" Value="P:SkiaSharp.Views.Mac.SKGLLayer.GRContext" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp.Views.Mac</AssemblyName>
        <AssemblyVersion>1.59.0.0</AssemblyVersion>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>SkiaSharp.GRContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the current GPU context.</summary>
        <value>
          <para />
        </value>
        <remarks>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PaintSurface">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;SkiaSharp.Views.Mac.SKPaintGLSurfaceEventArgs&gt; PaintSurface;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class SkiaSharp.Views.Mac.SKPaintGLSurfaceEventArgs&gt; PaintSurface" />
      <MemberSignature Language="DocId" Value="E:SkiaSharp.Views.Mac.SKGLLayer.PaintSurface" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp.Views.Mac</AssemblyName>
        <AssemblyVersion>1.57.0.0</AssemblyVersion>
        <AssemblyVersion>1.58.0.0</AssemblyVersion>
        <AssemblyVersion>1.59.0.0</AssemblyVersion>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;SkiaSharp.Views.Mac.SKPaintGLSurfaceEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Occurs when the the canvas needs to be re-drawn.</summary>
        <remarks>
          <para>There are two ways to draw on this surface: by overriding the <see cref="M:SkiaSharp.Views.Mac.SKGLLayer.DrawInSurface" /> method, or by attaching a handler to the <see cref="E:SkiaSharp.Views.Mac.SKGLLayer.PaintSurface" /> event.</para>
          <para></para>
          <example>
            <code lang="C#"><![CDATA[SKGLLayer myLayer = ...;

myLayer.PaintSurface += (sender, e) => {
    var surface = e.Surface;
    var surfaceWidth = e.Info.Width;
    var surfaceHeight = e.Info.Height;

    var canvas = surface.Canvas;
    // draw on the canvas
    canvas.Flush ();
};]]></code>
          </example>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Release">
      <MemberSignature Language="C#" Value="public override void Release (OpenGL.CGLContext glContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Release(class OpenGL.CGLContext glContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:SkiaSharp.Views.Mac.SKGLLayer.Release(OpenGL.CGLContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp.Views.Mac</AssemblyName>
        <AssemblyVersion>1.57.0.0</AssemblyVersion>
        <AssemblyVersion>1.58.0.0</AssemblyVersion>
        <AssemblyVersion>1.59.0.0</AssemblyVersion>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="glContext" Type="OpenGL.CGLContext" />
      </Parameters>
      <Docs>
        <param name="glContext">The rendering context to release.</param>
        <summary>Releases the specified rendering context.</summary>
        <remarks>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SKDelegate">
      <MemberSignature Language="C#" Value="public SkiaSharp.Views.Mac.ISKGLLayerDelegate SKDelegate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class SkiaSharp.Views.Mac.ISKGLLayerDelegate SKDelegate" />
      <MemberSignature Language="DocId" Value="P:SkiaSharp.Views.Mac.SKGLLayer.SKDelegate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>SkiaSharp.Views.Mac</AssemblyName>
        <AssemblyVersion>1.57.0.0</AssemblyVersion>
        <AssemblyVersion>1.58.0.0</AssemblyVersion>
        <AssemblyVersion>1.59.0.0</AssemblyVersion>
        <AssemblyVersion>1.60.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>SkiaSharp.Views.Mac.ISKGLLayerDelegate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the layer’s delegate object.</summary>
        <value>
          <para></para>
        </value>
        <remarks>
          <para></para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
