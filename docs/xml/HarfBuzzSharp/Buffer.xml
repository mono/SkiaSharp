<Type Name="Buffer" FullName="HarfBuzzSharp.Buffer">
  <TypeSignature Language="C#" Value="public class Buffer : HarfBuzzSharp.NativeObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Buffer extends HarfBuzzSharp.NativeObject" />
  <TypeSignature Language="DocId" Value="T:HarfBuzzSharp.Buffer" />
  <AssemblyInfo>
    <AssemblyName>HarfBuzzSharp</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>HarfBuzzSharp.NativeObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Represents a text buffer in memory.</summary>
    <remarks>
      <para></para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Buffer ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:HarfBuzzSharp.Buffer.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>HarfBuzzSharp</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Creates a new <see cref="M:HarfBuzzSharp.Buffer..ctor" /> with default values.</summary>
        <remarks>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddUtf8">
      <MemberSignature Language="C#" Value="public void AddUtf8 (byte[] bytes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddUtf8(unsigned int8[] bytes) cil managed" />
      <MemberSignature Language="DocId" Value="M:HarfBuzzSharp.Buffer.AddUtf8(System.Byte[])" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>HarfBuzzSharp</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="bytes">The array of UTF-8 character bytes to append.</param>
        <summary>Appends the specfied text bytes to the buffer.</summary>
        <remarks>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddUtf8">
      <MemberSignature Language="C#" Value="public void AddUtf8 (string utf8text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddUtf8(string utf8text) cil managed" />
      <MemberSignature Language="DocId" Value="M:HarfBuzzSharp.Buffer.AddUtf8(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>HarfBuzzSharp</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="utf8text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="utf8text">The array of UTF-8 characters to append.</param>
        <summary>Appends the specfied text to the buffer.</summary>
        <remarks>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearContents">
      <MemberSignature Language="C#" Value="public void ClearContents ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearContents() cil managed" />
      <MemberSignature Language="DocId" Value="M:HarfBuzzSharp.Buffer.ClearContents" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>HarfBuzzSharp</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Clears the buffer’s contents.</summary>
        <remarks>This operation preserves the Unicode functions and replacement code point.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Direction">
      <MemberSignature Language="C#" Value="public HarfBuzzSharp.Direction Direction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype HarfBuzzSharp.Direction Direction" />
      <MemberSignature Language="DocId" Value="P:HarfBuzzSharp.Buffer.Direction" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>HarfBuzzSharp</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>HarfBuzzSharp.Direction</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Get or sets the text flow direction of the buffer.</summary>
        <value>
          <para></para>
        </value>
        <remarks>No shaping can happen without setting the direction, or invoking <see cref="M:HarfBuzzSharp.Buffer.GuessSegmentProperties" />.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:HarfBuzzSharp.Buffer.Dispose(System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>HarfBuzzSharp</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GlyphInfos">
      <MemberSignature Language="C#" Value="public HarfBuzzSharp.GlyphInfo[] GlyphInfos { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype HarfBuzzSharp.GlyphInfo[] GlyphInfos" />
      <MemberSignature Language="DocId" Value="P:HarfBuzzSharp.Buffer.GlyphInfos" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>HarfBuzzSharp</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>HarfBuzzSharp.GlyphInfo[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the buffer glyph information array.</summary>
        <value>
          <para></para>
        </value>
        <remarks>The information is valid as long as buffer contents are not modified.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GlyphPositions">
      <MemberSignature Language="C#" Value="public HarfBuzzSharp.GlyphPosition[] GlyphPositions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype HarfBuzzSharp.GlyphPosition[] GlyphPositions" />
      <MemberSignature Language="DocId" Value="P:HarfBuzzSharp.Buffer.GlyphPositions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>HarfBuzzSharp</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>HarfBuzzSharp.GlyphPosition[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the buffer glyph position array.</summary>
        <value>
          <para></para>
        </value>
        <remarks>The positions are valid as long as buffer contents are not modified.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GuessSegmentProperties">
      <MemberSignature Language="C#" Value="public void GuessSegmentProperties ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void GuessSegmentProperties() cil managed" />
      <MemberSignature Language="DocId" Value="M:HarfBuzzSharp.Buffer.GuessSegmentProperties" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>HarfBuzzSharp</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Sets the unset buffer segment properties based on the buffer's Unicode contents.</summary>
        <remarks>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Length">
      <MemberSignature Language="C#" Value="public uint Length { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int32 Length" />
      <MemberSignature Language="DocId" Value="P:HarfBuzzSharp.Buffer.Length" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>HarfBuzzSharp</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the size of the buffer.</summary>
        <value>
          <para></para>
        </value>
        <remarks>If the new length is greater that the current length, more memory will be allocated. If the new length is less than the current length, the extra items will be cleared.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
