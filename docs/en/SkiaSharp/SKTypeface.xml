<Type Name="SKTypeface" FullName="SkiaSharp.SKTypeface">
  <TypeSignature Language="C#" Value="public class SKTypeface : SkiaSharp.SKObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SKTypeface extends SkiaSharp.SKObject" />
  <AssemblyInfo>
    <AssemblyName>SkiaSharp</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.49.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>SkiaSharp.SKObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>The SkTypeface class specifies the typeface and intrinsic style of a font.</summary>
    <remarks>
      <para>The SkTypeface class specifies the typeface and intrinsic style of a font.</para>
      <para>This is used in the paint, along with optionally algorithmic settings like textSize, textSkewX, textScaleX, kFakeBoldText_Mask, to specifyhow text appears when drawn (and measured).</para>
      <para>
      </para>
      <para>Typeface objects are immutable, and so they can be shared between threads.</para>
      <para>
      </para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="CharsToGlyphs">
      <MemberSignature Language="C#" Value="public int CharsToGlyphs (string chars, out ushort[] glyphs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 CharsToGlyphs(string chars, unsigned int16[] glyphs) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.49.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chars" Type="System.String" />
        <Parameter Name="glyphs" Type="System.UInt16[]&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="chars">To be added.</param>
        <param name="glyphs">To be added.</param>
        <summary>
          <para>Given a string, optionally return their corresponding glyph IDs.</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CharsToGlyphs">
      <MemberSignature Language="C#" Value="public int CharsToGlyphs (IntPtr str, int strlen, SkiaSharp.SKEncoding encoding, out ushort[] glyphs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 CharsToGlyphs(native int str, int32 strlen, valuetype SkiaSharp.SKEncoding encoding, unsigned int16[] glyphs) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.49.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.IntPtr" />
        <Parameter Name="strlen" Type="System.Int32" />
        <Parameter Name="encoding" Type="SkiaSharp.SKEncoding" />
        <Parameter Name="glyphs" Type="System.UInt16[]&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="str">To be added.</param>
        <param name="strlen">To be added.</param>
        <param name="encoding">To be added.</param>
        <param name="glyphs">To be added.</param>
        <summary>
          <para>Given a buffer containing character codes, of the specified encoding, optionally return their corresponding glyph IDs.</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CountGlyphs">
      <MemberSignature Language="C#" Value="public int CountGlyphs (string str);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 CountGlyphs(string str) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.49.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="str">To be added.</param>
        <summary>Returns the number of glyphs on the string.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CountGlyphs">
      <MemberSignature Language="C#" Value="public int CountGlyphs (IntPtr str, int strLen, SkiaSharp.SKEncoding encoding);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 CountGlyphs(native int str, int32 strLen, valuetype SkiaSharp.SKEncoding encoding) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.49.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.IntPtr" />
        <Parameter Name="strLen" Type="System.Int32" />
        <Parameter Name="encoding" Type="SkiaSharp.SKEncoding" />
      </Parameters>
      <Docs>
        <param name="str">To be added.</param>
        <param name="strLen">To be added.</param>
        <param name="encoding">To be added.</param>
        <summary>Returns the number of glyphs on the specified buffer with the specified length and encoding.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.49.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FromFamilyName">
      <MemberSignature Language="C#" Value="public static SkiaSharp.SKTypeface FromFamilyName (string familyName, SkiaSharp.SKTypefaceStyle style = SkiaSharp.SKTypefaceStyle.Normal);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class SkiaSharp.SKTypeface FromFamilyName(string familyName, valuetype SkiaSharp.SKTypefaceStyle style) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.49.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>SkiaSharp.SKTypeface</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="familyName" Type="System.String" />
        <Parameter Name="style" Type="SkiaSharp.SKTypefaceStyle" />
      </Parameters>
      <Docs>
        <param name="familyName">May be <paramref name="null" />. The name of the font family.</param>
        <param name="style">The style (normal, bold, italic) of the typeface.</param>
        <summary>
          <para>Return a new reference to the typeface that most closely matches the requested family name and style. </para>
        </summary>
        <returns>Reference to the closest-matching typeface. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FromFile">
      <MemberSignature Language="C#" Value="public static SkiaSharp.SKTypeface FromFile (string path, int index = 0);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class SkiaSharp.SKTypeface FromFile(string path, int32 index) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.49.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>SkiaSharp.SKTypeface</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="path">path of the file.</param>
        <param name="index">The font face index.</param>
        <summary>Return a new typeface given a file. </summary>
        <returns>
          <para>
          </para>
        </returns>
        <remarks>
          <para>If the file does not exist, or is not a valid font file, returns <paramref name="null" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FromStream">
      <MemberSignature Language="C#" Value="public static SkiaSharp.SKTypeface FromStream (SkiaSharp.SKStreamAsset stream, int index = 0);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class SkiaSharp.SKTypeface FromStream(class SkiaSharp.SKStreamAsset stream, int32 index) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.49.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>SkiaSharp.SKTypeface</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="SkiaSharp.SKStreamAsset" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="stream">Input stream</param>
        <param name="index">the font face index.</param>
        <summary>Return a new typeface given a stream. </summary>
        <returns>If the stream is not a valid font file, returns <paramref name="null" />. </returns>
        <remarks>
          <para>
          </para>
          <example>
            <code lang="C#"><![CDATA[using (var stream = new SKFileStream (“myfont.ttf"))
using (var tf = SKTypeface.FromStream (stream)) {
    paint.Color = XamDkBlue;
    paint.TextSize = 60;
    paint.Typeface = tf;

    canvas.DrawText (text, 50, 100, paint);
}
]]></code>
          </example>.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FromTypeface">
      <MemberSignature Language="C#" Value="public static SkiaSharp.SKTypeface FromTypeface (SkiaSharp.SKTypeface typeface, SkiaSharp.SKTypefaceStyle style = SkiaSharp.SKTypefaceStyle.Normal);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class SkiaSharp.SKTypeface FromTypeface(class SkiaSharp.SKTypeface typeface, valuetype SkiaSharp.SKTypefaceStyle style) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.49.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>SkiaSharp.SKTypeface</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeface" Type="SkiaSharp.SKTypeface" />
        <Parameter Name="style" Type="SkiaSharp.SKTypefaceStyle" />
      </Parameters>
      <Docs>
        <param name="typeface">May be <paramref name="null" />. The name of the existing type face.</param>
        <param name="style">The style (normal, bold, italic) of the type face.</param>
        <summary>
          <para>Return a new reference to the typeface that most closely matches the requested typeface and specified Style</para>
        </summary>
        <returns>reference to the closest-matching typeface. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
