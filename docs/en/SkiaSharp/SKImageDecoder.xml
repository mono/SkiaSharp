<Type Name="SKImageDecoder" FullName="SkiaSharp.SKImageDecoder">
  <TypeSignature Language="C#" Value="public class SKImageDecoder : SkiaSharp.SKObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SKImageDecoder extends SkiaSharp.SKObject" />
  <AssemblyInfo>
    <AssemblyName>SkiaSharp</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.49.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>SkiaSharp.SKObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Base class for decoding compressed images into a SkBitmap.</summary>
    <remarks>
      <para />
      <example>
        <code lang="C#"><![CDATA[public static void BitmapDecoder(SKCanvas canvas, int width, int height)
{
    canvas.Clear(SKColors.White);

    using (var stream = new SKFileStream("image.png"))
    using (var decoder = new SKImageDecoder(stream))
    using (var paint = new SKPaint())
    using (var tf = SKTypeface.FromFamilyName("Arial")) {
        paint.IsAntialias = true;
        paint.TextSize = 14;
        paint.Typeface = tf;
        paint.Color = SKColors.Black;

        // read / set decoder settings
        decoder.DitherImage = true;
        decoder.PreferQualityOverSpeed = true;
        decoder.SampleSize = 2;

        // decode the image
        using (var bitmap = new SKBitmap()) {
            var result = decoder.Decode(stream, bitmap);
            if (result != SKImageDecoderResult.Failure) {
                var info = bitmap.Info;
                var x = 25;
                var y = 25;

                canvas.DrawBitmap(bitmap, x, y);
                x += info.Width + 25;
                y += 14;

                canvas.DrawText(string.Format("Result: {0}", result), x, y, paint);
                y += 20;

                canvas.DrawText(string.Format("Size: {0}px x {1}px", bitmap.Width, bitmap.Height), x, y, paint);
                y += 20;

                canvas.DrawText(string.Format("Pixels: {0} @ {1}b/px", bitmap.Pixels.Length, bitmap.BytesPerPixel), x, y, paint);
            }
        }
    }
}]]></code>
      </example>.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SKImageDecoder (SkiaSharp.SKStreamRewindable stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class SkiaSharp.SKStreamRewindable stream) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.49.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="stream" Type="SkiaSharp.SKStreamRewindable" />
      </Parameters>
      <Docs>
        <param name="stream">To be added.</param>
        <summary>Constructs an SKImageDecoder from a stream.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CancelDecode">
      <MemberSignature Language="C#" Value="public void CancelDecode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CancelDecode() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.49.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Requests that the decoding be canceled.</summary>
        <remarks>
          <para>Decoding is synchronous, but for long decodes, a different thread can call this method safely. This sets a state that the decoders will periodically check, and if they see it changed to cancel, they will cancel. This will result in Decode() returning <paramref name="false" />. However, there is no guarantee that the decoder will see the state change in time, so it is possible that CancelDecode() will be called, but will be ignored and Decode() will return <paramref name="true" /> (assuming no other problems were encountered).</para>
          <para />
          <para>This state is automatically reset at the beginning of a Decode operation.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Decode">
      <MemberSignature Language="C#" Value="public SkiaSharp.SKImageDecoderResult Decode (SkiaSharp.SKStream stream, SkiaSharp.SKBitmap bitmap, SkiaSharp.SKColorType pref = SkiaSharp.SKColorType.Unknown, SkiaSharp.SKImageDecoderMode mode = SkiaSharp.SKImageDecoderMode.DecodePixels);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype SkiaSharp.SKImageDecoderResult Decode(class SkiaSharp.SKStream stream, class SkiaSharp.SKBitmap bitmap, valuetype SkiaSharp.SKColorType pref, valuetype SkiaSharp.SKImageDecoderMode mode) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.49.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>SkiaSharp.SKImageDecoderResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="SkiaSharp.SKStream" />
        <Parameter Name="bitmap" Type="SkiaSharp.SKBitmap" />
        <Parameter Name="pref" Type="SkiaSharp.SKColorType" />
        <Parameter Name="mode" Type="SkiaSharp.SKImageDecoderMode" />
      </Parameters>
      <Docs>
        <param name="stream">Stream to decode from.</param>
        <param name="bitmap">Target bitmap</param>
        <param name="pref">Give preference to this color type</param>
        <param name="mode">Decoding mode</param>
        <summary>Given a stream, decode it into the specified bitmap.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DecodeFile">
      <MemberSignature Language="C#" Value="public static bool DecodeFile (string filename, SkiaSharp.SKBitmap bitmap, SkiaSharp.SKColorType pref = SkiaSharp.SKColorType.Unknown, SkiaSharp.SKImageDecoderMode mode = SkiaSharp.SKImageDecoderMode.DecodePixels);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool DecodeFile(string filename, class SkiaSharp.SKBitmap bitmap, valuetype SkiaSharp.SKColorType pref, valuetype SkiaSharp.SKImageDecoderMode mode) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.49.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filename" Type="System.String" />
        <Parameter Name="bitmap" Type="SkiaSharp.SKBitmap" />
        <Parameter Name="pref" Type="SkiaSharp.SKColorType" />
        <Parameter Name="mode" Type="SkiaSharp.SKImageDecoderMode" />
      </Parameters>
      <Docs>
        <param name="filename">Filename to decode</param>
        <param name="bitmap">Target bitmap</param>
        <param name="pref">Give preference to this color type</param>
        <param name="mode">Decoding mode</param>
        <summary>
          <para>Decode the image stored in the specified file, and store the result in the provided bitmap.</para>
        </summary>
        <returns>
          <paramref name="true" /> on success, <paramref name="false" /> on failure.</returns>
        <remarks>
          <para>
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DecodeFile">
      <MemberSignature Language="C#" Value="public static bool DecodeFile (string filename, SkiaSharp.SKBitmap bitmap, SkiaSharp.SKColorType pref, SkiaSharp.SKImageDecoderMode mode, ref SkiaSharp.SKImageDecoderFormat format);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool DecodeFile(string filename, class SkiaSharp.SKBitmap bitmap, valuetype SkiaSharp.SKColorType pref, valuetype SkiaSharp.SKImageDecoderMode mode, valuetype SkiaSharp.SKImageDecoderFormat format) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.49.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filename" Type="System.String" />
        <Parameter Name="bitmap" Type="SkiaSharp.SKBitmap" />
        <Parameter Name="pref" Type="SkiaSharp.SKColorType" />
        <Parameter Name="mode" Type="SkiaSharp.SKImageDecoderMode" />
        <Parameter Name="format" Type="SkiaSharp.SKImageDecoderFormat&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="filename">Filename to decode</param>
        <param name="bitmap">Target bitmap</param>
        <param name="pref">Give preference to this color type</param>
        <param name="mode">Decoding mode</param>
        <param name="format">On success, this will contain the format of the decoded file.</param>
        <summary>Decode the image stored in the specified file, and store the result in the provided bitmap.</summary>
        <returns>
          <paramref name="true" /> on success, <paramref name="false" /> on failure.</returns>
        <remarks>
          <para>
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DecodeFileBounds">
      <MemberSignature Language="C#" Value="public static bool DecodeFileBounds (string filename, out SkiaSharp.SKImageInfo info, SkiaSharp.SKColorType pref = SkiaSharp.SKColorType.Unknown);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool DecodeFileBounds(string filename, valuetype SkiaSharp.SKImageInfo info, valuetype SkiaSharp.SKColorType pref) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.49.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filename" Type="System.String" />
        <Parameter Name="info" Type="SkiaSharp.SKImageInfo&amp;" RefType="out" />
        <Parameter Name="pref" Type="SkiaSharp.SKColorType" />
      </Parameters>
      <Docs>
        <param name="filename">Filename to decode</param>
        <param name="info">On success, the boundary information about the image will be stored here.</param>
        <param name="pref">Give preference to this color type</param>
        <summary>Parses a file to extract the boundary information.</summary>
        <returns>
          <paramref name="true" /> on success and the <paramref name="info" /> field set with the image boundary information, <paramref name="false" /> on failure.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DecodeFileBounds">
      <MemberSignature Language="C#" Value="public static bool DecodeFileBounds (string filename, out SkiaSharp.SKImageInfo info, SkiaSharp.SKColorType pref, ref SkiaSharp.SKImageDecoderFormat format);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool DecodeFileBounds(string filename, valuetype SkiaSharp.SKImageInfo info, valuetype SkiaSharp.SKColorType pref, valuetype SkiaSharp.SKImageDecoderFormat format) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.49.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filename" Type="System.String" />
        <Parameter Name="info" Type="SkiaSharp.SKImageInfo&amp;" RefType="out" />
        <Parameter Name="pref" Type="SkiaSharp.SKColorType" />
        <Parameter Name="format" Type="SkiaSharp.SKImageDecoderFormat&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="filename">Filename to decode</param>
        <param name="info">On success, the boundary information about the image will be stored here.</param>
        <param name="pref">Give preference to this color type</param>
        <param name="format">On success, this will contain the format of the decoded file.</param>
        <summary>Parses a file to extract the boundary information and the detected file format.</summary>
        <returns>
          <paramref name="true" /> on success and the <paramref name="info" /> field set with the image boundary information, <paramref name="false" /> on failure.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DecodeMemory">
      <MemberSignature Language="C#" Value="public static bool DecodeMemory (byte[] buffer, SkiaSharp.SKBitmap bitmap, SkiaSharp.SKColorType pref = SkiaSharp.SKColorType.Unknown, SkiaSharp.SKImageDecoderMode mode = SkiaSharp.SKImageDecoderMode.DecodePixels);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool DecodeMemory(unsigned int8[] buffer, class SkiaSharp.SKBitmap bitmap, valuetype SkiaSharp.SKColorType pref, valuetype SkiaSharp.SKImageDecoderMode mode) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.49.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="bitmap" Type="SkiaSharp.SKBitmap" />
        <Parameter Name="pref" Type="SkiaSharp.SKColorType" />
        <Parameter Name="mode" Type="SkiaSharp.SKImageDecoderMode" />
      </Parameters>
      <Docs>
        <param name="buffer">Byte array containing the image.</param>
        <param name="bitmap">Target bitmap</param>
        <param name="pref">Give preference to this color type</param>
        <param name="mode">Decoding mode</param>
        <summary>Decodes a image stored on a byte buffer.</summary>
        <returns>
          <paramref name="true" /> on success, <paramref name="false" /> on failure.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DecodeMemory">
      <MemberSignature Language="C#" Value="public static bool DecodeMemory (byte[] buffer, SkiaSharp.SKBitmap bitmap, SkiaSharp.SKColorType pref, SkiaSharp.SKImageDecoderMode mode, ref SkiaSharp.SKImageDecoderFormat format);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool DecodeMemory(unsigned int8[] buffer, class SkiaSharp.SKBitmap bitmap, valuetype SkiaSharp.SKColorType pref, valuetype SkiaSharp.SKImageDecoderMode mode, valuetype SkiaSharp.SKImageDecoderFormat format) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.49.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="bitmap" Type="SkiaSharp.SKBitmap" />
        <Parameter Name="pref" Type="SkiaSharp.SKColorType" />
        <Parameter Name="mode" Type="SkiaSharp.SKImageDecoderMode" />
        <Parameter Name="format" Type="SkiaSharp.SKImageDecoderFormat&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="buffer">Byte array containing the image.</param>
        <param name="bitmap">Target bitmap</param>
        <param name="pref">Give preference to this color type</param>
        <param name="mode">Decoding mode</param>
        <param name="format">On success, this will contain the format of the decoded file.</param>
        <summary>Decodes a image stored on a byte buffer.</summary>
        <returns>
          <paramref name="true" /> on success, <paramref name="false" /> on failure.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DecodeMemoryBounds">
      <MemberSignature Language="C#" Value="public static bool DecodeMemoryBounds (byte[] buffer, out SkiaSharp.SKImageInfo info, SkiaSharp.SKColorType pref = SkiaSharp.SKColorType.Unknown);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool DecodeMemoryBounds(unsigned int8[] buffer, valuetype SkiaSharp.SKImageInfo info, valuetype SkiaSharp.SKColorType pref) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.49.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="info" Type="SkiaSharp.SKImageInfo&amp;" RefType="out" />
        <Parameter Name="pref" Type="SkiaSharp.SKColorType" />
      </Parameters>
      <Docs>
        <param name="buffer">Byte array containing the image.</param>
        <param name="info">On success, the boundary information about the image will be stored here.</param>
        <param name="pref">Give preference to this color type</param>
        <summary>Parses a byte array to extract the image boundary information.</summary>
        <returns>
          <paramref name="true" /> on success and the <paramref name="info" /> field set with the image boundary information, <paramref name="false" /> on failure.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DecodeMemoryBounds">
      <MemberSignature Language="C#" Value="public static bool DecodeMemoryBounds (byte[] buffer, out SkiaSharp.SKImageInfo info, SkiaSharp.SKColorType pref, ref SkiaSharp.SKImageDecoderFormat format);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool DecodeMemoryBounds(unsigned int8[] buffer, valuetype SkiaSharp.SKImageInfo info, valuetype SkiaSharp.SKColorType pref, valuetype SkiaSharp.SKImageDecoderFormat format) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.49.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="info" Type="SkiaSharp.SKImageInfo&amp;" RefType="out" />
        <Parameter Name="pref" Type="SkiaSharp.SKColorType" />
        <Parameter Name="format" Type="SkiaSharp.SKImageDecoderFormat&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="buffer">Byte array containing the image.</param>
        <param name="info">On success, the boundary information about the image will be stored here.</param>
        <param name="pref">Give preference to this color type</param>
        <param name="format">On success, this will contain the format of the decoded file.</param>
        <summary>Parses a byte array to extract the image boundary information and the detected file format.</summary>
        <returns>
          <paramref name="true" /> on success and the <paramref name="info" /> field set with the image boundary information, <paramref name="false" /> on failure.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DecodeStream">
      <MemberSignature Language="C#" Value="public static bool DecodeStream (SkiaSharp.SKStreamRewindable stream, SkiaSharp.SKBitmap bitmap, SkiaSharp.SKColorType pref = SkiaSharp.SKColorType.Unknown, SkiaSharp.SKImageDecoderMode mode = SkiaSharp.SKImageDecoderMode.DecodePixels);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool DecodeStream(class SkiaSharp.SKStreamRewindable stream, class SkiaSharp.SKBitmap bitmap, valuetype SkiaSharp.SKColorType pref, valuetype SkiaSharp.SKImageDecoderMode mode) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.49.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="SkiaSharp.SKStreamRewindable" />
        <Parameter Name="bitmap" Type="SkiaSharp.SKBitmap" />
        <Parameter Name="pref" Type="SkiaSharp.SKColorType" />
        <Parameter Name="mode" Type="SkiaSharp.SKImageDecoderMode" />
      </Parameters>
      <Docs>
        <param name="stream">Stream containing the image</param>
        <param name="bitmap">Target bitmap</param>
        <param name="pref">Give preference to this color type</param>
        <param name="mode">Decoding mode</param>
        <summary>Decodes a image from a stream.</summary>
        <returns>
          <paramref name="true" /> on success, <paramref name="false" /> on failure.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DecodeStream">
      <MemberSignature Language="C#" Value="public static bool DecodeStream (SkiaSharp.SKStreamRewindable stream, SkiaSharp.SKBitmap bitmap, SkiaSharp.SKColorType pref, SkiaSharp.SKImageDecoderMode mode, ref SkiaSharp.SKImageDecoderFormat format);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool DecodeStream(class SkiaSharp.SKStreamRewindable stream, class SkiaSharp.SKBitmap bitmap, valuetype SkiaSharp.SKColorType pref, valuetype SkiaSharp.SKImageDecoderMode mode, valuetype SkiaSharp.SKImageDecoderFormat format) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.49.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="SkiaSharp.SKStreamRewindable" />
        <Parameter Name="bitmap" Type="SkiaSharp.SKBitmap" />
        <Parameter Name="pref" Type="SkiaSharp.SKColorType" />
        <Parameter Name="mode" Type="SkiaSharp.SKImageDecoderMode" />
        <Parameter Name="format" Type="SkiaSharp.SKImageDecoderFormat&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="stream">Stream containing the image</param>
        <param name="bitmap">Target bitmap</param>
        <param name="pref">Give preference to this color type</param>
        <param name="mode">Decoding mode</param>
        <param name="format">On success, this will contain the format of the decoded file.</param>
        <summary>Decodes a image from a stream.</summary>
        <returns>
          <paramref name="true" /> on success, <paramref name="false" /> on failure.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DecodeStreamBounds">
      <MemberSignature Language="C#" Value="public static bool DecodeStreamBounds (SkiaSharp.SKStreamRewindable stream, out SkiaSharp.SKImageInfo info, SkiaSharp.SKColorType pref = SkiaSharp.SKColorType.Unknown);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool DecodeStreamBounds(class SkiaSharp.SKStreamRewindable stream, valuetype SkiaSharp.SKImageInfo info, valuetype SkiaSharp.SKColorType pref) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.49.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="SkiaSharp.SKStreamRewindable" />
        <Parameter Name="info" Type="SkiaSharp.SKImageInfo&amp;" RefType="out" />
        <Parameter Name="pref" Type="SkiaSharp.SKColorType" />
      </Parameters>
      <Docs>
        <param name="stream">Stream containing the image</param>
        <param name="info">On success, the boundary information about the image will be stored here.</param>
        <param name="pref">Give preference to this color type</param>
        <summary>Parses a stream to extract the image boundary information</summary>
        <returns>
          <paramref name="true" /> on success and the <paramref name="info" /> field set with the image boundary information, <paramref name="false" /> on failure.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DecodeStreamBounds">
      <MemberSignature Language="C#" Value="public static bool DecodeStreamBounds (SkiaSharp.SKStreamRewindable stream, out SkiaSharp.SKImageInfo info, SkiaSharp.SKColorType pref, ref SkiaSharp.SKImageDecoderFormat format);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool DecodeStreamBounds(class SkiaSharp.SKStreamRewindable stream, valuetype SkiaSharp.SKImageInfo info, valuetype SkiaSharp.SKColorType pref, valuetype SkiaSharp.SKImageDecoderFormat format) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.49.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="SkiaSharp.SKStreamRewindable" />
        <Parameter Name="info" Type="SkiaSharp.SKImageInfo&amp;" RefType="out" />
        <Parameter Name="pref" Type="SkiaSharp.SKColorType" />
        <Parameter Name="format" Type="SkiaSharp.SKImageDecoderFormat&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="stream">Stream containing the image</param>
        <param name="info">On success, the boundary information about the image will be stored here.</param>
        <param name="pref">Give preference to this color type</param>
        <param name="format">On success, this will contain the format of the decoded file.</param>
        <summary>Parses a stream to extract the image boundary information and the detected file format.</summary>
        <returns>
          <paramref name="true" /> on success and the <paramref name="info" /> field set with the image boundary information, <paramref name="false" /> on failure.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.49.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DitherImage">
      <MemberSignature Language="C#" Value="public bool DitherImage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DitherImage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.49.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Controls whether the decoder attempts to dither the image.</summary>
        <value>
          <para>
          </para>
        </value>
        <remarks>The default setting is <paramref name="true" />.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Format">
      <MemberSignature Language="C#" Value="public SkiaSharp.SKImageDecoderFormat Format { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype SkiaSharp.SKImageDecoderFormat Format" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.49.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>SkiaSharp.SKImageDecoderFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FormatName">
      <MemberSignature Language="C#" Value="public string FormatName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FormatName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.49.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFormat">
      <MemberSignature Language="C#" Value="public static SkiaSharp.SKImageDecoderFormat GetFormat (SkiaSharp.SKStreamRewindable stream);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype SkiaSharp.SKImageDecoderFormat GetFormat(class SkiaSharp.SKStreamRewindable stream) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.49.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>SkiaSharp.SKImageDecoderFormat</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="SkiaSharp.SKStreamRewindable" />
      </Parameters>
      <Docs>
        <param name="stream">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFormatName">
      <MemberSignature Language="C#" Value="public static string GetFormatName (SkiaSharp.SKImageDecoderFormat format);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetFormatName(valuetype SkiaSharp.SKImageDecoderFormat format) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.49.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="SkiaSharp.SKImageDecoderFormat" />
      </Parameters>
      <Docs>
        <param name="format">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreferQualityOverSpeed">
      <MemberSignature Language="C#" Value="public bool PreferQualityOverSpeed { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PreferQualityOverSpeed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.49.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Controls whether the decoder chooses quality over speed.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RequireUnpremultipliedColors">
      <MemberSignature Language="C#" Value="public bool RequireUnpremultipliedColors { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RequireUnpremultipliedColors" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.49.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SampleSize">
      <MemberSignature Language="C#" Value="public int SampleSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SampleSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.49.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldCancelDecode">
      <MemberSignature Language="C#" Value="public bool ShouldCancelDecode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShouldCancelDecode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.49.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns <see langword="true" /> i<paramref name="true" /> if the decoding should stop.</summary>
        <value>To be added.</value>
        <remarks>This method is the companion to the <see cref="M:SkiaSharp.SKImageDecoder.CancelDecode" /> method which will request that the decoding of an image stop.   </remarks>
      </Docs>
    </Member>
    <Member MemberName="SkipWritingZeros">
      <MemberSignature Language="C#" Value="public bool SkipWritingZeros { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SkipWritingZeros" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.49.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
