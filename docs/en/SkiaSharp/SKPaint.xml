<Type Name="SKPaint" FullName="SkiaSharp.SKPaint">
  <TypeSignature Language="C#" Value="public class SKPaint : SkiaSharp.SKObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SKPaint extends SkiaSharp.SKObject" />
  <AssemblyInfo>
    <AssemblyName>SkiaSharp</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.49.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>SkiaSharp.SKObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>The SKPaint class holds the style and color information about how to draw geometries, text and bitmaps.</summary>
    <remarks />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SKPaint ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.49.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Creates a new SKPaint with the default settings.</summary>
        <remarks>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BreakText">
      <MemberSignature Language="C#" Value="public long BreakText (string text, float maxWidth);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int64 BreakText(string text, float32 maxWidth) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.49.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="maxWidth" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="text">The text to be measured</param>
        <param name="maxWidth">Maximum width. Only the subset of text whose accumulated widths are &lt;= maxWidth are measured.</param>
        <summary>Measure the text, stopping early if the measured width exceeds <paramref name="maxWidth" />.</summary>
        <returns>Return the number of characters of text that were measured. </returns>
        <remarks>
          <para>
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BreakText">
      <MemberSignature Language="C#" Value="public long BreakText (string text, float maxWidth, out float measuredWidth);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int64 BreakText(string text, float32 maxWidth, float32 measuredWidth) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.49.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="maxWidth" Type="System.Single" />
        <Parameter Name="measuredWidth" Type="System.Single&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="text">The text to be measured</param>
        <param name="maxWidth">
          <para>Maximum width. Only the subset of text whose accumulated widths are &lt;= <paramref name="maxWidth" /> are measured.</para>
          <para>
          </para>
        </param>
        <param name="measuredWidth">Returns the actual width of the measured text</param>
        <summary>
          <para>Measure the text, stopping early if the measured width exceeds <paramref name="maxWidth" />.</para>
          <para>
          </para>
        </summary>
        <returns>Return the number of characters of text that were measured. </returns>
        <remarks>
          <para>
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BreakText">
      <MemberSignature Language="C#" Value="public long BreakText (IntPtr buffer, IntPtr length, float maxWidth, out float measuredWidth);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int64 BreakText(native int buffer, native int length, float32 maxWidth, float32 measuredWidth) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.49.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.IntPtr" />
        <Parameter Name="length" Type="System.IntPtr" />
        <Parameter Name="maxWidth" Type="System.Single" />
        <Parameter Name="measuredWidth" Type="System.Single&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="buffer">Contains a pointer to a region holding text encoded using the encoding specified in <see cref="P:SkiaSharp.SKPaint.TextEncoding" /> format.</param>
        <param name="length">Number of bytes to read from the <paramref name="buffer." /></param>
        <param name="maxWidth">Maximum width. Only the subset of text whose accumulated widths are &lt;= <paramref name="maxWidth" /> are measured.</param>
        <param name="measuredWidth">Returns the actual width of the measured text</param>
        <summary>Measure the text encoded as a UTF-8 buffer, stopping early if the measured width exceeds <paramref name="maxWidth" />.</summary>
        <returns>Return the number of characters of text that were measured. </returns>
        <remarks>The <paramref name="buffer" /> parameter is a pointer to a region in memory that contains text encoded in the <see cref="P:SkiaSharp.SKPaint.TextEncoding" /> format.   This only consumes up to <paramref name="length" /> bytes from the buffer.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Color">
      <MemberSignature Language="C#" Value="public SkiaSharp.SKColor Color { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype SkiaSharp.SKColor Color" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.49.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>SkiaSharp.SKColor</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The paint’s color.</summary>
        <value>
          <para>
          </para>
        </value>
        <remarks>
          <para>Note that the color is a 32bit value containing alpha as well as r,g,b. This 32bit value is not premultiplied, meaning that its alpha can be any value, regardless of the values of r,g,b.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ColorFilter">
      <MemberSignature Language="C#" Value="public SkiaSharp.SKColorFilter ColorFilter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class SkiaSharp.SKColorFilter ColorFilter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.49.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>SkiaSharp.SKColorFilter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The paint’s color filter.</summary>
        <value>The current color filter.</value>
        <remarks>A color filter can be used with a Paint to modify the color of each pixel drawn with that paint.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.49.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FilterQuality">
      <MemberSignature Language="C#" Value="public SkiaSharp.SKFilterQuality FilterQuality { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype SkiaSharp.SKFilterQuality FilterQuality" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.49.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>SkiaSharp.SKFilterQuality</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para>The <see cref="T:SkiaSharp.SKFilterQuality" /> of the current paint. This affects the quality (and performance) of drawing scaled images.</para>
        </summary>
        <value>The <see cref="T:SkiaSharp.SKFilterQuality" /> of the current paint.</value>
        <remarks>
          <para>
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FontMetrics">
      <MemberSignature Language="C#" Value="public SkiaSharp.SKFontMetrics FontMetrics { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype SkiaSharp.SKFontMetrics FontMetrics" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.49.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>SkiaSharp.SKFontMetrics</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The <see cref="C:SkiaSharp.SKFontMetrics" /> for the current typeface and type size.</summary>
        <value>The <see cref="C:SkiaSharp.SKFontMetrics" /> for the current typeface/pointsize/etc setting in this paint.</value>
        <remarks>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTextPath">
      <MemberSignature Language="C#" Value="public SkiaSharp.SKPath GetTextPath (string text, SkiaSharp.SKPoint[] points);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class SkiaSharp.SKPath GetTextPath(string text, valuetype SkiaSharp.SKPoint[] points) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.49.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>SkiaSharp.SKPath</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="points" Type="SkiaSharp.SKPoint[]" />
      </Parameters>
      <Docs>
        <param name="text">The text to generate an outline for.</param>
        <param name="points">The position to use for each glyph in the text.</param>
        <summary>Return the path (outline) for the specified text.</summary>
        <returns>A <see cref="T:SkiaSharp.SKPath" /> containing the outline of the text.</returns>
        <remarks>
          <para>
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTextPath">
      <MemberSignature Language="C#" Value="public SkiaSharp.SKPath GetTextPath (IntPtr buffer, IntPtr length, SkiaSharp.SKPoint[] points);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class SkiaSharp.SKPath GetTextPath(native int buffer, native int length, valuetype SkiaSharp.SKPoint[] points) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.49.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>SkiaSharp.SKPath</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.IntPtr" />
        <Parameter Name="length" Type="System.IntPtr" />
        <Parameter Name="points" Type="SkiaSharp.SKPoint[]" />
      </Parameters>
      <Docs>
        <param name="buffer">Contains a pointer to a region holding text encoded using the encoding specified in <see cref="P:SkiaSharp.SKPaint.TextEncoding" /> format.</param>
        <param name="length">Number of bytes to read from the <paramref name="buffer." /></param>
        <param name="points">The position to use for each glyph in the text.</param>
        <summary>Return the path (outline) for the specified text.</summary>
        <returns>A <see cref="T:SkiaSharp.SKPath" /> containing the outline of the text.</returns>
        <remarks>
          <para>
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTextPath">
      <MemberSignature Language="C#" Value="public SkiaSharp.SKPath GetTextPath (string text, float x, float y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class SkiaSharp.SKPath GetTextPath(string text, float32 x, float32 y) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.49.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>SkiaSharp.SKPath</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="x" Type="System.Single" />
        <Parameter Name="y" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="text">The text to generate an outline for.</param>
        <param name="x">The x-coordinate of the first glyph in the text.</param>
        <param name="y">The y-coordinate of the first glyph in the text.</param>
        <summary>Return the path (outline) for the specified text.</summary>
        <returns>A <see cref="T:SkiaSharp.SKPath" /> containing the outline of the text.</returns>
        <remarks>
          <para>
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTextPath">
      <MemberSignature Language="C#" Value="public SkiaSharp.SKPath GetTextPath (IntPtr buffer, IntPtr length, float x, float y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class SkiaSharp.SKPath GetTextPath(native int buffer, native int length, float32 x, float32 y) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.49.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>SkiaSharp.SKPath</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.IntPtr" />
        <Parameter Name="length" Type="System.IntPtr" />
        <Parameter Name="x" Type="System.Single" />
        <Parameter Name="y" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="buffer">Contains a pointer to a region holding text encoded using the encoding specified in <see cref="P:SkiaSharp.SKPaint.TextEncoding" /> format.</param>
        <param name="length">Number of bytes to read from the <paramref name="buffer." /></param>
        <param name="x">The x-coordinate of the first glyph in the text.</param>
        <param name="y">The y-coordinate of the first glyph in the text.</param>
        <summary>Return the path (outline) for the specified text.</summary>
        <returns>A <see cref="T:SkiaSharp.SKPath" /> containing the outline of the text.</returns>
        <remarks>
          <para>
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ImageFilter">
      <MemberSignature Language="C#" Value="public SkiaSharp.SKImageFilter ImageFilter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class SkiaSharp.SKImageFilter ImageFilter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.49.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>SkiaSharp.SKImageFilter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Image filter</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAntialias">
      <MemberSignature Language="C#" Value="public bool IsAntialias { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAntialias" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.49.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Controls antialiasing in the SKPaint.</summary>
        <value>The current setting for the anti-alias setting.</value>
        <remarks>If this property is <see langword="true" />, the paint smooths out the edges of what is being drawn, but is has no impact on the interior of the shape. </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDither">
      <MemberSignature Language="C#" Value="public bool IsDither { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDither" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.49.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Controls dither in the SKPaint.</summary>
        <value>The current setting for the dither setting.</value>
        <remarks>If this property is set true, the flags of the paint will be set to enable dithering.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsStroke">
      <MemberSignature Language="C#" Value="public bool IsStroke { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsStroke" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.49.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Controls stroke in the SKPaint.</summary>
        <value>The current setting for the stroke setting.</value>
        <remarks>If this property is set true, the style of the paint will be set to stroke paths instead of filling.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsVerticalText">
      <MemberSignature Language="C#" Value="public bool IsVerticalText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsVerticalText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.49.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Controls antialiasing in the <see cref="T:SkiaSharp.SKPaint" />.</summary>
        <value>The current setting for the vertical text setting.</value>
        <remarks>If this property is set true, then advances are treated as Y values rather than X values, and <see cref="M:SkiaSharp.SKCanvas.DrawText" /> will place its glyphs vertically rather than horizontally.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaskFilter">
      <MemberSignature Language="C#" Value="public SkiaSharp.SKMaskFilter MaskFilter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class SkiaSharp.SKMaskFilter MaskFilter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.49.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>SkiaSharp.SKMaskFilter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The SKPaint’s MaskFilter.</summary>
        <value>To be added.</value>
        <remarks>Mask filters control the transformations on the alpha channel before primitives are drawn.  Blur and Emboss are both MaskFilters.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MeasureText">
      <MemberSignature Language="C#" Value="public float MeasureText (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance float32 MeasureText(string text) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.49.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">The text to be measured</param>
        <summary>Measures the text</summary>
        <returns>Returns the width of the text.</returns>
        <remarks>
          <para>This will return the vertical measure if this is vertical text, in which case the returned value should be treated has a height instead of a width.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MeasureText">
      <MemberSignature Language="C#" Value="public float MeasureText (IntPtr buffer, IntPtr length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance float32 MeasureText(native int buffer, native int length) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.49.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.IntPtr" />
        <Parameter Name="length" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="buffer">Contains a pointer to a region holding text encoded using the encoding specified in <see cref="P:SkiaSharp.SKPaint.TextEncoding" /> format.</param>
        <param name="length">Number of bytes to read from the <paramref name="buffer." /></param>
        <summary>Measures the UTF-8 encoded text.</summary>
        <returns>Returns the width of the text.</returns>
        <remarks>The <paramref name="buffer" /> parameter is a pointer to a region in memory that contains text encoded in the <see cref="P:SkiaSharp.SKPaint.TextEncoding" /> format.   This only consumes up to <paramref name="length" /> bytes from the buffer.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MeasureText">
      <MemberSignature Language="C#" Value="public float MeasureText (string text, ref SkiaSharp.SKRect bounds);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance float32 MeasureText(string text, valuetype SkiaSharp.SKRect bounds) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.49.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="bounds" Type="SkiaSharp.SKRect&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="text">The text to be measured</param>
        <param name="bounds">Returns the bounds of the text relative to (0,0)</param>
        <summary>Measures the text</summary>
        <returns>Returns the width of the text.</returns>
        <remarks>This will return the vertical measure if this is vertical text, in which case the returned value should be treated has a height instead of a width.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MeasureText">
      <MemberSignature Language="C#" Value="public float MeasureText (IntPtr buffer, IntPtr length, ref SkiaSharp.SKRect bounds);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance float32 MeasureText(native int buffer, native int length, valuetype SkiaSharp.SKRect bounds) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.49.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.IntPtr" />
        <Parameter Name="length" Type="System.IntPtr" />
        <Parameter Name="bounds" Type="SkiaSharp.SKRect&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="buffer">Contains a pointer to a region holding text encoded using the encoding specified in <see cref="P:SkiaSharp.SKPaint.TextEncoding" /> format.</param>
        <param name="length">Number of bytes to read from the <paramref name="buffer." /></param>
        <param name="bounds">Returns the bounds of the text relative to (0,0)</param>
        <summary>Measures the UTF-8 encoded text.</summary>
        <returns>Returns the width of the text.</returns>
        <remarks>
          <para>This will return the vertical measure if this is vertical text, in which case the returned value should be treated has a height instead of a width.</para>
          <para>The <paramref name="buffer" /> parameter is a pointer to a region in memory that contains text encoded in the <see cref="P:SkiaSharp.SKPaint.TextEncoding" /> format.   This only consumes up to <paramref name="length" /> bytes from the buffer.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Shader">
      <MemberSignature Language="C#" Value="public SkiaSharp.SKShader Shader { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class SkiaSharp.SKShader Shader" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.49.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>SkiaSharp.SKShader</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The SKPaint’s shader.</summary>
        <value>The current shader associated with this paint.</value>
        <remarks>Shaders are effects like gradients, or bitmap patterns.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StrokeCap">
      <MemberSignature Language="C#" Value="public SkiaSharp.SKStrokeCap StrokeCap { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype SkiaSharp.SKStrokeCap StrokeCap" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.49.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>SkiaSharp.SKStrokeCap</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Controls how the start and end of stroked lines and paths are treated.</summary>
        <value>The current cap setting.</value>
        <remarks>The default is SKStrokeCap.Butt</remarks>
      </Docs>
    </Member>
    <Member MemberName="StrokeJoin">
      <MemberSignature Language="C#" Value="public SkiaSharp.SKStrokeJoin StrokeJoin { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype SkiaSharp.SKStrokeJoin StrokeJoin" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.49.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>SkiaSharp.SKStrokeJoin</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Controls the path’s join type.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StrokeMiter">
      <MemberSignature Language="C#" Value="public float StrokeMiter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 StrokeMiter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.49.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The paint's stroke miter value</summary>
        <value>
          <para>the paint's miter limit, used whenever the paint's style is Stroke or StrokeAndFill.</para>
        </value>
        <remarks>
          <para>This is used to control the behavior of miter joins when the joins angle is sharp.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StrokeWidth">
      <MemberSignature Language="C#" Value="public float StrokeWidth { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 StrokeWidth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.49.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The paint’s stroke width.</summary>
        <value>
          <para>the paint's stroke width, used whenever the paint's style is Stroke or StrokeAndFill.</para>
        </value>
        <remarks>The value of zero is the special hairline mode.   Hairlines always draw with a width of 1 pixel, regardless of the transformation matrix.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TextAlign">
      <MemberSignature Language="C#" Value="public SkiaSharp.SKTextAlign TextAlign { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype SkiaSharp.SKTextAlign TextAlign" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.49.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>SkiaSharp.SKTextAlign</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Controls the path’s align value.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TextEncoding">
      <MemberSignature Language="C#" Value="public SkiaSharp.SKTextEncoding TextEncoding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype SkiaSharp.SKTextEncoding TextEncoding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.49.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>SkiaSharp.SKTextEncoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The encoding used by the text.</summary>
        <value>The encoding used by the various text measuring primitives.</value>
        <remarks>This defaults to UTF8 encoding.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TextScaleX">
      <MemberSignature Language="C#" Value="public float TextScaleX { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 TextScaleX" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.49.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The SKPaint’s horizontal scale factor for text.</summary>
        <value>The current scale factor for drawing/measuring text in X.</value>
        <remarks>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TextSize">
      <MemberSignature Language="C#" Value="public float TextSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 TextSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.49.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TextSkewX">
      <MemberSignature Language="C#" Value="public float TextSkewX { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 TextSkewX" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.49.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The SKPaint’s horizontal skew factor for text.</summary>
        <value>The current skew factor along the X axis.</value>
        <remarks>The default value is zero.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Typeface">
      <MemberSignature Language="C#" Value="public SkiaSharp.SKTypeface Typeface { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class SkiaSharp.SKTypeface Typeface" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.49.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>SkiaSharp.SKTypeface</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Controls the typeface used when painting using this SKPaint.</summary>
        <value>The current type face, or <see langword="null" /> if not set.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="XferMode">
      <MemberSignature Language="C#" Value="public SkiaSharp.SKXferMode XferMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype SkiaSharp.SKXferMode XferMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.49.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>SkiaSharp.SKXferMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
