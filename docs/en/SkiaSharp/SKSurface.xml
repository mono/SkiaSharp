<Type Name="SKSurface" FullName="SkiaSharp.SKSurface">
  <TypeSignature Language="C#" Value="public class SKSurface : SkiaSharp.SKObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SKSurface extends SkiaSharp.SKObject" />
  <AssemblyInfo>
    <AssemblyName>SkiaSharp</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.49.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>SkiaSharp.SKObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Represents the backend/results of drawing to a canvas</summary>
    <remarks>
      <para>SkSurface represents the backend/results of drawing to a canvas. For raster drawing, the surface will be pixels, but (for example) when drawing into a PDF or Picture canvas, the surface stores the recorded commands.</para>
      <para>
      </para>
      <para>SkSurface always has non-zero dimensions. If there is a request for a new surface, and either of the requested dimensions are zero, then <see langword="null" /> will be returned.</para>
      <para>
      </para>
      <para>Once you create a surface with one of its <see cref="M:SkiaSharp.SKSurface.Create" /> methods, you can draw into the canvas returned by the <see cref="M:SkiaSharp.SKSurface.Canvas" /> property.   Once the drawing is complete, you can retrieve an <see cref="T:SkiaSharp.SKImage" /> by calling the <see cref="M:SkiaSharp.SKSurface.Snapshot" /> method.</para>
      <para>
      </para>
      <example>
        <code lang="C#"><![CDATA[using (var surface = SKSurface.Create (width: 640, height: 480, SKColorType.N_32, SKAlphaType.Premul)) {
    SKCanvas myCanvas = surface.Canvas;

    // Your drawing code goes here.
}
]]></code>
      </example>
      <para>
      </para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Canvas">
      <MemberSignature Language="C#" Value="public SkiaSharp.SKCanvas Canvas { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class SkiaSharp.SKCanvas Canvas" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.49.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>SkiaSharp.SKCanvas</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the canvas for this surface which can be used for drawing into it.</summary>
        <value>
          <para />
        </value>
        <remarks>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static SkiaSharp.SKSurface Create (SkiaSharp.SKImageInfo info);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class SkiaSharp.SKSurface Create(valuetype SkiaSharp.SKImageInfo info) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.49.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>SkiaSharp.SKSurface</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="SkiaSharp.SKImageInfo" />
      </Parameters>
      <Docs>
        <param name="info">Contains the image configuration parameters.</param>
        <summary>Creates a new SKSurface with the specified image parameters.</summary>
        <returns>If the requested surface can not be created, or the configuration is not supported, this returns <see langword="null" />.   Otherwise the return is an instance of SKSuface.</returns>
        <remarks>This will create a buffer with the parameters specified in <paramref name="info" />.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static SkiaSharp.SKSurface Create (SkiaSharp.SKImageInfo info, SkiaSharp.SKSurfaceProps props);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class SkiaSharp.SKSurface Create(valuetype SkiaSharp.SKImageInfo info, valuetype SkiaSharp.SKSurfaceProps props) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.49.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>SkiaSharp.SKSurface</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="SkiaSharp.SKImageInfo" />
        <Parameter Name="props" Type="SkiaSharp.SKSurfaceProps" />
      </Parameters>
      <Docs>
        <param name="info">Contains the image configuration parameters.</param>
        <param name="props">Contains the surface property configuration.</param>
        <summary>Creates a new SKSurface from the specified image parameters and surface properties.</summary>
        <returns>If the requested surface can not be created, or the configuration is not supported, this returns <see langword="null" />.   Otherwise the return is an instance of SKSuface.</returns>
        <remarks>This will create a buffer with the parameters specified in <paramref name="info&amp;nbsp;" />and the properties specified in <paramref name="props" />.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static SkiaSharp.SKSurface Create (SkiaSharp.SKImageInfo info, IntPtr pixels, int rowBytes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class SkiaSharp.SKSurface Create(valuetype SkiaSharp.SKImageInfo info, native int pixels, int32 rowBytes) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.49.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>SkiaSharp.SKSurface</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="SkiaSharp.SKImageInfo" />
        <Parameter Name="pixels" Type="System.IntPtr" />
        <Parameter Name="rowBytes" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="info">Contains the image configuration parameters.</param>
        <param name="pixels">Pointer to an in memory-buffer that can hold the image as specified.</param>
        <param name="rowBytes">The number of bytes per row in the pixel buffer.</param>
        <summary>Creates a new SKSurface with the specified image parameters using a provided buffer.</summary>
        <returns>If the requested surface can not be created, or the configuration is not supported, this returns <see langword="null" />.   Otherwise the return is an instance of SKSuface.</returns>
        <remarks>This will create a buffer that will be backend by the in-memory buffer provided in <paramref name="pixels" />.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static SkiaSharp.SKSurface Create (SkiaSharp.SKImageInfo info, IntPtr pixels, int rowBytes, SkiaSharp.SKSurfaceProps props);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class SkiaSharp.SKSurface Create(valuetype SkiaSharp.SKImageInfo info, native int pixels, int32 rowBytes, valuetype SkiaSharp.SKSurfaceProps props) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.49.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>SkiaSharp.SKSurface</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="SkiaSharp.SKImageInfo" />
        <Parameter Name="pixels" Type="System.IntPtr" />
        <Parameter Name="rowBytes" Type="System.Int32" />
        <Parameter Name="props" Type="SkiaSharp.SKSurfaceProps" />
      </Parameters>
      <Docs>
        <param name="info">Contains the image configuration parameters.</param>
        <param name="pixels">Pointer to an in memory-buffer that can hold the image as specified.</param>
        <param name="rowBytes">The number of bytes per row in the pixel buffer.</param>
        <param name="props">Contains the surface property configuration.</param>
        <summary>Creates a new SKSurface from the specified image parameters, the provided buffer and surface properties.</summary>
        <returns>If the requested surface can not be created, or the configuration is not supported, this returns <see langword="null" />.   Otherwise the return is an instance of SKSuface.</returns>
        <remarks>This will create a buffer that will be backend by the in-memory buffer provided in <paramref name="pixels" />.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static SkiaSharp.SKSurface Create (int width, int height, SkiaSharp.SKColorType colorType, SkiaSharp.SKAlphaType alphaType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class SkiaSharp.SKSurface Create(int32 width, int32 height, valuetype SkiaSharp.SKColorType colorType, valuetype SkiaSharp.SKAlphaType alphaType) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.49.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>SkiaSharp.SKSurface</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="colorType" Type="SkiaSharp.SKColorType" />
        <Parameter Name="alphaType" Type="SkiaSharp.SKAlphaType" />
      </Parameters>
      <Docs>
        <param name="width">The desired width for the surface.</param>
        <param name="height">The desired heigh for the surface.</param>
        <param name="colorType">Color type to use for the surface.</param>
        <param name="alphaType">Transparency mode to use for the surface.</param>
        <summary>Creates a new SKSurface with the specified image parameters.</summary>
        <returns>If the requested surface can not be created, or the configuration is not supported, this returns <see langword="null" />.   Otherwise the return is an instance of SKSuface.</returns>
        <remarks>This will create a buffer that will be backend by the in-memory buffer.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static SkiaSharp.SKSurface Create (int width, int height, SkiaSharp.SKColorType colorType, SkiaSharp.SKAlphaType alphaType, SkiaSharp.SKSurfaceProps props);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class SkiaSharp.SKSurface Create(int32 width, int32 height, valuetype SkiaSharp.SKColorType colorType, valuetype SkiaSharp.SKAlphaType alphaType, valuetype SkiaSharp.SKSurfaceProps props) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.49.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>SkiaSharp.SKSurface</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="colorType" Type="SkiaSharp.SKColorType" />
        <Parameter Name="alphaType" Type="SkiaSharp.SKAlphaType" />
        <Parameter Name="props" Type="SkiaSharp.SKSurfaceProps" />
      </Parameters>
      <Docs>
        <param name="width">The desired width for the surface.</param>
        <param name="height">The desired height for the surface.</param>
        <param name="colorType">Color type to use for the surface.</param>
        <param name="alphaType">Transparency mode to use for the surface.</param>
        <param name="props">Contains the surface property configuration.</param>
        <summary>Creates a new SKSurface with the specified image parameters and surface properties.</summary>
        <returns>If the requested surface can not be created, or the configuration is not supported, this returns <see langword="null" />.   Otherwise the return is an instance of SKSuface.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static SkiaSharp.SKSurface Create (int width, int height, SkiaSharp.SKColorType colorType, SkiaSharp.SKAlphaType alphaType, IntPtr pixels, int rowBytes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class SkiaSharp.SKSurface Create(int32 width, int32 height, valuetype SkiaSharp.SKColorType colorType, valuetype SkiaSharp.SKAlphaType alphaType, native int pixels, int32 rowBytes) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.49.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>SkiaSharp.SKSurface</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="colorType" Type="SkiaSharp.SKColorType" />
        <Parameter Name="alphaType" Type="SkiaSharp.SKAlphaType" />
        <Parameter Name="pixels" Type="System.IntPtr" />
        <Parameter Name="rowBytes" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="width">The desired width for the surface.</param>
        <param name="height">The desired height for the surface.</param>
        <param name="colorType">Color type to use for the surface.</param>
        <param name="alphaType">Transparency mode to use for the surface.</param>
        <param name="pixels">Pointer to an in memory-buffer that can hold the image as specified.</param>
        <param name="rowBytes">The number of bytes per row in the pixel buffer.</param>
        <summary>Creates a new SKSurface with the specified image parameters using a provided buffer.</summary>
        <returns>If the requested surface can not be created, or the configuration is not supported, this returns <see langword="null" />.   Otherwise the return is an instance of SKSuface.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static SkiaSharp.SKSurface Create (int width, int height, SkiaSharp.SKColorType colorType, SkiaSharp.SKAlphaType alphaType, IntPtr pixels, int rowBytes, SkiaSharp.SKSurfaceProps props);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class SkiaSharp.SKSurface Create(int32 width, int32 height, valuetype SkiaSharp.SKColorType colorType, valuetype SkiaSharp.SKAlphaType alphaType, native int pixels, int32 rowBytes, valuetype SkiaSharp.SKSurfaceProps props) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.49.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>SkiaSharp.SKSurface</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="colorType" Type="SkiaSharp.SKColorType" />
        <Parameter Name="alphaType" Type="SkiaSharp.SKAlphaType" />
        <Parameter Name="pixels" Type="System.IntPtr" />
        <Parameter Name="rowBytes" Type="System.Int32" />
        <Parameter Name="props" Type="SkiaSharp.SKSurfaceProps" />
      </Parameters>
      <Docs>
        <param name="width">The desired width for the surface.</param>
        <param name="height">The desired height for the surface.</param>
        <param name="colorType">Color type to use for the surface.</param>
        <param name="alphaType">Transparency mode to use for the surface.</param>
        <param name="pixels">Pointer to an in memory-buffer that can hold the image as specified.</param>
        <param name="rowBytes">The number of bytes per row in the pixel buffer.</param>
        <param name="props">Contains the surface property configuration.</param>
        <summary>Creates a new SKSurface with the specified image parameters using a provided buffer and surface properties.</summary>
        <returns>If the requested surface can not be created, or the configuration is not supported, this returns <see langword="null" />.   Otherwise the return is an instance of SKSuface.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.49.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Snapshot">
      <MemberSignature Language="C#" Value="public SkiaSharp.SKImage Snapshot ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class SkiaSharp.SKImage Snapshot() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.49.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>SkiaSharp.SKImage</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Takes a snapshot of the surface and returns it as an image.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
