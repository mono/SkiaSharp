trigger: none

pr: none

parameters:
  - name: buildId
    displayName: 'The specific build ID to scan.'
    type: string
    default: 'latest'
  - name: VM_IMAGE_HOST
    type: object
    default:
      pool:
        name: Azure Pipelines
        vmImage: ubuntu-20.04
  - name: VM_IMAGE_WINDOWS
    type: object
    default:
      pool:
        name: Azure Pipelines
        vmImage: windows-2022
  - name: VM_IMAGE_MAC
    type: object
    default:
      pool:
        name: Azure Pipelines
        vmImage: macos-11
  - name: VM_IMAGE_LINUX
    type: object
    default:
      pool:
        name: Azure Pipelines
        vmImage: ubuntu-20.04

strategy:
  matrix:
    windows:
      pool: ${{ parameters.VM_IMAGE_WINDOWS }}
    macos:
      pool: ${{ parameters.VM_IMAGE_MAC }}
    linux:
      pool: ${{ parameters.VM_IMAGE_LINUX }}
  maxParallel: 3

pool: $(pool)

resources:
  pipelines:
    - pipeline: SkiaSharp
      source: SkiaSharp
      trigger: none

steps:

  - task: UsePythonVersion@0
    displayName: Switch to the correct Python version
    inputs:
      versionSpec: '3.x'
      architecture: 'x64'

  - pwsh: pip install cve-bin-tool
    displayName: Install the CVE Binary Tool

  - template: azure-templates-download-artifacts.yml
    parameters:
      sourceBuildId: ${{ parameters.buildId }}
      artifacts:
       - name: nuget-signed

  - pwsh: cve-bin-tool output --nvd-api-key ${env:NVD_TOKEN}
    displayName: Run the CVE Binary Tool
