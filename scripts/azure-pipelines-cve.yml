trigger: none

pr: none

parameters:
  - name: buildId
    displayName: 'The specific build ID to scan.'
    type: string
    default: 'latest'

strategy:
  matrix:
    Windows:
      vmImage: windows-latest
    macOS:
      vmImage: macos-latest
    Linux:
      vmImage: ubuntu-latest

resources:
  pipelines:
    - pipeline: SkiaSharp
      source: SkiaSharp
      trigger: none

pool:
  name: Azure Pipelines
  vmImage: $(vmImage)

steps:

  - task: UsePythonVersion@0
    displayName: Switch to the correct Python version
    inputs:
      versionSpec: '3.x'
      architecture: 'x64'

  # - pwsh: pip install cve-bin-tool
  #   displayName: Install the CVE Binary Tool

  # - pwsh: cve-bin-tool --update now --nvd-api-key ${env:NVD_TOKEN}
  #   displayName: Update the database
  #   continueOnError: true

  - template: azure-templates-download-artifacts.yml
    parameters:
      sourceBuildId: ${{ parameters.buildId }}
      artifacts:
       - name: nuget-signed

  - pwsh: |
      foreach ($nupkg in (Get-ChildItem output/*.nupkg)) {
        $dest = "output/temp-nuget/$($nupkg.Name.TrimEnd('.nupkg'))"
        Write-Host "Extracting '$nupkg' to '$dest'..."
        Expand-Archive $nupkg $dest
      }
      ls -l output/temp-nuget
    displayName: Extract all the packages

  - pwsh: cve-bin-tool output/temp-nuget --nvd-api-key ${env:NVD_TOKEN}
    displayName: Run the CVE Binary Tool
