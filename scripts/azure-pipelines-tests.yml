trigger: none

pr: none

parameters:
  - name: buildAgentHost
    displayName: 'The generic host build agent configuration:'
    type: object
    default:
      pool:
        name: Azure Pipelines
        vmImage: ubuntu-20.04
        os: windows
  - name: buildAgentWindows
    displayName: 'The Windows build agent configuration:'
    type: object
    default:
      pool:
        name: Azure Pipelines
        vmImage: windows-2022
        os: windows
  - name: buildAgentMac
    displayName: 'The macOS build agent configuration:'
    type: object
    default:
      pool:
        name: Azure Pipelines
        vmImage: macos-14
        os: macos
  - name: buildAgentLinux
    displayName: 'The Linux build agent configuration:'
    type: object
    default:
      pool:
        name: Azure Pipelines
        vmImage: ubuntu-22.04
        os: linux
  - name: buildAgentAndroidTests
    displayName: 'The build agent configuration for building the Android tests:'
    type: object
    default:
      pool:
        name: VSEng-VSMac-Xamarin-Shared
        vmImage: VSEng-VSMac-Xamarin-Shared
        os: macos
        demands:
          - macOS.Name -equals Ventura
          - macOS.Architecture -equals x64
      parameters:
        installXcode: false

variables:
  - template: /scripts/azure-pipelines-variables.yml@self

resources:
  repositories:
    - repository: xamarin-templates
      type: github
      name: xamarin/yaml-templates
      endpoint: xamarin
      ref: refs/heads/main
  pipelines:
    - pipeline: SkiaSharp
      source: SkiaSharp
      trigger: true

extends:
  template: /scripts/azure-template.yml@self
  parameters:
    pool: ${{ parameters.buildAgentHost.pool }}
    stages:
      - template: /scripts/azure-templates-stages.yml@self
        parameters:
          buildPipelineType: 'tests'
          buildAgentHost: ${{ parameters.buildAgentHost }}
          buildAgentWindows: ${{ parameters.buildAgentWindows }}
          buildAgentWindowsNative: ${{ parameters.buildAgentWindows }}
          buildAgentMac: ${{ parameters.buildAgentMac }}
          buildAgentMacNative: ${{ parameters.buildAgentMac }}
          buildAgentLinux: ${{ parameters.buildAgentLinux }}
          buildAgentLinuxNative: ${{ parameters.buildAgentLinux }}
          buildAgentAndroidTests: ${{ parameters.buildAgentAndroidTests }}
