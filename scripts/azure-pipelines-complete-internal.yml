trigger: none

pr: none

parameters:
  - name: buildExternals
    displayName: 'The Build ID containing the specific native artifacts to use:'
    type: string
    default: 'latest'
  - name: buildAgentHost
    displayName: 'The generic host build agent configuration:'
    type: object
    default:
      pool:
        name: Azure Pipelines
        vmImage: ubuntu-20.04
        os: windows
  - name: buildAgentWindows
    displayName: 'The Windows build agent configuration:'
    type: object
    default:
      pool:
        name: Azure Pipelines
        vmImage: windows-2022
        os: windows
  - name: buildAgentWindowsNative
    displayName: 'The Windows build agent configuration for building the native assets:'
    type: object
    default:
      pool:
        name: Azure Pipelines
        vmImage: windows-2022
        os: windows
  - name: buildAgentMac
    displayName: 'The macOS build agent configuration:'
    type: object
    default:
      pool:
        name: Azure Pipelines
        vmImage: macos-14
        os: macos
  - name: buildAgentMacNative
    displayName: 'The macOS build agent configuration for building the native assets:'
    type: object
    default:
      pool:
        name: Azure Pipelines
        vmImage: macos-13
        os: macos
  - name: buildAgentLinux
    displayName: 'The Linux build agent configuration:'
    type: object
    default:
      pool:
        name: Azure Pipelines
        vmImage: ubuntu-22.04
        os: linux
  - name: buildAgentLinuxNative
    displayName: 'The Linux build agent configuration for building the native assets:'
    type: object
    default:
      pool:
        name: Azure Pipelines
        vmImage: ubuntu-20.04
        os: linux
  - name: buildAgentAndroidTests
    displayName: 'The build agent configuration for building the Android tests:'
    type: object
    default:
      pool:
        name: VSEng-VSMac-Xamarin-Shared
        vmImage: VSEng-VSMac-Xamarin-Shared
        os: macos
        demands:
          - macOS.Name -equals Ventura
          - macOS.Architecture -equals x64
      parameters:
        installXcode: false
  - name: enableSigning
    displayName: 'Enable package signing (Test signing)'
    type: boolean
    default: false
  - name: runCompliance
    displayName: 'Run post-build compliance tasks (such as API Scan and PoliCheck)'
    type: boolean
    default: false
  - name: use1ESPipelineTemplates
    displayName: 'Run the build using the internal 1ES Pipeline Templates'
    type: boolean
    default: false

variables:
  - template: /scripts/azure-pipelines-variables.yml@self

resources:
  repositories:
    - repository: xamarin-templates
      type: github
      name: xamarin/yaml-templates
      endpoint: xamarin
      ref: refs/heads/main
    - repository: 1ESPipelineTemplates
      type: git
      name: 1ESPipelineTemplates/1ESPipelineTemplates
      ref: refs/tags/release

extends:
  ${{ if eq('${{ parameters.use1ESPipelineTemplates }}', 'true') }}:
    template: v1/1ES.Unofficial.PipelineTemplate.yml@1ESPipelineTemplates
  ${{ if ne('${{ parameters.use1ESPipelineTemplates }}', 'true') }}:
    template: /scripts/azure-template.yml@self
  parameters:
    pool: ${{ parameters.buildAgentHost.pool }}
    customBuildTags:
      - ES365AIMigrationTooling
    stages:
      - template: /scripts/azure-templates-stages.yml@self
        parameters:
          buildPipelineType: 'both'
          buildExternals: ${{ parameters.buildExternals }}
          enableSigning: ${{ parameters.enableSigning }}
          ${{ if eq(parameters.runCompliance, 'true') }}:
            sdl:
              apiscan:
                enabled: true
              binskim:
                break: false
              codeInspector:
                enabled: true
              credscan:
                suppressionsFile: $(Build.SourcesDirectory)\scripts\guardian\CredScanSuppressions.json
              policheck:
                enabled: true
                exclusionsFile: $(Build.SourcesDirectory)\scripts\guardian\PoliCheckExclusions.xml
              spotBugs:
                enabled: false
              suppression:
                suppressionFile: $(Build.SourcesDirectory)\scripts\guardian\source.gdnsuppress
              tsa:
                enabled: true
                configFile: $(Build.SourcesDirectory)\scripts\guardian\tsaoptions-v2.json
          use1ESPipelineTemplates: ${{ parameters.use1ESPipelineTemplates }}
          buildAgentHost: ${{ parameters.buildAgentHost }}
          buildAgentWindows: ${{ parameters.buildAgentWindows }}
          buildAgentWindowsNative: ${{ parameters.buildAgentWindows }}
          buildAgentMac: ${{ parameters.buildAgentMac }}
          buildAgentMacNative: ${{ parameters.buildAgentMac }}
          buildAgentLinux: ${{ parameters.buildAgentLinux }}
          buildAgentLinuxNative: ${{ parameters.buildAgentLinuxNative }}
          buildAgentAndroidTests: ${{ parameters.buildAgentAndroidTests }}
