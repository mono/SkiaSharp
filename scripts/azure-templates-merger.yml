parameters:
  name: ''                                      # in the form type_platform_host
  displayName: ''                               # the human name
  buildAgent: ''                                # the configuration for the build agent
  buildPipelineType: 'both'                     # the type of build pipeline setup
  requiredArtifacts: []                         # the artifacts that this build needs to download
  matrixArtifacts: []                           # the artifacts that this build needs to download
  sdl: []                                       # the SDL properties to use for this job

jobs:
  - template: /scripts/azure-templates-bootstrapper.yml@self
    parameters:
      name: ${{ parameters.name }}
      displayName: ${{ parameters.displayName }}
      sdl: ${{ parameters.sdl }}
      buildPipelineType: ${{ parameters.buildPipelineType }}
      buildAgent: ${{ parameters.buildAgent }}
      skipInstall: true
      skipSteps: true
      requiredArtifacts: ${{ parameters.requiredArtifacts }}
      preBuildSteps:
        - pwsh: az devops configure --defaults organization=$(System.TeamFoundationCollectionUri) project=$(System.TeamProject) --use-git-aliases true
          displayName: Configure the az CLI tool
        - ${{ each artifact in parameters.matrixArtifacts }}:
          - pwsh: |
              $artifactJson=@'
              ${{ artifact.jobs }}
              '@

              echo $artifactJson

              $json = ConvertFrom-Json $artifactJson
              $objects = $json | Get-Member -MemberType NoteProperty
              $names = $objects | ForEach-Object { $json."$($_.Name)".name }

              Write-Host "Found $($names.Length) items:"
              $names | ForEach-Object { Write-Host " - $_" }

              $dir = "$(Build.SourcesDirectory)/output"
              New-Item "$dir" -Type Directory -Force | Out-Null

              $id = "$(Build.BuildId)"
              foreach ($name in $names) {
                Write-Host "Downloading '$name'..."
                az pipelines runs artifact download --artifact-name "$name" --path "$dir" --run-id "$id" --verbose
              }
              Write-Host "Downloads complete."
              Get-ChildItem "$dir"
            env:
              AZURE_DEVOPS_EXT_PAT: $(System.AccessToken)
            displayName: Download the pre-built ${{ artifact.name }} artifacts
