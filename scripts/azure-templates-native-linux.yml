parameters:
  name: ''            # in the form type_platform_host
  displayName: ''     # the human name
  packages: ''        # any additional packages
  target: ''          # the bootstrapper target
  preBuildSteps: []   # any steps to run before the build
  postBuildSteps: []  # any additional steps to run after the build
  additionalArgs: ''  # any additional arguments to pass to the bootstrapper
  retryCount: 1       # the number of times to retry the bootstrapper

jobs:
  - job: ${{ parameters.name }}
    displayName: ${{ parameters.displayName }}
    timeoutInMinutes: 120
    pool:
      vmImage: $(VM_IMAGE_LINUX)
    container: ubuntu:14.04
    steps:
      - checkout: self
        submodules: recursive
      # install any packages
      - bash: |
          sudo apt update
          sudo apt install -y apt-transport-https
          sudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 3FA7E0328081BFF6A14DA29AA6A19B38D3D831EF
          echo "deb https://download.mono-project.com/repo/ubuntu stable-trusty main" | sudo tee /etc/apt/sources.list.d/mono-official-stable.list
          sudo apt update
          sudo apt install -y ${{ parameters.packages }}
        displayName: Install any package dependencies
      # pre-build steps
      - ${{ parameters.preBuildSteps }}
      # build
      - bash: ./scripts/retry-command.sh ${{ parameters.retryCount }} ./bootstrapper.sh -t ${{ parameters.target }} -v $VERBOSITY -c $CONFIGURATION ${{ parameters.additionalArgs }}
        displayName: Run the bootstrapper for ${{ parameters.target }}
        env:
          CC: clang-3.8
          CXX: clang++-3.8
      - bash: |
          find output/native/linux -type f -name "*.so" -print0 | xargs -0 ldd -v
        displayName: List the dependencies for the native binaries
      # post-build steps
      - ${{ parameters.postBuildSteps }}
      # publish artifacts
      - task: PublishPipelineArtifact@0
        displayName: Publish the ${{ parameters.name }} artifacts
        inputs:
          artifactName: ${{ parameters.name }}
          targetPath: 'output'
