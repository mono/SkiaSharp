parameters:
  - name: buildExternals
    type: string
  - name: buildAgentWindowsNative
    type: object
  - name: sdl
    type: object

stages:
  - stage: native_windows
    displayName: Native Windows
    dependsOn: prepare
    jobs:
      - template: /scripts/azure-templates-jobs-bootstrapper.yml@self   # Build Native Android|x86 (Win)
        parameters:
          name: native_android_x86_windows
          displayName: Android x86
          sdl: ${{ parameters.sdl }}
          buildAgent: ${{ parameters.buildAgentWindowsNative }}
          buildExternals: ${{ parameters.buildExternals }}
          target: externals-android
          additionalArgs: --buildarch=x86
      - template: /scripts/azure-templates-jobs-bootstrapper.yml@self   # Build Native Android|x64 (Win)
        parameters:
          name: native_android_x64_windows
          displayName: Android x64
          sdl: ${{ parameters.sdl }}
          buildAgent: ${{ parameters.buildAgentWindowsNative }}
          buildExternals: ${{ parameters.buildExternals }}
          target: externals-android
          additionalArgs: --buildarch=x64
      - template: /scripts/azure-templates-jobs-bootstrapper.yml@self   # Build Native Android|arm (Win)
        parameters:
          name: native_android_arm_windows
          displayName: Android arm
          sdl: ${{ parameters.sdl }}
          buildAgent: ${{ parameters.buildAgentWindowsNative }}
          buildExternals: ${{ parameters.buildExternals }}
          target: externals-android
          additionalArgs: --buildarch=arm
      - template: /scripts/azure-templates-jobs-bootstrapper.yml@self   # Build Native Android|arm64 (Win)
        parameters:
          name: native_android_arm64_windows
          displayName: Android arm64
          sdl: ${{ parameters.sdl }}
          buildAgent: ${{ parameters.buildAgentWindowsNative }}
          buildExternals: ${{ parameters.buildExternals }}
          target: externals-android
          additionalArgs: --buildarch=arm64
      - template: /scripts/azure-templates-jobs-bootstrapper.yml@self   # Build Native Tizen (Win)
        parameters:
          name: native_tizen_windows
          displayName: Tizen
          sdl: ${{ parameters.sdl }}
          buildAgent: ${{ parameters.buildAgentWindowsNative }}
          buildExternals: ${{ parameters.buildExternals }}
          target: externals-tizen
      - template: /scripts/azure-templates-jobs-bootstrapper.yml@self   # Build Native Win32|x86 (Win)
        parameters:
          name: native_win32_x86_windows
          displayName: Win32 x86
          sdl: ${{ parameters.sdl }}
          buildAgent: ${{ parameters.buildAgentWindowsNative }}
          buildExternals: ${{ parameters.buildExternals }}
          target: externals-windows
          additionalArgs: --buildarch=x86
      - template: /scripts/azure-templates-jobs-bootstrapper.yml@self   # Build Native Win32|x64 (Win)
        parameters:
          name: native_win32_x64_windows
          displayName: Win32 x64
          sdl: ${{ parameters.sdl }}
          buildAgent: ${{ parameters.buildAgentWindowsNative }}
          buildExternals: ${{ parameters.buildExternals }}
          target: externals-windows
          additionalArgs: --buildarch=x64
      - template: /scripts/azure-templates-jobs-bootstrapper.yml@self   # Build Native Win32|arm64 (Win)
        parameters:
          name: native_win32_arm64_windows
          displayName: Win32 arm64
          sdl: ${{ parameters.sdl }}
          buildAgent: ${{ parameters.buildAgentWindowsNative }}
          buildExternals: ${{ parameters.buildExternals }}
          target: externals-windows
          additionalArgs: --buildarch=arm64
      - ${{ if eq(variables['System.TeamProject'], 'devdiv') }}:
        - template: /scripts/azure-templates-jobs-bootstrapper.yml@self # Build Native Win32|x86 (Win + MSVC)
          parameters:
            name: native_win32_x86_msvc_windows
            displayName: Win32 x86 [MSVC]
            sdl: ${{ parameters.sdl }}
            buildAgent: ${{ parameters.buildAgentWindowsNative }}
            buildExternals: ${{ parameters.buildExternals }}
            target: externals-windows
            additionalArgs: --buildarch=x86 --llvm="msvc"
            installLlvm: false
        - template: /scripts/azure-templates-jobs-bootstrapper.yml@self # Build Native Win32|x64 (Win + MSVC)
          parameters:
            name: native_win32_x64_msvc_windows
            displayName: Win32 x64 [MSVC]
            sdl: ${{ parameters.sdl }}
            buildAgent: ${{ parameters.buildAgentWindowsNative }}
            buildExternals: ${{ parameters.buildExternals }}
            target: externals-windows
            additionalArgs: --buildarch=x64 --llvm="msvc"
            installLlvm: false
        - template: /scripts/azure-templates-jobs-bootstrapper.yml@self # Build Native Win32|arm64 (Win + MSVC)
          parameters:
            name: native_win32_arm64_msvc_windows
            displayName: Win32 arm64 [MSVC]
            sdl: ${{ parameters.sdl }}
            buildAgent: ${{ parameters.buildAgentWindowsNative }}
            buildExternals: ${{ parameters.buildExternals }}
            target: externals-windows
            additionalArgs: --buildarch=arm64 --llvm="msvc"
            installLlvm: false
      - template: /scripts/azure-templates-jobs-bootstrapper.yml@self   # Build Native WinUI|x86 (Win)
        parameters:
          name: native_winui_x86_windows
          displayName: WinUI x86
          sdl: ${{ parameters.sdl }}
          buildAgent: ${{ parameters.buildAgentWindowsNative }}
          buildExternals: ${{ parameters.buildExternals }}
          target: externals-winui
          additionalArgs: --buildarch=x86
      - template: /scripts/azure-templates-jobs-bootstrapper.yml@self   # Build Native WinUI|x64 (Win)
        parameters:
          name: native_winui_x64_windows
          displayName: WinUI x64
          sdl: ${{ parameters.sdl }}
          buildAgent: ${{ parameters.buildAgentWindowsNative }}
          buildExternals: ${{ parameters.buildExternals }}
          target: externals-winui
          additionalArgs: --buildarch=x64
      - template: /scripts/azure-templates-jobs-bootstrapper.yml@self   # Build Native WinUI|arm64 (Win)
        parameters:
          name: native_winui_arm64_windows
          displayName: WinUI arm64
          sdl: ${{ parameters.sdl }}
          buildAgent: ${{ parameters.buildAgentWindowsNative }}
          buildExternals: ${{ parameters.buildExternals }}
          target: externals-winui
          additionalArgs: --buildarch=arm64
      - template: /scripts/azure-templates-jobs-bootstrapper.yml@self   # Build Native ANGLE WinUI|x86 (Win)
        parameters:
          name: native_winui_angle_x86_windows
          displayName: ANGLE WinUI x86
          sdl: ${{ parameters.sdl }}
          buildAgent: ${{ parameters.buildAgentWindowsNative }}
          buildExternals: ${{ parameters.buildExternals }}
          target: externals-winui-angle
          additionalArgs: --buildarch=x86
      - template: /scripts/azure-templates-jobs-bootstrapper.yml@self   # Build Native ANGLE WinUI|x64 (Win)
        parameters:
          name: native_winui_angle_x64_windows
          displayName: ANGLE WinUI x64
          sdl: ${{ parameters.sdl }}
          buildAgent: ${{ parameters.buildAgentWindowsNative }}
          buildExternals: ${{ parameters.buildExternals }}
          target: externals-winui-angle
          additionalArgs: --buildarch=x64
      - template: /scripts/azure-templates-jobs-bootstrapper.yml@self   # Build Native ANGLE WinUI|arm64 (Win)
        parameters:
          name: native_winui_angle_arm64_windows
          displayName: ANGLE WinUI arm64
          sdl: ${{ parameters.sdl }}
          buildAgent: ${{ parameters.buildAgentWindowsNative }}
          buildExternals: ${{ parameters.buildExternals }}
          target: externals-winui-angle
          additionalArgs: --buildarch=arm64
      - template: /scripts/azure-templates-jobs-bootstrapper.yml@self   # Build Native NanoServer|x64 (Win)
        parameters:
          name: native_win32_x64_nanoserver_windows
          displayName: Nano Server x64
          sdl: ${{ parameters.sdl }}
          buildAgent: ${{ parameters.buildAgentWindowsNative }}
          buildExternals: ${{ parameters.buildExternals }}
          target: externals-nanoserver
          additionalArgs: --buildarch=x64
