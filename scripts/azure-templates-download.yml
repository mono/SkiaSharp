parameters:
  name: ''                                      # in the form type_platform_host
  displayName: ''                               # the human name
  vmImage: ''                                   # the VM image
  condition: succeeded()                        # whether or not to run this template
  buildExternals: ''                            # the build number to download externals from
  postBuildSteps: []                            # any additional steps to run after the build
  artifactName: ''                              # the name of the artifact to merge this run into

jobs:
  - job: ${{ parameters.name }}
    displayName: ${{ parameters.displayName }}
    pool:
      ${{ if startsWith(parameters.vmImage, 'Azure-Pipelines-') }}:
        vmImage: ${{ replace(parameters.vmImage, 'Azure-Pipelines-', '') }}
      ${{ if not(startsWith(parameters.vmImage, 'Azure-Pipelines-')) }}:
        name: ${{ parameters.vmImage }}
    condition: ${{ parameters.condition }}
    steps:
      - checkout: none
      - pwsh: |
          $buildId = "${{ parameters.buildExternals }}"
          if ($env:RESOURCES_PIPELINE_SKIASHARP_RUNID) {
            $buildId = $env:RESOURCES_PIPELINE_SKIASHARP_RUNID
          }
          $pipelineId = "$env:SYSTEM_DEFINITIONID"
          if ($env:RESOURCES_PIPELINE_SKIASHARP_PIPELINEID) {
            $pipelineId = $env:RESOURCES_PIPELINE_SKIASHARP_PIPELINEID
          }
          echo "##vso[task.setvariable variable=DOWNLOAD_BUILD_ID]$buildId"
          echo "##vso[task.setvariable variable=DOWNLOAD_PIPELINE_ID]$pipelineId"
      - task: DownloadBuildArtifacts@0
        displayName: Download the pre-built ${{ parameters.name }} artifacts
        inputs:
          buildType: 'specific'
          project: '$(System.TeamProjectId)'
          pipeline: '$(DOWNLOAD_PIPELINE_ID)'
          buildVersionToDownload: 'specific'
          buildId: '$(DOWNLOAD_BUILD_ID)'
          downloadType: 'single'
          artifactName: ${{ parameters.name }}
          downloadPath: 'download-temp'
      - pwsh: |
          New-Item '.\output\' -Type Directory -Force | Out-Null
          Get-ChildItem '.\download-temp\${{ parameters.name }}\' | Copy-Item -Destination '.\output\' -Recurse -Force
          Remove-Item '.\download-temp\${{ parameters.name }}\' -Recurse -Force
        displayName: Move the ${{ parameters.name }} artifacts to the output directory
      - task: PublishBuildArtifacts@1
        displayName: Publish the ${{ parameters.name }} artifacts
        inputs:
          artifactName: ${{ parameters.name }}
          pathToPublish: 'output'
      - ${{ if ne(parameters.artifactName, '') }}:
        - task: PublishBuildArtifacts@1
          displayName: Publish the combined ${{ parameters.artifactName }} artifacts
          inputs:
            artifactName: ${{ parameters.artifactName }}
            pathToPublish: 'output'
      - ${{ parameters.postBuildSteps }}
