# TODO: implement features

trigger:
  - master

variables:
  FeatureNamePrefix: 'feature/'
  FeatureName: ''
  VERBOSITY: normal
  GIT_SHA: $(Build.SourceVersion)
  GIT_BRANCH_NAME: $(Build.SourceBranchName)
  BUILD_NUMBER: $(Build.BuildId)
  FEATURE_NAME: $(FeatureName)
  BASE_LINUX_PACKAGES: curl mono-complete msbuild
  NATIVE_LINUX_PACKAGES: $(BASE_LINUX_PACKAGES) python git libfontconfig1-dev
  TIZEN_LINUX_PACKAGES: $(BASE_LINUX_PACKAGES) python git openjdk-8-jdk zip libxcb-xfixes0 libxcb-render-util0 libwebkitgtk-1.0-0 libxcb-image0 acl libsdl1.2debian libv4l-0 libxcb-randr0 libxcb-shape0 libxcb-icccm4 libsm6 gettext rpm2cpio cpio bridge-utils openvpn
  MANAGED_LINUX_PACKAGES: $(BASE_LINUX_PACKAGES) dotnet-sdk-2.1 ttf-ancient-fonts

jobs:
  # PRE-BUILD JOBS
  - job: prepare
    displayName: Prepare Build
    pool:
      vmImage: ubuntu-16.04
    steps:
      - checkout: none
      - script: |
          echo Preparing to build $(GIT_SHA) on branch $(GIT_BRANCH_NAME)...
          echo Build started for build \# $(BUILD_NUMBER).

  # # NATIVE JOBS - WINDOWS
  # - job: native_android_windows
  #   displayName: Build Native Android (Windows)
  #   dependsOn: prepare
  #   pool:
  #     vmImage: vs2017-win2016
  #   steps:
  #     - task: UsePythonVersion@0
  #       inputs:
  #         versionSpec: '2.7'
  #         architecture: 'x64'
  #     - checkout: self
  #       clean: true
  #       submodules: recursive
  #     - powershell: .\scripts\install-android-ndk.ps1
  #     - powershell: .\bootstrapper.ps1 -t externals-android -v $env:VERBOSITY
  #       env:
  #         ANDROID_NDK_HOME: $(USERPROFILE)\android-ndk
  #     - task: PublishPipelineArtifact@0
  #       inputs:
  #         artifactName: native-android-windows
  #         targetPath: 'output'
  # - job: native_tizen_windows
  #   displayName: Build Native Tizen (Windows)
  #   dependsOn: prepare
  #   pool:
  #     vmImage: vs2017-win2016
  #   steps:
  #     - task: UsePythonVersion@0
  #       inputs:
  #         versionSpec: '2.7'
  #         architecture: 'x64'
  #     - checkout: self
  #       clean: true
  #       submodules: recursive
  #     - powershell: .\scripts\install-tizen.ps1
  #     - powershell: .\bootstrapper.ps1 -t externals-tizen -v $env:VERBOSITY
  #     - task: PublishPipelineArtifact@0
  #       inputs:
  #         artifactName: native-tizen-windows
  #         targetPath: 'output'
  # - job: native_uwp_windows
  #   displayName: Build Native UWP (Windows)
  #   dependsOn: prepare
  #   pool:
  #     vmImage: vs2017-win2016
  #   steps:
  #     - task: UsePythonVersion@0
  #       inputs:
  #         versionSpec: '2.7'
  #         architecture: 'x64'
  #     - checkout: self
  #       clean: true
  #       submodules: recursive
  #     - powershell: .\bootstrapper.ps1 -t externals-uwp -v $env:VERBOSITY
  #     - task: PublishPipelineArtifact@0
  #       inputs:
  #         artifactName: native-uwp-windows
  #         targetPath: 'output'
  # - job: native_win32_windows
  #   displayName: Build Native Win32 (Windows)
  #   dependsOn: prepare
  #   pool:
  #     vmImage: vs2017-win2016
  #   steps:
  #     - task: UsePythonVersion@0
  #       inputs:
  #         versionSpec: '2.7'
  #         architecture: 'x64'
  #     - checkout: self
  #       clean: true
  #       submodules: recursive
  #     - powershell: .\bootstrapper.ps1 -t externals-windows -v $env:VERBOSITY
  #     - task: PublishPipelineArtifact@0
  #       inputs:
  #         artifactName: native-win32-windows
  #         targetPath: 'output'

  # # NATIVE JOBS - MAC
  # - job: native_android_macos
  #   displayName: Build Native Android (macOS)
  #   dependsOn: prepare
  #   pool:
  #     vmImage: macos-10.13
  #   steps:
  #     - checkout: self
  #       clean: true
  #       submodules: recursive
  #     - bash: ./scripts/install-android-ndk.sh
  #     - bash: ./bootstrapper.sh -t externals-android -v $VERBOSITY
  #       env:
  #         ANDROID_NDK_HOME: $(HOME)/android-ndk
  #     - task: PublishPipelineArtifact@0
  #       inputs:
  #         artifactName: native-android-macos
  #         targetPath: 'output'
  # - job: native_ios_macos
  #   displayName: Build Native iOS (macOS)
  #   dependsOn: prepare
  #   pool:
  #     vmImage: macos-10.13
  #   steps:
  #     - checkout: self
  #       clean: true
  #       submodules: recursive
  #     - bash: ./bootstrapper.sh -t externals-ios -v $VERBOSITY
  #     - task: PublishPipelineArtifact@0
  #       inputs:
  #         artifactName: native-ios-macos
  #         targetPath: 'output'
  # - job: native_macos_macos
  #   displayName: Build Native macOS (macOS)
  #   dependsOn: prepare
  #   pool:
  #     vmImage: macos-10.13
  #   steps:
  #     - checkout: self
  #       clean: true
  #       submodules: recursive
  #     - bash: ./bootstrapper.sh -t externals-macos -v $VERBOSITY
  #     - task: PublishPipelineArtifact@0
  #       inputs:
  #         artifactName: native-macos-macos
  #         targetPath: 'output'
  # - job: native_tizen_macos
  #   displayName: Build Native Tizen (macOS)
  #   dependsOn: prepare
  #   pool:
  #     vmImage: macos-10.13
  #   steps:
  #     - checkout: self
  #       clean: true
  #       submodules: recursive
  #     - bash: ./scripts/install-tizen.sh
  #     - bash: ./bootstrapper.sh -t externals-tizen -v $VERBOSITY
  #     - task: PublishPipelineArtifact@0
  #       inputs:
  #         artifactName: native-tizen-macos
  #         targetPath: 'output'
  # - job: native_tvos_macos
  #   displayName: Build Native tvOS (macOS)
  #   dependsOn: prepare
  #   pool:
  #     vmImage: macos-10.13
  #   steps:
  #     - checkout: self
  #       clean: true
  #       submodules: recursive
  #     - bash: ./bootstrapper.sh -t externals-tvos -v $VERBOSITY
  #     - task: PublishPipelineArtifact@0
  #       inputs:
  #         artifactName: native-tvos-macos
  #         targetPath: 'output'
  # - job: native_watchos_macos
  #   displayName: Build Native watchOS (macOS)
  #   dependsOn: prepare
  #   pool:
  #     vmImage: macos-10.13
  #   steps:
  #     - checkout: self
  #       clean: true
  #       submodules: recursive
  #     - bash: ./bootstrapper.sh -t externals-watchos -v $VERBOSITY
  #     - task: PublishPipelineArtifact@0
  #       inputs:
  #         artifactName: native-watchos-macos
  #         targetPath: 'output'

  # NATIVE JOBS - LINUX
  - job: native_linux_linux
    displayName: Build Native Linux (Linux)
    dependsOn: prepare
    pool:
      vmImage: ubuntu-16.04
    container: ubuntu:14.04
    steps:
      - checkout: self
        clean: true
        submodules: recursive
      - bash: |
          sudo apt update
          sudo apt install apt-transport-https
          sudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 3FA7E0328081BFF6A14DA29AA6A19B38D3D831EF
          echo "deb https://download.mono-project.com/repo/ubuntu stable-trusty main" | sudo tee /etc/apt/sources.list.d/mono-official-stable.list
          sudo apt update
          sudo apt install $NATIVE_LINUX_PACKAGES
      - bash: ./bootstrapper.sh -t externals-linux -v $VERBOSITY
        env:
          CC: clang-3.8
          CXX: clang++-3.8
      - task: PublishPipelineArtifact@0
        inputs:
          artifactName: native-linux-linux
          targetPath: 'output'

  # # MANAGED JOBS
  # - job: managed_windows
  #   displayName: Build Managed Windows
  #   dependsOn:
  #     - native_android_windows
  #     - native_ios_macos
  #     - native_linux_linux
  #     - native_macos_macos
  #     - native_tizen_windows
  #     - native_tvos_macos
  #     - native_uwp_windows
  #     - native_watchos_macos
  #     - native_win32_windows
  #   pool:
  #     vmImage: vs2017-win2016
  #   steps:
  #     - checkout: self
  #       clean: true
  #       submodules: recursive
  #     - bash: .\bootstrapper.ps1 -t everything --skipexternals=all -v $env:VERBOSITY
  #     - task: PublishPipelineArtifact@0
  #       inputs:
  #         artifactName: managed-windows
  #         targetPath: 'output'
  # - job: managed_macos
  #   displayName: Build Managed macOS
  #   dependsOn:
  #     - native_android_windows
  #     - native_ios_macos
  #     - native_linux_linux
  #     - native_macos_macos
  #     - native_tizen_windows
  #     - native_tvos_macos
  #     - native_uwp_windows
  #     - native_watchos_macos
  #     - native_win32_windows
  #   pool:
  #     vmImage: macos-10.13
  #   steps:
  #     - checkout: self
  #       clean: true
  #       submodules: recursive
  #     - bash: ./bootstrapper.sh1 -t everything --skipexternals=all -v $env:VERBOSITY
  #     - task: PublishPipelineArtifact@0
  #       inputs:
  #         artifactName: managed-macos
  #         targetPath: 'output'

  # POST-BUILD JOBS
