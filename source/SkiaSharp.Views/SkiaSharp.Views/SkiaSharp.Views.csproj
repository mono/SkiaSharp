<Project Sdk="Microsoft.NET.Sdk">
  <PropertyGroup>
    <TargetFrameworks>$(PlatformTargetFrameworks);$(WindowsDesktopTargetFrameworks)</TargetFrameworks>
    <PackagingGroup>SkiaSharp.Views</PackagingGroup>
    <PackageId>SkiaSharp.Views</PackageId>
    <Title>SkiaSharp Views &amp; Layers for Android, iOS, Mac Catalyst, macOS, and tvOS</Title>
  </PropertyGroup>
  <PropertyGroup Condition="$(TargetFramework.Contains('-ios')) or $(TargetFramework.Contains('-maccatalyst'))">
    <RootNamespace>SkiaSharp.Views.iOS</RootNamespace>
    <AssemblyName>SkiaSharp.Views.iOS</AssemblyName>
  </PropertyGroup>
  <PropertyGroup Condition="$(TargetFramework.Contains('-tvos'))">
    <RootNamespace>SkiaSharp.Views.tvOS</RootNamespace>
    <AssemblyName>SkiaSharp.Views.tvOS</AssemblyName>
  </PropertyGroup>
  <PropertyGroup Condition="$(TargetFramework.Contains('-macos'))">
    <RootNamespace>SkiaSharp.Views.Mac</RootNamespace>
    <AssemblyName>SkiaSharp.Views.Mac</AssemblyName>
  </PropertyGroup>
  <PropertyGroup Condition="$(TargetFramework.Contains('-android'))">
    <RootNamespace>SkiaSharp.Views.Android</RootNamespace>
    <AssemblyName>SkiaSharp.Views.Android</AssemblyName>
  </PropertyGroup>
  <PropertyGroup Condition="$(TargetFramework.Contains('-tizen'))">
    <RootNamespace>SkiaSharp.Views.Tizen</RootNamespace>
    <AssemblyName>SkiaSharp.Views.Tizen</AssemblyName>
  </PropertyGroup>
  <PropertyGroup Condition="$(TargetFramework.Contains('-windows')) or $(TargetFramework.StartsWith('net4'))">
    <RootNamespace>SkiaSharp.Views.InvalidPlatform</RootNamespace>
    <AssemblyName>SkiaSharp.Views.InvalidPlatform</AssemblyName>
  </PropertyGroup>
  <ItemGroup>
    <ProjectReference Include="..\..\..\binding\SkiaSharp\SkiaSharp.csproj" />
  </ItemGroup>
  <ItemGroup>
    <!-- Remove all the platform-specific files -->
    <Compile Remove="Platform\**" />
    <None Include="Platform\**" />
  </ItemGroup>
  <ItemGroup Condition="$(TargetFramework.Contains('-ios')) or $(TargetFramework.Contains('-maccatalyst')) or $(TargetFramework.Contains('-tvos'))">
    <!-- iOS / tvOS / Mac Catalyst -->
    <Compile Include="..\SkiaSharp.Views.Shared\**\*.cs" Link="%(RecursiveDir)%(Filename)%(Extension)" />
    <Compile Include="Platform\Apple\**\*.cs" />
    <Compile Include="Platform\iOS\**\*.cs" />
  </ItemGroup>
  <ItemGroup Condition="$(TargetFramework.Contains('-macos'))">
    <!-- macOS -->
    <Compile Include="..\SkiaSharp.Views.Shared\**\*.cs" Link="%(RecursiveDir)%(Filename)%(Extension)" />
    <Compile Include="Platform\Apple\**\*.cs" />
    <Compile Include="Platform\macOS\**\*.cs" />
  </ItemGroup>
  <ItemGroup Condition="$(TargetFramework.Contains('-android'))">
    <!-- Android -->
    <Compile Include="..\SkiaSharp.Views.Shared\**\*.cs" Link="%(RecursiveDir)%(Filename)%(Extension)" />
    <Compile Include="Platform\Android\**\*.cs" />
    <AndroidResource Include="Platform\Android\Resources\*\*" />
  </ItemGroup>
  <ItemGroup Condition="$(TargetFramework.Contains('-tizen'))">
    <!-- Tizen -->
    <Compile Include="..\SkiaSharp.Views.Shared\**\*.cs" Link="%(RecursiveDir)%(Filename)%(Extension)" />
    <Compile Include="Platform\Tizen\**\*.cs" />
  </ItemGroup>
  <!-- Replace windows/desktop with just placeholders -->
  <ItemGroup Condition="$(TargetFramework.Contains('-windows')) or $(TargetFramework.StartsWith('net4'))">
    <Compile Remove="@(Compile)" />
  </ItemGroup>
  <Target Name="_UpdateWindowsPackageFiles" BeforeTargets="_GetPackageFiles">
    <WriteLinesToFile File="$(IntermediateOutputPath)_._" Lines="$(PackageDescription)" Overwrite="True" />
    <ItemGroup>
      <FileWrites Include="$(IntermediateOutputPath)_._" />
      <_AssemblyOutputFiles Include="@(_BuildOutputInPackage->HasMetadata('TargetFramework'))" />
      <_WindowsAssemblyOutputFiles Include="@(_AssemblyOutputFiles)" Condition="$([MSBuild]::ValueOrDefault('%(TargetFramework)', '').StartsWith('net4'))" />
      <_WindowsAssemblyOutputFiles Include="@(_AssemblyOutputFiles)" Condition="$([MSBuild]::ValueOrDefault('%(TargetFramework)', '').Contains('-windows'))" />
      <_SymbolOutputFiles Include="@(_TargetPathsToSymbols->HasMetadata('TargetFramework'))" />
      <_WindowsSymbolOutputFiles Include="@(_SymbolOutputFiles)" Condition="$([MSBuild]::ValueOrDefault('%(TargetFramework)', '').StartsWith('net4'))" />
      <_WindowsSymbolOutputFiles Include="@(_SymbolOutputFiles)" Condition="$([MSBuild]::ValueOrDefault('%(TargetFramework)', '').Contains('-windows'))" />
      <_WindowsPlaceholders Include="@(_WindowsAssemblyOutputFiles->'$(IntermediateOutputPath)_._')" PackagePath="lib\%(TargetFramework)\_._" Condition="'%(Extension)' == '.dll'" />
      <None Include="@(_WindowsPlaceholders)" Pack="True" />
      <_BuildOutputInPackage Remove="@(_WindowsAssemblyOutputFiles)" />
      <_TargetPathsToSymbols Remove="@(_WindowsSymbolOutputFiles)" />
    </ItemGroup>
  </Target>
  <Target Name="IncludeAdditionalTfmSpecificPackageFiles">
    <ItemGroup Condition="$(TargetFramework.StartsWith('net4'))">
      <!-- net4.x -->
      <TfmSpecificPackageFile Include="nuget\buildTransitive\net4\SkiaSharp.Views.targets" PackagePath="buildTransitive\$(NuGetShortFolderName)\$(PackageId).targets" />
    </ItemGroup>
    <ItemGroup Condition="$(TargetFramework.Contains('-windows'))">
      <!-- net4.x -->
      <TfmSpecificPackageFile Include="nuget\buildTransitive\windows\SkiaSharp.Views.targets" PackagePath="buildTransitive\$(NuGetShortFolderName)\$(PackageId).targets" />
    </ItemGroup>
  </Target>
</Project>
