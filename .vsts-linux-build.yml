jobs:
- job: Linux
  container: unoplatform/wasm-build:2.1.1
  dependsOn: SkiaLib_WebAssembly

  pool:
    vmImage: 'ubuntu-latest'

  variables:
    NUGET_PACKAGES: $(build.sourcesdirectory)/.nuget
    EMSCRIPTEN_VERSION: 1.39.11

  steps:
  - checkout: self
    clean: true
  
  - bash: |
      cd ~
      echo Installing emscripten $(EMSCRIPTEN_VERSION)
      git clone --branch $(EMSCRIPTEN_VERSION) https://github.com/emscripten-core/emsdk
      cd ~/emsdk
      ./emsdk install $(EMSCRIPTEN_VERSION)
      ./emsdk activate $(EMSCRIPTEN_VERSION)

    displayName: 'Setup Emscripten'

  - bash: |
      cd ~/emsdk
      wget https://raw.githubusercontent.com/mono/mono/b777471fcace85325e2c2af0e460f4ecd8059b5a/sdks/builds/fix-emscripten-8511.diff
      cd ~/emsdk/upstream/emscripten
      patch -N -p1 < ~/emsdk/fix-emscripten-8511.diff

    displayName: 'Apply Emscripten Mono patches'

  - task: DownloadBuildArtifacts@0
    inputs:
        artifactName: canvaskit_wasm
        downloadPath: '$(build.sourcesdirectory)/externals/skia/out'

  - bash: |
      chmod +x scripts/wasm-uitest-run.sh
      scripts/wasm-uitest-run.sh

    env:
      BUILD_SOURCESDIRECTORY: "$(build.sourcesdirectory)"
      BUILD_ARTIFACTSTAGINGDIRECTORY: "$(build.artifactstagingdirectory)"

    displayName: 'Running build'

  - task: CopyFiles@2
    displayName: 'Publish Wasm Binaries'
    inputs:
      SourceFolder: $(build.sourcesdirectory)/samples/Gallery/Uno/SkiaSharpSample.Wasm/bin/Release/netstandard2.0/dist
      Contents: '**/*.*'
      TargetFolder: $(build.artifactstagingdirectory)/skiasharp-wasm
      CleanTargetFolder: false
      OverWrite: false
      flattenFolders: false
      
  - task: PublishTestResults@2
    condition: always()
    inputs:
      testRunTitle: 'WebAssembly Test Run'
      testResultsFormat: 'NUnit'
      testResultsFiles: '$(build.sourcesdirectory)/scripts/TestResult.xml'

  - task: PublishBuildArtifacts@1
    condition: always()
    inputs:
      PathtoPublish: $(build.artifactstagingdirectory)
      ArtifactName: skiasharp-aot-drop
      ArtifactType: Container
